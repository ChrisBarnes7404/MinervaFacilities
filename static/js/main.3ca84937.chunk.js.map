{"version":3,"sources":["components/Session/context.js","components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","components/Session/withAuthentication.js","routes.js","components/Session/withAuthorization.js","components/Session/withEmailVerification.js","images/minerva-transparent-clean.png","components/Navigation.js","components/Auth/PasswordChangePage.js","images/minerva-transparent-vector.png","components/Auth/PasswordForgetPage.js","components/Auth/SignUpPage.js","components/Auth/SignInPage.js","components/Auth/SignOutPage.js","components/Utils/ToggleSwitch.js","components/Utils/AddressForm.js","components/Utils/JoinCompanyForm.js","components/Utils/CreateCompanyForm.js","components/Utils/CreateBuildingForm.js","components/Utils/CreateFloorForm.js","components/Utils/CreateRoomForm.js","components/Utils/CreateReportForm.js","components/Displays/AccountPage.js","components/Displays/Users/UserList.js","components/Displays/Users/UserItem.js","components/Displays/Users/index.js","components/Displays/Users/AdminPage.js","components/Displays/LandingPage.js","components/Displays/NotFoundPage.js","components/Displays/Companies/CompanyList.js","components/Displays/Companies/CompanyDetails.js","components/Displays/Companies/index.js","components/Displays/Companies/CompaniesPage.js","components/Displays/Buildings/BuildingList.js","components/Displays/Buildings/BuildingDetails.js","components/Displays/Buildings/index.js","components/Displays/Buildings/BuildingsPage.js","components/Displays/Floors/FloorList.js","components/Displays/Floors/FloorDetails.js","components/Displays/Floors/index.js","components/Displays/Floors/FloorsPage.js","components/Displays/Rooms/RoomList.js","components/Displays/Rooms/RoomDetails.js","components/Displays/Rooms/index.js","components/Displays/Rooms/RoomsPage.js","components/Displays/Reports/ReportList.js","components/Displays/Reports/ReportDetails.js","components/Displays/Reports/index.js","components/Displays/Reports/ReportsPage.js","components/Utils/PromptSaveBookmark.js","components/App.js","serviceWorker.js","reportWebVitals.js","index.js"],"names":["AuthUserContext","React","createContext","FirebaseContext","withFirebase","Component","props","Consumer","firebase","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Firebase","doCreateUserWithEmailAndPassword","email","password","analytics","logEvent","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignInWithGoogle","signInWithPopup","googleProvider","doSignInWithFacebook","facebookProvider","doSignInWithTwitter","twitterProvider","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","doSendEmailVerification","sendEmailVerification","url","onAuthUserListener","next","fallback","onAuthStateChanged","authUser","user","uid","once","then","snapshot","dbUser","val","roles","emailVerified","providerData","db","ref","users","setUserCompany","userID","companyID","update","company_id","company","companies","createCompany","companyData","newCompanyKey","push","key","updates","owner","ownerID","companyTitle","building","buildings","createBuilding","buildingData","buildingTitle","newBuildingKey","floor","floors","createFloor","floorData","buildingID","floorTitle","newFloorKey","room","rooms","createRoom","roomData","floorID","roomTitle","newRoomKey","report","reports","createReport","reportData","location","reportTitle","reporter","roomID","newReportKey","console","log","app","initializeApp","this","serverValue","database","ServerValue","emailAuthProvider","EmailAuthProvider","storage","performance","GoogleAuthProvider","FacebookAuthProvider","TwitterAuthProvider","withAuthentication","WithAuthentication","state","JSON","parse","localStorage","getItem","listener","setItem","stringify","setState","removeItem","Provider","value","HOME","SIGN_UP","SIGN_IN","PASSWORD_FORGET","ACCOUNT","ADMIN","COMPANIES","BUILDINGS","FLOORS","ROOMS","REPORTS","withAuthorization","condition","WithAuthorization","history","ROUTES","compose","withRouter","withEmailVerification","WithEmailVerification","onSendEmailVerification","isSent","map","provider","providerId","includes","needsEmailVerification","type","onClick","disabled","Navigation","className","defaultactivekey","id","role","data-toggle","aria-controls","aria-selected","to","icon","faHome","pathname","INITIAL_STATE","passwordOne","passwordTwo","error","PasswordChangeForm","onSubmit","event","catch","preventDefault","onChange","target","name","isInvalid","hidden","autoComplete","placeholder","message","PasswordForgetFormBase","PasswordForgetLink","BackButton","goBack","faChevronLeft","PasswordForgetPage","alt","src","Logo","PasswordForgetForm","username","isAdmin","SignUpFormBase","set","code","onChangeCheckbox","checked","SignUpLink","SignUpForm","SignUpPage","ERROR_CODE_ACCOUNT_EXISTS","ERROR_MSG_ACCOUNT_EXISTS","SignInFormBase","SignInGoogleBase","socialAuthUser","displayName","faGoogle","SignInFacebookBase","additionalUserInfo","profile","faFacebookF","SignInTwitterBase","faTwitter","SignInLink","SignInForm","SignInGoogle","SignInPage","faSignOutAlt","ToggleSwitch","optionLabels","small","e","tabIndex","onKeyDown","keyCode","handleKeyPress","htmlFor","data-yes","data-no","defaultProps","CompanyFormBase","JoinCompanyPage","JoinCompanyForm","CompanyForm","onCreateCompany","ownerName","companyAddress","createdAt","TIMESTAMP","BuildingForm","onCreateBuilding","BuildingData","buildingAddress","FloorForm","onCreateFloor","FloorData","floorAddress","RoomForm","onCreateRoom","RoomData","roomAddress","ReportForm","onCreateReport","reportMessage","reportStatus","reportServiceType","image","reportImageName","reportImageURL","reportID","initialState","isBlocking","length","onAutoFill","handleChange","files","upload","put","on","progress","Math","round","bytesTransferred","totalBytes","child","getDownloadURL","image_url","image_name","rows","max","when","SIGN_IN_METHODS","LoginManagementBase","fetchSignInMethods","fetchSignInMethodsForEmail","activeSignInMethods","onSocialLoginLink","linkWithPopup","onDefaultLoginLink","credential","linkAndRetrieveDataWithCredential","onUnlink","unlink","signInMethod","onlyOneLeft","isEnabled","onLink","SocialLoginToggle","DefaultLoginToggle","LoginManagement","useState","settings","setSettings","onSettingsChange","width","height","UserList","loading","usersObject","usersList","Object","keys","off","UserItem","onSendPasswordResetEmail","match","params","AdminPage","exact","path","component","LandingPage","NotFoundPage","style","textAlign","CompanyList","onNextPage","limit","onListenForCompanies","orderByChild","limitToLast","companyObject","companyList","CreateCompanyForm","CompanyDetail","onToggleEditMode","editMode","onSaveEdit","companySnapshot","editedAt","onRemoveCompany","dbUSER","remove","fullDateCreated","Date","toString","split","dateCreated","fullDateEdited","dateEdited","buildingList","buildingsList","faEdit","auhtUser","faTrash","CompaniesPage","CompanyDetails","BuildingList","onListenForBuildings","buildingsObject","CreateBuildingForm","BuildingDetail","buildingSnapshot","onRemoveBuilding","companyOwner","tpye","BuildingsPage","BuildingDetails","FloorList","onListenForFloors","floorsObject","floorList","CreateFloorForm","FloorDetail","floorSnapshot","onRemoveFloor","FloorsPage","FloorDetails","RoomList","roomsObject","roomsList","CreateRoomForm","RoomDetails","roomSnapshot","onRemoveRoom","RoomsPage","ReportList","onListenForReports","reportsObject","reportList","CreateReportForm","ReportDetail","onChangeEdits","reportSnapshot","onRemoveReport","confirmAlert","title","buttons","label","FullDateEdited","href","ReportsPage","ReportDetails","PromptSaveBookmark","showMessage","userAgent","window","navigator","toLowerCase","test","isIos","standalone","ShowMessage","showInstallMessage","faShare","faPlus","AccountPage","Boolean","hostname","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3ca84937.chunk.js","sourcesContent":["import React from 'react';\n\nconst AuthUserContext = React.createContext(null);\n\nexport default AuthUserContext;\n","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n  <FirebaseContext.Consumer>\n    {firebase => <Component {...props} firebase={firebase} />}\n  </FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;\n","import app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nimport 'firebase/storage';\nimport 'firebase/analytics';\nimport 'firebase/performance';\n\nconst config = {\n  apiKey: process.env.REACT_APP_API_KEY || 'AIzaSyBnJSs5VkOG4k2VAByyYU8pxeyOthF3FFs',\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN || 'minerva-facilities.firebaseapp.com',\n  databaseURL: process.env.REACT_APP_DATABASE_URL || 'https://minerva-facilities.firebaseio.com',\n  projectId: process.env.REACT_APP_PROJECT_ID || 'minerva-facilities',\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET || 'minerva-facilities.appspot.com',\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID || '286455586521',\n  appId: process.env.REACT_APP_APP_ID || '1:286455586521:web:658ab0b3a18a1dcebfe8c8',\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID || 'G-674WMEGJDS',\n};\n\n\nclass Firebase {\n  constructor() {\n    app.initializeApp(config);\n\n    /* Helper */\n    this.serverValue = app.database.ServerValue;\n    this.emailAuthProvider = app.auth.EmailAuthProvider;\n\n    /* Firebase APIs */\n    this.auth = app.auth();\n    this.db = app.database();\n    this.storage = app.storage();\n    this.analytics = app.analytics();\n    this.performance = app.performance();\n\n    /* Social Sign In Method Provider */\n    this.googleProvider = new app.auth.GoogleAuthProvider();\n    this.facebookProvider = new app.auth.FacebookAuthProvider();\n    this.twitterProvider = new app.auth.TwitterAuthProvider();\n  }\n\n  // *** Auth API ***\n  doCreateUserWithEmailAndPassword = (email, password) => {\n    this.analytics.logEvent('Created A New User Using Email & Pass');\n    return this.auth.createUserWithEmailAndPassword(email, password);\n  };\n\n  doSignInWithEmailAndPassword = (email, password) => {\n    this.analytics.logEvent('User Logged In Using Email & Pass');\n    return this.auth.signInWithEmailAndPassword(email, password);\n  };\n\n  doSignInWithGoogle = () => {\n    this.analytics.logEvent('User Logged In Using Google');\n    return this.auth.signInWithPopup(this.googleProvider);\n  };\n\n  doSignInWithFacebook = () => this.auth.signInWithPopup(this.facebookProvider);\n\n  doSignInWithTwitter = () => this.auth.signInWithPopup(this.twitterProvider);\n\n  doSignOut = () => {\n    this.analytics.logEvent('User Logged Out');\n    return this.auth.signOut();\n  };\n\n  doPasswordReset = (email) => {\n    this.analytics.logEvent('User Tried To Rest Their Password');\n    return this.auth.sendPasswordResetEmail(email);\n  };\n\n  doPasswordUpdate = (password) => {\n    this.analytics.logEvent('User Changed Their Password');\n    return this.auth.currentUser.updatePassword(password);\n  };\n\n  doSendEmailVerification = () => {\n    this.analytics.logEvent('Email Verification Sent');\n    return this.auth.currentUser.sendEmailVerification({\n      url: process.env.REACT_APP_CONFIRMATION_EMAIL_REDIRECT || 'http://localhost:3000/',\n    });\n  };\n\n  // *** Merge Auth and DB User API *** //\n  onAuthUserListener = (next, fallback) =>\n    this.auth.onAuthStateChanged((authUser) => {\n      if (authUser) {\n        this.user(authUser.uid)\n          .once('value')\n          .then((snapshot) => {\n            const dbUser = snapshot.val();\n\n            // default empty roles\n            if (!dbUser.roles) {\n              dbUser.roles = 'EMPLOYEE';\n            }\n\n            // merge auth and db user\n            authUser = {\n              uid: authUser.uid,\n              email: authUser.email,\n              emailVerified: authUser.emailVerified,\n              providerData: authUser.providerData,\n              ...dbUser,\n            };\n\n            next(authUser);\n          });\n      } else {\n        fallback();\n      }\n    });\n\n  // *** User API ***\n  user = (uid) => {\n    this.analytics.logEvent(\"Referencing A User's Data\");\n    return this.db.ref(`users/${uid}`);\n  };\n  users = () => {\n    this.analytics.logEvent('Referencing Users List');\n    this.db.ref('users');\n  };\n  setUserCompany = (userID, companyID) => this.user(userID).update({ company_id: companyID });\n\n  // **** Company API ***\n  company = (uid) => {\n    this.analytics.logEvent(\"Referencing A Company's Data\");\n    this.db.ref(`companies/${uid}`);\n  };\n  companies = () => {\n    this.analytics.logEvent(\"Referencing Companies List\");\n    this.db.ref('companies');\n  };\n\n  createCompany = (companyData) => {\n    var newCompanyKey = this.db.ref('companies').push().key;\n    var updates = {};\n    updates['/companies/' + newCompanyKey] = companyData;\n    updates['/users/' + companyData.owner.ownerID + '/companies/' + companyData.companyTitle] = newCompanyKey;\n    updates['/users/' + companyData.owner.ownerID + '/company_id'] = newCompanyKey;\n    \n    this.analytics.logEvent(\"Creating A New Company\");\n    this.db.ref().update(updates);\n    return newCompanyKey;\n  };\n\n  // **** Building API ***\n  building = (uid) => {\n    this.analytics.logEvent(\"Referencing A Building's Data\");\n    this.db.ref(`buildings/${uid}`);\n  };\n  buildings = () => {\n    this.analytics.logEvent(\"Referencing Buildings List\");\n    this.db.ref('buildings');\n  };\n\n  createBuilding = (buildingData) => {\n    let { companyID, buildingTitle } = buildingData;\n    var newBuildingKey = this.db.ref('buildings').push().key;\n    var updates = {};\n    updates['/companies/' + companyID + '/buildings/' + buildingTitle] = newBuildingKey;\n    updates['/buildings/' + newBuildingKey] = buildingData;\n\n    this.analytics.logEvent(\"Creating A New Building\");\n    this.db.ref().update(updates);\n    return newBuildingKey;\n  };\n\n  // **** Floors API ***\n  floor = (uid) => {\n    this.analytics.logEvent(\"Referencing A Floor's Data\");\n    this.db.ref(`floors/${uid}`);\n  };\n  floors = () => {\n    this.analytics.logEvent(\"Referencing Floors List\");\n    this.db.ref('floors');\n  };\n\n  createFloor = (floorData) => {\n    let { companyID, buildingID, floorTitle } = floorData;\n    var newFloorKey = this.db.ref('floors').push().key;\n    var updates = {};\n    updates['/companies/' + companyID + '/buildings/' + buildingID + '/floors/' + floorTitle] = newFloorKey;\n    updates['/floors/' + newFloorKey] = floorData;\n\n    this.analytics.logEvent(\"Creating A New Floor\");\n    this.db.ref().update(updates);\n    return newFloorKey;\n  };\n\n  // *** Rooms API ***\n  room = (uid) => {\n    this.analytics.logEvent(\"Referencing A Rooms's Data\");\n    this.db.ref(`rooms/${uid}`);\n  };\n  rooms = () => {\n    this.analytics.logEvent(\"Referencing Rooms List\");\n    this.db.ref('rooms');\n  };\n\n  createRoom = (roomData) => {\n    let { companyID, buildingID, floorID, roomTitle } = roomData;\n    var newRoomKey = this.db.ref('rooms').push().key;\n    var updates = {};\n    updates['/companies/' + companyID + '/buildings/' + buildingID + '/floors/' + floorID + '/rooms/' + roomTitle] = newRoomKey;\n    updates['/rooms/' + newRoomKey] = roomData;\n\n    this.analytics.logEvent(\"Creating A New Room\");\n    this.db.ref().update(updates);\n    return newRoomKey;\n  };\n\n  // *** Report API ***\n  report = (uid) => {\n    this.analytics.logEvent(\"Referencing A Reports's Data\");\n    this.db.ref(`reports/${uid}`);\n  };\n  reports = () => {\n    this.analytics.logEvent(\"Referencing Reports List\");\n    this.db.ref('reports');\n  };\n\n  createReport = (reportData) => {\n    let { location, reportTitle, reporter } = reportData;\n    let { companyID, buildingID, floorID, roomID } = location;\n\n    // Get a key for a new room.\n    var newReportKey = this.db.ref('reports').push().key;\n    // Write the new room's data simultaneously in the compnay list and the user's companies list.\n    var updates = {};\n    // updates['/companies/' + companyID + '/buildings/' + buildingID + '/floors/' + floorID + '/rooms/' + roomID + '/reports/' + reportTitle] = newReportKey;\n    updates['/reports/' + newReportKey] = reportData;\n    updates['/users/' + reporter.ownerID + '/reports/' + reportTitle] = newReportKey;\n\n    console.log(companyID, buildingID, floorID, roomID, reportTitle, reporter);\n    this.analytics.logEvent(\"Creating A New Report\");\n    this.db.ref().update(updates);\n    return newReportKey;\n  };\n}\n\nexport default Firebase;\n","import FirebaseContext, { withFirebase } from './context';\nimport Firebase from './firebase';\n\nexport default Firebase;\n\nexport { FirebaseContext, withFirebase };\n","import React from 'react';\n\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\n\nconst withAuthentication = Component => {\n  class WithAuthentication extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        authUser: JSON.parse(localStorage.getItem('authUser')),\n      };\n    }\n\n    componentDidMount() {\n      this.listener = this.props.firebase.onAuthUserListener(\n        authUser => {\n          localStorage.setItem('authUser', JSON.stringify(authUser));\n          this.setState({ authUser });\n        },\n        () => {\n          localStorage.removeItem('authUser');\n          this.setState({ authUser: null });\n        },\n      );\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Provider value={this.state.authUser}>\n          <Component {...this.props} />\n        </AuthUserContext.Provider>\n      );\n    }\n  }\n\n  return withFirebase(WithAuthentication);\n};\n\nexport default withAuthentication;\n","export const NOT_FOUND = '*';\nexport const LANDING = '/';\nexport const HOME = '/home';\n\nexport const SIGN_UP = '/signup';\nexport const SIGN_IN = '/signin';\nexport const PASSWORD_FORGET = '/pw-forget';\nexport const PASSWORD_RESET = '/pw-reset';\n\nexport const ACCOUNT = '/account';\nexport const ADMIN = '/admin';\nexport const ADMIN_DETAILS = '/admin/:id';\n\nexport const COMPANIES = '/companies';\nexport const COMPANY_NEW = '/companies/new';\nexport const COMPANY_DETAILS = '/companies/:id';\nexport const JOIN_A_COMPANY = '/join-company';\n\nexport const BUILDINGS = '/buildings';\nexport const BUILDING_NEW = '/buildings/new';\nexport const BUILDING_DETAILS = '/buildings/:id';\n\nexport const FLOORS = '/floors';\nexport const FLOOR_NEW = '/floors/new';\nexport const FLOOR_DETAILS = '/floors/:id';\n\nexport const ROOMS = '/rooms';\nexport const ROOM_NEW = '/rooms/new';\nexport const ROOM_DETAILS = '/rooms/:id';\n\nexport const REPORTS = '/reports';\nexport const REPORT_NEW = '/reports/new';\nexport const REPORT_DETAILS = '/reports/:id';\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../routes';\n\nconst withAuthorization = condition => Component => {\n  class WithAuthorization extends React.Component {\n    componentDidMount() {\n      this.listener = this.props.firebase.onAuthUserListener(\n        authUser => {\n          if (!condition(authUser)) {\n            this.props.history.push(ROUTES.SIGN_IN);\n          }\n        },\n        () => this.props.history.push(ROUTES.SIGN_IN),\n      );\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Consumer>\n          {authUser =>\n            condition(authUser) ? <Component {...this.props} /> : null\n          }\n        </AuthUserContext.Consumer>\n      );\n    }\n  }\n\n  return compose(\n    withRouter,\n    withFirebase,\n  )(WithAuthorization);\n};\n\nexport default withAuthorization;\n","import React from 'react';\n\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\n\nconst needsEmailVerification = (authUser) =>\n  authUser &&\n  !authUser.emailVerified &&\n  authUser.providerData\n    .map((provider) => provider.providerId)\n    .includes('password');\n\nconst withEmailVerification = (Component) => {\n  class WithEmailVerification extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.state = { isSent: false };\n    }\n\n    onSendEmailVerification = () => {\n      this.props.firebase\n        .doSendEmailVerification()\n        .then(() => this.setState({ isSent: true }));\n    };\n\n    render() {\n      return (\n        <AuthUserContext.Consumer>\n          {(authUser) =>\n            needsEmailVerification(authUser) ? (\n              <div>\n                {this.state.isSent ? (\n                  <p>\n                    E-Mail confirmation sent: Check your E-Mails (Spam\n                    folder included) for a confirmation E-Mail.\n                    Refresh this page once you confirmed your E-Mail.\n                  </p>\n                ) : (\n                  <p>\n                    Verify your E-Mail: Check your E-Mails (Spam\n                    folder included) for a confirmation E-Mail or send\n                    another confirmation E-Mail.\n                  </p>\n                )}\n\n                <button\n                  type=\"button btn-primary\"\n                  onClick={this.onSendEmailVerification}\n                  disabled={this.state.isSent}\n                >\n                  Re-Send confirmation E-Mail\n                </button>\n              </div>\n            ) : (\n              <Component {...this.props} />\n            )\n          }\n        </AuthUserContext.Consumer>\n      );\n    }\n  }\n\n  return withFirebase(WithEmailVerification);\n};\n\nexport default withEmailVerification;\n","export default __webpack_public_path__ + \"static/media/minerva-transparent-clean.80ad244d.png\";","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { AuthUserContext } from './Session';\nimport * as ROUTES from '../routes';\nimport { faHome } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\n\nconst Navigation = () => (\n  <AuthUserContext.Consumer>\n    {(authUser) => !!authUser && (\n      <div className=\"tab-wrapper\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <nav defaultactivekey=\"/home\">\n              <div className=\"nav nav-tabs\" id=\"nav-tab\" role=\"tablist\">\n                <Link\n                  className=\"nav-item nav-link\"\n                  id=\"nav-home-tab\"\n                  data-toggle=\"tab\"\n                  role=\"tab\"\n                  aria-controls=\"nav-home\"\n                  aria-selected=\"false\"\n                  to={ROUTES.HOME}\n                >\n                  <FontAwesomeIcon icon={faHome} />\n                </Link>\n                <Link\n                  className=\"nav-item nav-link\"\n                  id=\"nav-account-tab\"\n                  data-toggle=\"tab\"\n                  role=\"tab\"\n                  aria-controls=\"nav-account\"\n                  aria-selected=\"false\"\n                  to={ROUTES.ACCOUNT}\n                >\n                  Account\n                </Link>\n\n                {!!authUser.company_id && (\n                  <>\n                    <Link\n                      className=\"nav-item nav-link\"\n                      id=\"nav-buildings-tab\"\n                      data-toggle=\"tab\"\n                      role=\"tab\"\n                      aria-controls=\"nav-buildings\"\n                      aria-selected=\"false\"\n                      to={{pathname: `${ROUTES.COMPANIES}`\n                        // pathname: `${ROUTES.COMPANIES}/${authUser.company_id}`,\n                        // state: { company },\n                      }}\n                    >\n                      Company\n                    </Link>\n\n                    <Link\n                      className=\"nav-item nav-link\"\n                      id=\"nav-floors-tab\"\n                      data-toggle=\"tab\"\n                      role=\"tab\"\n                      aria-controls=\"nav-floors\"\n                      aria-selected=\"false\"\n                      to={ROUTES.FLOORS}\n                    >\n                      Floors\n                    </Link>\n                  </>\n                )}\n\n                {!!authUser.roles.ADMIN && (\n                  <Link\n                    className=\"nav-item nav-link\"\n                    id=\"nav-admin-tab\"\n                    data-toggle=\"tab\"\n                    role=\"tab\"\n                    aria-controls=\"nav-admin\"\n                    aria-selected=\"false\"\n                    to={ROUTES.ADMIN}\n                  >\n                    Admin\n                  </Link>\n                )}\n              </div>\n            </nav>\n          </div>\n        </div>\n      </div>\n    )}\n  </AuthUserContext.Consumer>\n);\n\nexport default Navigation;\n","import React, { Component } from 'react';\n\nimport { withFirebase } from '../Firebase';\n\nconst INITIAL_STATE = {\n  passwordOne: '',\n  passwordTwo: '',\n  error: null,\n};\n\nclass PasswordChangeForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { passwordOne } = this.state;\n\n    this.props.firebase\n      .doPasswordUpdate(passwordOne)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { email, passwordOne, passwordTwo, error } = this.state;\n\n    const isInvalid =\n      passwordOne !== passwordTwo || passwordOne === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          hidden={true}\n          name=\"email\"\n          autoComplete=\"email\"\n          value={email}\n          // onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <div className=\"form-row\">\n        <input\n          className=\"form-input\"\n          name=\"passwordOne\"\n          autoComplete=\"new-password\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"New Password\"\n        />\n        <input\n          className=\"form-input \"\n          name=\"passwordTwo\"\n          autoComplete=\"new-password\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Confirm New Password\"\n        />\n        </div>\n        <button className=\"btn btn-danger\" disabled={isInvalid} type=\"submit\">\n          Reset Password\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default withFirebase(PasswordChangeForm);\n","export default __webpack_public_path__ + \"static/media/minerva-transparent-vector.eefc7c90.png\";","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from 'react-router-dom'\nimport { faChevronLeft } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../routes';\n\nimport Logo from '../../images/minerva-transparent-vector.png';\n\nconst PasswordForgetPage = () => (\n  <div className=\"page-bg\">\n    <div className=\"page-inner\">\n      <img className=\"signin-logo fade-in\" alt=\"logo\" src={Logo} />\n      <h1>Reset Password</h1>\n      <PasswordForgetForm />\n      <BackButton />\n    </div>\n  </div>\n);\n\nconst INITIAL_STATE = {\n  email: '',\n  error: null,\n};\n\nclass PasswordForgetFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { email } = this.state;\n\n    this.props.firebase\n      .doPasswordReset(email)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { email, error } = this.state;\n\n    const isInvalid = email === '';\n\n    return (\n      \n      <form onSubmit={this.onSubmit}>\n        <input\n          className=\"form-input\"\n          name=\"email\"\n          autoComplete=\"email\"\n          value={this.state.email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <button \n        className=\"btn btn-secondary btn-social\"\n        disabled={isInvalid} type=\"submit\">\n          Reset Password\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n      \n    );\n  }\n}\n\nconst PasswordForgetLink = () => (\n  <p>\n    <Link to={ROUTES.PASSWORD_FORGET} className=\"highlight-link\">Forgot Password?</Link>\n  </p>\n);\n\nconst BackButton = withRouter(({ history }) => {\n  return (\n    <div>\n      <button className=\"btn btn-primary btn-social\" onClick={() => history.goBack()}><FontAwesomeIcon icon={faChevronLeft} /> Go Back</button>\n    </div>\n  )\n});\n\nexport default PasswordForgetPage;\n\nconst PasswordForgetForm = withFirebase(PasswordForgetFormBase);\n\nexport { PasswordForgetForm, PasswordForgetLink, BackButton };\n","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport { SignInLink } from './SignInPage';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../routes';\n\nimport Logo from '../../images/minerva-transparent-vector.png';\n\nconst SignUpPage = () => (\n  <div className=\"page-bg\">\n    <div className=\"page-inner\">\n      <img className=\"signin-logo fade-in\" alt=\"logo\" src={Logo} />\n      <h1>Register</h1>\n      <SignUpForm />\n      <SignInLink />\n    </div>\n  </div>\n);\n\nconst INITIAL_STATE = {\n  username: '',\n  email: '',\n  passwordOne: '',\n  passwordTwo: '',\n  isAdmin: false,\n  error: null,\n};\n\nconst ERROR_CODE_ACCOUNT_EXISTS = 'auth/email-already-in-use';\n\nconst ERROR_MSG_ACCOUNT_EXISTS = `\n  An account with this E-Mail address already exists.\n  Try to login with this account instead. If you think the\n  account is already used from one of the social logins, try\n  to sign in with one of them. Afterward, associate your accounts\n  on your personal account page.\n`;\n\nclass SignUpFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { username, email, passwordOne, isAdmin } = this.state;\n    let roles = '';\n\n    if (isAdmin) {\n      roles = 'ADMIN';\n    } else {\n      roles = 'EMPLOYEE';\n    }\n\n    this.props.firebase\n      .doCreateUserWithEmailAndPassword(email, passwordOne)\n      .then(authUser => {\n        // Create a user in your Firebase realtime database\n        return this.props.firebase.user(authUser.user.uid).set({\n          username,\n          email,\n          roles,\n        });\n      })\n      .then(() => {\n        return this.props.firebase.doSendEmailVerification();\n      })\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\n        }\n\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  onChangeCheckbox = event => {\n    this.setState({ [event.target.name]: event.target.checked });\n  };\n\n  render() {\n    const {\n      username,\n      email,\n      passwordOne,\n      passwordTwo,\n      isAdmin,\n      error,\n    } = this.state;\n\n    const isInvalid =\n      passwordOne !== passwordTwo ||\n      passwordOne === '' ||\n      email === '' ||\n      username === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n                    className=\"form-input\"\n\n          name=\"username\"\n          autoComplete=\"username\"\n          value={username}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Full Name\"\n        />\n        <input\n                  className=\"form-input\"\n\n          name=\"email\"\n          autoComplete=\"email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <input\n                  className=\"form-input\"\n\n          name=\"passwordOne\"\n          autoComplete=\"new-password\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n        <input\n                  className=\"form-input\"\n\n          name=\"passwordTwo\"\n          autoComplete=\"new-password\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Confirm Password\"\n        />\n        {/* <label>\n          Admin:\n          <input\n            name=\"isAdmin\"\n            type=\"checkbox\"\n            checked={isAdmin}\n            onChange={this.onChangeCheckbox}\n          />\n        </label> */}\n        <button \n        className=\"btn btn-primary\"\n        disabled={isInvalid} type=\"submit\">\n          Sign Up\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nconst SignUpLink = () => (\n  <span className=\"cta\">\n  <p>Don't have an account?</p> \n    <p><Link to={ROUTES.SIGN_UP} className=\"highlight-link\">Sign Up</Link>\n  </p>\n  </span>\n);\n\nconst SignUpForm = compose(\n  withRouter,\n  withFirebase,\n)(SignUpFormBase);\n\nexport default SignUpPage;\n\nexport { SignUpForm, SignUpLink };\n","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport { SignUpLink } from './SignUpPage';\nimport { PasswordForgetLink } from './PasswordForgetPage';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../routes';\nimport { faFacebookF, faGoogle, faTwitter } from '@fortawesome/free-brands-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport Logo from '../../images/minerva-transparent-vector.png';\n\nconst SignInPage = () => (\n  <div className=\"page-bg\">\n    <div className=\"page-inner\">\n      <img className=\"signin-logo fade-in\" alt=\"logo\" src={Logo} />\n\n      <h1>Log In</h1>\n      <SignInForm />\n      <PasswordForgetLink />\n      <h4>Or log in with social:</h4>\n      <SignInGoogle />\n      {/* <SignInFacebook /> */}\n      {/* <SignInTwitter /> */}\n      <SignUpLink />\n    </div>\n  </div>\n);\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n  error: null,\n};\n\nconst ERROR_CODE_ACCOUNT_EXISTS =\n  'auth/account-exists-with-different-credential';\n\nconst ERROR_MSG_ACCOUNT_EXISTS = `\n  An account with an email address to\n  this social account already exists. Try to login from\n  this account instead and associate your social accounts on\n  your personal account page.\n`;\n\nclass SignInFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { email, password } = this.state;\n\n    this.props.firebase\n      .doSignInWithEmailAndPassword(email, password)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { email, password, error } = this.state;\n\n    const isInvalid = password === '' || email === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          className=\"form-input\"\n          name=\"email\"\n          value={email}\n          autoComplete=\"email\"\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />&nbsp;\n        <input\n          className=\"form-input\"\n          name=\"password\"\n          autoComplete=\"current-password\"\n          value={password}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Password\"\n        />&nbsp;\n        <button className=\"btn btn-primary\" disabled={isInvalid} type=\"submit\">\n          Log in\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nclass SignInGoogleBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { error: null };\n  }\n\n  onSubmit = event => {\n    this.props.firebase\n      .doSignInWithGoogle()\n      .then(socialAuthUser => {\n        // Create a user in your Firebase Realtime Database too\n        return this.props.firebase.user(socialAuthUser.user.uid).set({\n          username: socialAuthUser.user.displayName,\n          email: socialAuthUser.user.email,\n          roles: 'EMPLOYEE',\n        });\n      })\n      .then(() => {\n        this.setState({ error: null });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\n        }\n\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  render() {\n    const { error } = this.state;\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <button className=\"btn btn-social btn-primary\" type=\"submit\"><FontAwesomeIcon icon={faGoogle} /> Log in with Google</button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nclass SignInFacebookBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { error: null };\n  }\n\n  onSubmit = event => {\n    this.props.firebase\n      .doSignInWithFacebook()\n      .then(socialAuthUser => {\n        // Create a user in your Firebase Realtime Database too\n        return this.props.firebase.user(socialAuthUser.user.uid).set({\n          username: socialAuthUser.additionalUserInfo.profile.name,\n          email: socialAuthUser.additionalUserInfo.profile.email,\n          roles: 'EMPLOYEE',\n        });\n      })\n      .then(() => {\n        this.setState({ error: null });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\n        }\n\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  render() {\n    const { error } = this.state;\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <button className=\"btn btn-social btn-primary\" type=\"submit\"><FontAwesomeIcon icon={faFacebookF} /> Log in with Facebook</button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nclass SignInTwitterBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { error: null };\n  }\n\n  onSubmit = event => {\n    this.props.firebase\n      .doSignInWithTwitter()\n      .then(socialAuthUser => {\n        // Create a user in your Firebase Realtime Database too\n        return this.props.firebase.user(socialAuthUser.user.uid).set({\n          username: socialAuthUser.additionalUserInfo.profile.name,\n          email: socialAuthUser.additionalUserInfo.profile.email,\n          roles: 'EMPLOYEE',\n        });\n      })\n      .then(() => {\n        this.setState({ error: null });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\n        }\n\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  render() {\n    const { error } = this.state;\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <button className=\"btn btn-social btn-primary\" type=\"submit\"><FontAwesomeIcon icon={faTwitter} /> Log in with Twitter</button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nconst SignInLink = () => (\n  <span className=\"cta\">\n    <p>Already have an account?</p>\n    <p>\n      <Link to={ROUTES.SIGN_IN} className=\"highlight-link\">\n        Sign In\n      </Link>\n    </p>\n  </span>\n);\n\n\nconst SignInForm = compose(\n  withRouter,\n  withFirebase,\n)(SignInFormBase);\n\nconst SignInGoogle = compose(\n  withRouter,\n  withFirebase,\n)(SignInGoogleBase);\n\nconst SignInFacebook = compose(\n  withRouter,\n  withFirebase,\n)(SignInFacebookBase);\n\nconst SignInTwitter = compose(\n  withRouter,\n  withFirebase,\n)(SignInTwitterBase);\n\nexport default SignInPage;\n\nexport { SignInForm, SignInLink, SignInGoogle, SignInFacebook, SignInTwitter };\n","import React from 'react';\n\nimport { withFirebase } from '../Firebase';\nimport { faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst SignOutButton = ({ firebase }) => (\n  <button\n    type=\"button\"\n    className=\"btn btn-secondary \"\n    onClick={firebase.doSignOut}\n  >\n    Logout <FontAwesomeIcon icon={faSignOutAlt} />\n  </button>\n);\n\nexport default withFirebase(SignOutButton);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// import './ToggleSwitch.scss';\n\n/*\nToggle Switch Component By https://www.sitepoint.com/react-toggle-switch-reusable-component/\nNote: id, checked and onChange are required for ToggleSwitch component to function. The props name, small, disabled\nand optionLabels are optional.\nUsage: <ToggleSwitch id=\"id\" checked={value} onChange={checked => setValue(checked)}} />\n*/\n\nconst ToggleSwitch = ({ id, name, checked, onChange, optionLabels, small, disabled }) => {\n  function handleKeyPress(e) {\n    if (e.keyCode !== 32) return;\n\n    e.preventDefault();\n    onChange(!checked);\n  }\n\n  return (\n    <div className={'toggle-switch' + (small ? ' small-switch' : '')}>\n      <input\n        type=\"checkbox\"\n        name={name}\n        className=\"toggle-switch-checkbox\"\n        id={id}\n        checked={checked}\n        onChange={(e) => onChange(e.target.checked)}\n        disabled={disabled}\n      />\n      {id ? (\n        <label className=\"toggle-switch-label\" tabIndex={disabled ? -1 : 1} onKeyDown={(e) => handleKeyPress(e)} htmlFor={id}>\n          <span\n            className={disabled ? 'toggle-switch-inner toggle-switch-disabled' : 'toggle-switch-inner'}\n            data-yes={optionLabels[0]}\n            data-no={optionLabels[1]}\n            tabIndex={-1}\n          />\n          <span className={disabled ? 'toggle-switch-switch toggle-switch-disabled' : 'toggle-switch-switch'} tabIndex={-1} />\n        </label>\n      ) : null}\n    </div>\n  );\n};\n\n// Set optionLabels for rendering.\nToggleSwitch.defaultProps = {\n  optionLabels: ['Yes', 'No'],\n};\n\nToggleSwitch.propTypes = {\n  id: PropTypes.string.isRequired,\n  checked: PropTypes.bool.isRequired,\n  onChange: PropTypes.func.isRequired,\n  name: PropTypes.string,\n  optionLabels: PropTypes.array,\n  small: PropTypes.bool,\n  disabled: PropTypes.bool,\n};\n\nexport default ToggleSwitch;\n","import React from 'react';\nimport GooglePlacesAutocomplete from 'react-google-places-autocomplete';\n// const geocodeByAddress = (address: string): Promise<google.maps.GeocoderResult[]>;\n\n// geocodeByAddress('Montevideo, Uruguay')\n//   .then(results => console.log(results))\n//   .catch(error => console.error(error));\n\nclass AddressForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {result: \"\"};\n    };\n\n  sendBackData = () => {\n    var address = this.state.result.value;\n    console.log(address)\n    this.props.parentCallBack(address);\n  };\n\n  render() {\n    return (\n      <div>\n        <GooglePlacesAutocomplete\n          apiKey=\"AIzaSyDJ1foA09dKFjq-_KfWg2K822qClFUDaAc\"\n          onLoadFailed={(error) =>\n            console.error('Could not inject Google script', error)\n          }\n          selectProps={{\n            value: this.state.result,\n            onChange: this.state.result,\n            // onChange: (object | object[] | null | undefined, action) => setValue,\n            placeholder: 'Enter A Location...',\n            styles: {\n              input: (provided) => ({\n                ...provided,\n                color: 'blue',\n              }),\n              option: (provided) => ({\n                ...provided,\n                color: 'blue',\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: 'blue',\n              }),\n            },\n          }}\n        />\n        <button onClick={this.sendBackData}>click me to send back</button>;\n      </div>\n    );\n  }\n}\n\nexport default AddressForm;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { withFirebase } from '../Firebase';\nimport { AuthUserContext } from '../Session';\nimport * as ROUTES from '../../routes';\n\nconst JoinCompanyPage = () => (\n  <AuthUserContext.Consumer>\n    {(authUser) => (\n      <div>\n        <h3>Join A Company</h3>\n        <JoinCompanyForm authUser={authUser} />\n      </div>\n    )}\n  </AuthUserContext.Consumer>\n);\n\nconst INITIAL_STATE = {\n  companyID: '',\n  error: null,\n};\n\nclass CompanyFormBase extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { authUser } = this.props;\n    const { companyID } = this.state;\n\n    this.props.firebase\n      .setUserCompany(authUser.uid, companyID)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { companyID, error } = this.state;\n\n    const isInvalid = companyID === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          className=\"form-input\"\n          name=\"companyID\"\n          autoComplete=\"companyID\"\n          value={this.state.companyID}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Company ID\"\n        />\n        <button className=\"btn btn-primary\" disabled={isInvalid} type=\"submit\">\n          Join This Company\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nconst CompanyLink = () => (\n  <p>\n    <Link to={ROUTES.JOIN_A_COMPANY}>Join A Company!!</Link>\n  </p>\n);\n\nexport default JoinCompanyPage;\n\nconst JoinCompanyForm = withFirebase(CompanyFormBase);\n\nexport { JoinCompanyForm, CompanyLink };\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { COMPANIES } from '../../routes';\n\nimport { withFirebase } from '../Firebase';\n\n// import AddressForm from '../AddressForm';\n\nclass CompanyForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      companyTitle: '',\n      companyAddress: '',\n    };\n  }\n\n  onChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  onCreateCompany = () => {\n    let ownerName = this.props.authUser.username;\n    let ownerID = this.props.authUser.uid;\n\n    var companyData = {\n      companyTitle: this.state.companyTitle,\n      companyAddress: this.state.companyAddress,\n      owner: { ownerName, ownerID },\n      createdAt: this.props.firebase.serverValue.TIMESTAMP,\n    };\n\n    let companyID = this.props.firebase.createCompany(companyData);\n    console.log(companyID);\n    this.setState({\n      companyTitle: '',\n      companyAddress: '',\n    });\n  };\n\n  render() {\n    const { companyTitle, companyAddress } = this.state;\n\n    return (\n      <div className=\"add-padding-bottom text-center\">\n        <h1>Create A Company!</h1>\n        <form>\n          <input\n            className=\"col-10 form-input\"\n            type=\"text\"\n            placeholder=\"Name Your Company!\"\n            value={companyTitle}\n            name=\"companyTitle\"\n            onChange={this.onChange}\n          />\n          <input\n            className=\"col-10 form-input\"\n            type=\"text\"\n            placeholder=\"Where does it live?\"\n            value={companyAddress}\n            name=\"companyAddress\"\n            onChange={this.onChange}\n          />\n\n          {/* <AddressForm parentCallBack={this.onChangeCompanyAddress} /> */}\n        </form>\n\n        <button className=\"btn btn-primary\" type=\"submit\" onClick={this.onCreateCompany}>\n          <Link to={COMPANIES}>click me to send back</Link>\n        </button>\n\n      </div>\n    );\n  }\n}\n\nexport default withFirebase(CompanyForm);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { BUILDINGS } from '../../routes';\n\nimport { withFirebase } from '../Firebase';\n\n// import AddressForm from '../AddressForm';\n\nclass BuildingForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      buildingTitle: '',\n      buildingAddress: '',\n      companyID: '',\n    };\n  }\n\n  onChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  onCreateBuilding = () => {\n    let { buildingTitle, buildingAddress, companyID } = this.state;\n    let ownerName = this.props.authUser.username;\n    let ownerID = this.props.authUser.uid;\n\n    var BuildingData = {\n      buildingTitle,\n      buildingAddress,\n      companyID,\n      owner: { ownerName, ownerID },\n      createdAt: this.props.firebase.serverValue.TIMESTAMP,\n    };\n\n    let buildingID = this.props.firebase.createBuilding(BuildingData);\n    console.log(buildingID);\n    this.setState({\n      buildingTitle: '',\n      buildingAddress: '',\n      companyID: '',\n    });\n  };\n\n  render() {\n    const { buildingTitle, buildingAddress, companyID } = this.state;\n\n    return (\n      <div className=\"add-padding-bottom text-center\">\n        <h1>Create A Building!</h1>\n        <form>\n          <input\n            className=\"col-10 form-input\"\n            type=\"text\"\n            placeholder=\"Name Your Building!\"\n            value={buildingTitle}\n            name=\"buildingTitle\"\n            onChange={this.onChange}\n          />\n          <input\n            className=\"col-10 form-input\"\n            type=\"text\"\n            placeholder=\"Where does it live?\"\n            value={buildingAddress}\n            name=\"buildingAddress\"\n            onChange={this.onChange}\n          />\n          <input\n            className=\"col-10 form-input\"\n            type=\"text\"\n            placeholder=\"What Your Company ID?\"\n            value={companyID}\n            name=\"companyID\"\n            onChange={this.onChange}\n          />\n\n          {/* <AddressForm parentCallBack={this.onChangebuildingAddress} /> */}\n        </form>\n\n        <button className=\"btn btn-primary\" type=\"submit\" onClick={this.onCreateBuilding}>\n          <Link to={BUILDINGS}>click me to send back</Link>\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default withFirebase(BuildingForm);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FLOORS } from '../../routes';\n\nimport { withFirebase } from '../Firebase';\n\n// import AddressForm from '../AddressForm';\n\nclass FloorForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      floorTitle: '',\n      floorAddress: '',\n      companyID: '',\n      buildingID: '',\n    };\n  }\n\n  onChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  onCreateFloor = () => {\n    let { floorTitle, floorAddress, companyID, buildingID } = this.state;\n    let ownerName = this.props.authUser.username;\n    let ownerID = this.props.authUser.uid;\n\n    var FloorData = {\n      floorTitle,\n      floorAddress,\n      companyID,\n      buildingID,\n      owner: { ownerName, ownerID },\n      createdAt: this.props.firebase.serverValue.TIMESTAMP,\n    };\n\n    let floorID = this.props.firebase.createFloor(FloorData);\n    console.log(floorID);\n    this.setState({\n      floorTitle: '',\n      floorAddress: '',\n      companyID: '',\n      buildingID: '',\n    });\n  };\n\n  render() {\n    const { floorTitle, floorAddress, companyID, buildingID } = this.state;\n\n    return (\n      <div className=\"add-padding-bottom text-center\">\n        <h1>Create A Floor!</h1>\n        <form>\n          <input\n            className=\"col-10 form-input\"\n            type=\"text\"\n            placeholder=\"Name Your Floor!\"\n            value={floorTitle}\n            name=\"floorTitle\"\n            onChange={this.onChange}\n          />\n          <input\n            className=\"col-10 form-input\"\n            type=\"text\"\n            placeholder=\"Where does it live?\"\n            value={floorAddress}\n            name=\"floorAddress\"\n            onChange={this.onChange}\n          />\n          <input\n            className=\"col-10 form-input\"\n            type=\"text\"\n            placeholder=\"What Is Your Company ID?\"\n            value={companyID}\n            name=\"companyID\"\n            onChange={this.onChange}\n          />\n          <input\n            className=\"col-10 form-input\"\n            type=\"text\"\n            placeholder=\"What Is Your Building ID?\"\n            value={buildingID}\n            name=\"buildingID\"\n            onChange={this.onChange}\n          />\n\n          {/* <AddressForm parentCallBack={this.onChangefloorAddress} /> */}\n        </form>\n\n        <button className=\"btn btn-primary\" type=\"submit\" onClick={this.onCreateFloor}>\n          <Link to={FLOORS}>click me to send back</Link>\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default withFirebase(FloorForm);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { ROOMS } from '../../routes';\n\nimport { withFirebase } from '../Firebase';\n\n// import AddressForm from '../AddressForm';\n\nclass RoomForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      roomTitle: '',\n      roomAddress: '',\n      companyID: '',\n      buildingID: '',\n      floorID: '',\n    };\n  }\n\n  onChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  onCreateRoom = () => {\n    let { roomTitle, roomAddress, companyID, buildingID, floorID } = this.state;\n    let ownerName = this.props.authUser.username;\n    let ownerID = this.props.authUser.uid;\n\n    var RoomData = {\n      roomTitle,\n      roomAddress,\n      companyID,\n      buildingID,\n      floorID,\n      owner: { ownerName, ownerID },\n      createdAt: this.props.firebase.serverValue.TIMESTAMP,\n    };\n\n    let roomID = this.props.firebase.createRoom(RoomData);\n    console.log(roomID);\n    this.setState({\n      roomTitle: '',\n      roomAddress: '',\n      companyID: '',\n      buildingID: '',\n      floorID: '',\n    });\n  };\n\n  render() {\n    const { roomTitle, roomAddress, companyID, buildingID, floorID } = this.state;\n\n    return (\n      <div className=\"add-padding-bottom text-center\">\n        <h1>Create A Room!</h1>\n        <form>\n          <input\n            className=\"col-10 form-input\"\n            type=\"text\"\n            placeholder=\"Name Your Room!\"\n            value={roomTitle}\n            name=\"roomTitle\"\n            onChange={this.onChange}\n          />\n          <input\n            className=\"col-10 form-input\"\n            type=\"text\"\n            placeholder=\"Where does it live?\"\n            value={roomAddress}\n            name=\"roomAddress\"\n            onChange={this.onChange}\n          />\n          <input\n            className=\"col-10 form-input\"\n            type=\"text\"\n            placeholder=\"What Is Your Company ID?\"\n            value={companyID}\n            name=\"companyID\"\n            onChange={this.onChange}\n          />\n          <input\n            className=\"col-10 form-input\"\n            type=\"text\"\n            placeholder=\"What Is Your Building ID?\"\n            value={buildingID}\n            name=\"buildingID\"\n            onChange={this.onChange}\n          />\n          <input\n            className=\"col-10 form-input\"\n            type=\"text\"\n            placeholder=\"What Is Your Floor ID?\"\n            value={floorID}\n            name=\"floorID\"\n            onChange={this.onChange}\n          />\n\n          {/* <AddressForm parentCallBack={this.onChangeroomAddress} /> */}\n        </form>\n\n        <button className=\"btn btn-primary\" type=\"submit\" onClick={this.onCreateRoom}>\n          <Link to={ROOMS}>click me to send back</Link>\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default withFirebase(RoomForm);\n","import React, { Component } from 'react';\nimport { Link, Prompt } from 'react-router-dom';\n\nimport { REPORTS } from '../../routes';\nimport { withFirebase } from '../Firebase';\n\n\nclass ReportForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.initialState = {\n      isBlocking: false,\n      upload: null,\n      progress: 0,\n\n      \n      companyID: '',\n      buildingID: '',\n      floorID: '',\n      roomID: '',\n      \n      reportTitle: '',\n      reportMessage: '',\n      reportStatus: 'OPEN',\n      reportServiceType: '',\n\n      reportImageName: '',\n      reportImageURL: '',\n    };\n    this.state = this.initialState;\n  }\n\n  onCreateReport = () => {\n    let ownerName = this.props.authUser.username;\n    let ownerID = this.props.authUser.uid;\n\n    let { companyID, buildingID, floorID, roomID } = this.state;\n    let { reportTitle, reportMessage, reportStatus, reportServiceType, reportImageName, reportImageURL } = this.state;\n\n\n    var reportData = {\n      reporter: { ownerName, ownerID },\n      location: {\n        companyID,\n        buildingID,\n        floorID,\n        roomID,\n      },\n      image: { reportImageName, reportImageURL },\n      reportTitle,\n      reportMessage,\n      reportStatus,\n      reportServiceType,\n      createdAt: this.props.firebase.serverValue.TIMESTAMP,\n    }\n\n    let reportID = this.props.firebase.createReport(reportData);\n    console.log(reportID);\n    this.setState(this.initialState);\n  };\n\n  onChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n      isBlocking: event.target.value.length > 0,\n    });\n  };\n\n  onAutoFill = () => {\n    this.setState({\n      isBlocking: true,\n      \n      // companyID: '-MIl88ANUFKxLp_sKsvf',\n      // buildingID: '-MIqkLiTo2qwbo3JkrHL',\n      // floorID: '-MIqkPSUQ7HeoFxXdrW7',\n      // roomID: '-MIqCSAwq5QBti12uqKI',\n      companyID: '-MNIVFlXAdfjwAIEslMH',\n      buildingID: '-MNIWgqfPJFOqVVPFLCA',\n      floorID: '-MNIaKm56aa5l5mHaV5-',\n      roomID: '-MNIkOqcBsUhDz2IhflB',\n    });\n  };\n\n\n  handleChange = (e) => {\n    if (e.target.files[0]) {\n      const upload = e.target.files[0];\n      const uploadTask = this.props.firebase.storage.ref(`images/${upload.name}`).put(upload);\n      uploadTask.on(\n        'state_changed',\n        (snapshot) => {\n          // progress function ...\n          const progress = Math.round((snapshot.bytesTransferred / snapshot.totalBytes) * 100);\n          this.setState({ progress });\n        },\n        (error) => {\n          // Error function ...\n          console.log(error);\n        },\n        () => {\n          // complete function ...\n          this.props.firebase.storage\n            .ref(`images`)\n            .child(upload.name)\n            .getDownloadURL()\n            .then((image_url) => {\n              this.setState({ image_url, image_name: upload.name });\n            });\n        },\n      );\n    }\n  };\n\n\n  render() {\n    const { isBlocking, progress } = this.state;\n    const {\n      companyID,\n      buildingID,\n      floorID,\n      roomID,\n\n      reportTitle,\n      reportMessage,\n      reportServiceType,\n    } = this.state;\n\n    return (\n      <div className=\" text-center\">\n        <hr />\n        <h2>Create A Report!</h2>\n        <form>\n          <div className=\"form-row\">\n            <input\n              className=\"form-input col-5\"\n              type=\"text\"\n              placeholder=\"Company ID\"\n              name=\"companyID\"\n              value={companyID}\n              onChange={this.onChange}\n            />\n            <input\n              className=\"form-input col-5\"\n              type=\"text\"\n              placeholder=\"Building ID\"\n              name=\"buildingID\"\n              value={buildingID}\n              onChange={this.onChange}\n            />\n          </div>\n          <div className=\"form-row\">\n            <input\n              className=\"form-input col-5\"\n              type=\"text\"\n              placeholder=\"Floor ID\"\n              name=\"floorID\"\n              value={floorID}\n              onChange={this.onChange}\n            />\n            <input\n              className=\"form-input col-5\"\n              type=\"text\"\n              placeholder=\"Room ID\"\n              name=\"roomID\"\n              value={roomID}\n              onChange={this.onChange}\n            />\n          </div>\n\n          <div className=\"btn btn-primary form-input\" onClick={this.onAutoFill}>\n            Auto Fill Location\n          </div>\n\n          <div className=\"form-row\">\n            <input\n              className=\"form-input col-10\"\n              type=\"text\"\n              placeholder=\"Report Title\"\n              name=\"reportTitle\"\n              value={reportTitle}\n              onChange={this.onChange}\n            />\n          </div>\n\n          <textarea\n            rows=\"3\"\n            className=\"form-input col-12\"\n            type=\"text\"\n            placeholder=\"Reason For Report\"\n            name=\"reportMessage\"\n            value={reportMessage}\n            onChange={this.onChange}\n          />\n\n          <select className=\"form-control\" name=\"reportServiceType\" value={reportServiceType} onChange={this.onChange}>\n            <option value=\"\" disabled>\n              Select a Service\n            </option>\n            <option value=\"MAINTENANCE\">Maintenance / Repair</option>\n            <option value=\"HAZARD\">Hazard Report</option>\n            <option value=\"SERVICE\">Service Report</option>\n          </select>\n\n          \n          <input className=\"file-uploader\" type=\"file\" onChange={this.handleChange} />\n\n          <p className='text-center'>\n            Photo Upload Progress:\n            <progress value={progress} max=\"100\" className=\"progress\" />\n          </p>\n        </form>\n\n        <Prompt when={isBlocking} message={(location) => `Are you sure you want to go to ${location.pathname}`} />\n        {/* <p>Blocking? {isBlocking ? 'Yes, click a link or the back button' : 'Nope'}</p> */}\n\n        <button className=\"btn btn-primary\" type=\"submit\" onClick={this.onCreateReport}>\n          <Link to={REPORTS}>Submit Report</Link>\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default withFirebase(ReportForm);\n","import React, { Component, useState } from 'react';\nimport { compose } from 'recompose';\n\nimport { withFirebase } from '../Firebase';\n\nimport {\n  AuthUserContext,\n  withAuthorization,\n  withEmailVerification,\n} from '../Session';\n\nimport { PasswordForgetForm, PasswordChangeForm, SignOutButton} from '../Auth';\nimport { JoinCompanyForm, ToggleSwitch } from '../Utils';\n\nimport { faFacebookF } from '@fortawesome/free-brands-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\n\nconst AccountPage = () => {\n  let [settings, setSettings] = useState(false);\n  // let [daily, setDaily] = useState(false);\n  // let [weekly, setWeekly] = useState(false);\n  // let [monthly, setMonthly] = useState(false);\n\n  const onSettingsChange = (checked) => {\n    setSettings(checked);\n    // if (!checked) {\n    //   setDaily(false);\n    //   setWeekly(false);\n    //   setMonthly(false);\n    // }\n  };\n\n  return (\n    <AuthUserContext.Consumer>\n      {(authUser) => (\n        <div className=\"container text-center add-padding-bottom\">\n          <div className=\"usercard\">\n            <div className=\"mt-3\">\n              <img className=\"profile-photo\" src={'https://picsum.photos/200'} width=\"100\" height=\"100\" alt=\"Profile\" />\n            </div>\n            <h3>{authUser.username}'s Account</h3>\n            <p>\n              <strong>Email: </strong>\n              {authUser.email}\n              <br />\n              <strong>Company: </strong>\n              {authUser.company_id || 'No Company assigned.'}\n            </p>\n            <p>\n              <strong>Roles:</strong>\n              {authUser.roles}\n            </p>\n          </div>\n          <hr />\n\n          {!authUser.company_id && <JoinCompanyForm />}\n\n          <SignOutButton />\n\n          <br />\n\n          <div>\n            <ToggleSwitch id=\"settings\" checked={settings} onChange={onSettingsChange} />\n            <label htmlFor=\"settings\">Edit Account Settings</label>\n          </div>\n\n          {settings && (\n            <div>\n              {/* Forgot Your Password? <PasswordForgetForm /> */}\n              Reset Your Password. <PasswordChangeForm />\n              <LoginManagement authUser={authUser} />\n            </div>\n          )}\n\n        </div>\n      )}\n    </AuthUserContext.Consumer>\n  );\n};\n\n\nconst SIGN_IN_METHODS = [\n  { id: 'password', provider: null },\n  { id: 'google.com', provider: 'googleProvider' },\n  { id: 'facebook.com', provider: 'facebookProvider' },\n  { id: 'twitter.com', provider: 'twitterProvider' },\n];\n\n\nclass LoginManagementBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeSignInMethods: [],\n      error: null,\n    };\n  }\n\n  componentDidMount() {\n    this.fetchSignInMethods();\n  }\n\n  fetchSignInMethods = () => {\n    this.props.firebase.auth\n      .fetchSignInMethodsForEmail(this.props.authUser.email)\n      .then((activeSignInMethods) =>\n        this.setState({ activeSignInMethods, error: null }),\n      )\n      .catch((error) => this.setState({ error }));\n  };\n\n  onSocialLoginLink = (provider) => {\n    this.props.firebase.auth.currentUser\n      .linkWithPopup(this.props.firebase[provider])\n      .then(this.fetchSignInMethods)\n      .catch((error) => this.setState({ error }));\n  };\n\n  onDefaultLoginLink = (password) => {\n    const credential = this.props.firebase.emailAuthProvider.credential(\n      this.props.authUser.email,\n      password,\n    );\n\n    this.props.firebase.auth.currentUser\n      .linkAndRetrieveDataWithCredential(credential)\n      .then(this.fetchSignInMethods)\n      .catch((error) => this.setState({ error }));\n  };\n\n  onUnlink = (providerId) => {\n    this.props.firebase.auth.currentUser\n      .unlink(providerId)\n      .then(this.fetchSignInMethods)\n      .catch((error) => this.setState({ error }));\n  };\n\n  render() {\n    const { activeSignInMethods, error } = this.state;\n\n    return (\n      <div>\n        Sign In Methods:\n        <ul className=\"social-links\">\n          {SIGN_IN_METHODS.map((signInMethod) => {\n            const onlyOneLeft = activeSignInMethods.length === 1;\n            const isEnabled = activeSignInMethods.includes(\n              signInMethod.id,\n            );\n\n            return (\n              <li key={signInMethod.id}>\n                {signInMethod.id === 'password' ? (\n                  <DefaultLoginToggle\n                    onlyOneLeft={onlyOneLeft}\n                    isEnabled={isEnabled}\n                    signInMethod={signInMethod}\n                    onLink={this.onDefaultLoginLink}\n                    onUnlink={this.onUnlink}\n                  />\n                ) : (\n                  <SocialLoginToggle\n                    onlyOneLeft={onlyOneLeft}\n                    isEnabled={isEnabled}\n                    signInMethod={signInMethod}\n                    onLink={this.onSocialLoginLink}\n                    onUnlink={this.onUnlink}\n                  />\n                )}\n              </li>\n            );\n          })}\n        </ul>\n        {error && error.message}\n      </div>\n    );\n  }\n}\n\n\nconst SocialLoginToggle = ({\n  onlyOneLeft,\n  isEnabled,\n  signInMethod,\n  onLink,\n  onUnlink,\n}) =>\n  isEnabled ? (\n    <button\n      type=\"button\"\n      className=\"btn btn-primary btn-social\"\n      onClick={() => onUnlink(signInMethod.id)}\n      disabled={onlyOneLeft}\n    >\n      Deactivate {signInMethod.id}\n    </button>\n  ) : (\n    <button\n      type=\"button\"\n      className=\"btn btn-primary btn-social\"\n      onClick={() => onLink(signInMethod.provider)}\n    >\n      Link {signInMethod.id}\n    </button>\n  );\n\nclass DefaultLoginToggle extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { passwordOne: '', passwordTwo: '' };\n  }\n\n  onSubmit = (event) => {\n    event.preventDefault();\n\n    this.props.onLink(this.state.passwordOne);\n    this.setState({ passwordOne: '', passwordTwo: '' });\n  };\n\n  onChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const {\n      onlyOneLeft,\n      isEnabled,\n      signInMethod,\n      onUnlink,\n    } = this.props;\n\n    const { email, passwordOne, passwordTwo } = this.state;\n\n    const isInvalid =\n      passwordOne !== passwordTwo || passwordOne === '';\n\n    return isEnabled ? (\n      <button\n        type=\"button\"\n        className=\"btn btn-danger btn-social  disabled\"\n        onClick={() => onUnlink(signInMethod.id)}\n        disabled={onlyOneLeft}\n      >\n        Deactivate {signInMethod.id}\n      </button>\n    ) : (\n      <form onSubmit={this.onSubmit}>\n        <input\n          hidden={true}\n          name=\"email\"\n          autoComplete=\"email\"\n          value={email}\n          // onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <input\n          className=\"form-input\"\n          name=\"passwordOne\"\n          autoComplete=\"new-password\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"New Password\"\n        />\n        <input\n          className=\"form-input\"\n          name=\"passwordTwo\"\n          autoComplete=\"new-password\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Confirm New Password\"\n        />\n\n        <button\n          className=\"btn btn-primary\"\n          disabled={isInvalid}\n          type=\"submit\"\n        >\n          Link {signInMethod.id}\n        </button>\n      </form>\n    );\n  }\n}\n\nconst LoginManagement = withFirebase(LoginManagementBase);\n\nconst condition = (authUser) => !!authUser;\n\nexport default compose(\n  withEmailVerification,\n  withAuthorization(condition),\n)(AccountPage);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { withFirebase } from '../../Firebase';\nimport * as ROUTES from '../../../routes';\n\nclass UserList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      users: [],\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ loading: true });\n\n    this.props.firebase.users().on('value', snapshot => {\n      const usersObject = snapshot.val();\n\n      const usersList = Object.keys(usersObject).map(key => ({\n        ...usersObject[key],\n        uid: key,\n      }));\n\n      this.setState({\n        users: usersList,\n        loading: false,\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.users().off();\n  }\n\n  render() {\n    const { users, loading } = this.state;\n\n    return (\n      <div className=\"add-padding-bottom\">\n        <h2>Users</h2>\n        {loading && <div>Loading ...</div>}\n        <ul>\n          {users.map((user) => (\n            <li key={user.uid}>\n              <span>\n                <strong>ID:</strong> {user.uid}\n              </span>\n              <br />\n              <span>\n                <strong>E-Mail:</strong> {user.email}\n              </span>\n              <br />\n              <span>\n                <strong>Username:</strong> {user.username}\n              </span>\n              <br />\n              <span>\n                <Link\n                  to={{\n                    pathname: `${ROUTES.ADMIN}/${user.uid}`,\n                    state: { user },\n                  }}\n                >\n                  Details\n                </Link>\n              </span>\n              <hr />\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default withFirebase(UserList);\n","import React, { Component } from 'react';\n\nimport { withFirebase } from '../../Firebase';\n\nclass UserItem extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      user: null,\n      ...props.location.state,\n    };\n  }\n\n  componentDidMount() {\n    if (this.state.user) {\n      return;\n    }\n\n    this.setState({ loading: true });\n\n    this.props.firebase\n      .user(this.props.match.params.id)\n      .on('value', snapshot => {\n        this.setState({\n          user: snapshot.val(),\n          loading: false,\n        });\n      });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.user(this.props.match.params.id).off();\n  }\n\n  onSendPasswordResetEmail = () => {\n    this.props.firebase.doPasswordReset(this.state.user.email);\n  };\n\n  render() {\n    const { user, loading } = this.state;\n\n    return (\n      <div>\n        <h5>User ({this.props.match.params.id})</h5>\n        {loading && <div>Loading ...</div>}\n\n        {user && (\n          <div>\n            <span>\n              <strong>ID:</strong> {user.uid}\n            </span>\n            <br />\n            <span>\n              <strong>E-Mail:</strong> {user.email}\n            </span>\n            <br />\n            <span>\n              <strong>Username:</strong> {user.username}\n            </span>\n            <br />\n            <span>\n              <button\n                type=\"button\"\n                onClick={this.onSendPasswordResetEmail}\n              >\n                Send Password Reset\n              </button>\n            </span>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withFirebase(UserItem);\n","import UserList from './UserList';\nimport UserItem from './UserItem';\nimport AdminPage from './AdminPage';\n\nexport { UserList, UserItem, AdminPage };\nexport default AdminPage;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport * as ROUTES from '../../../routes';\nimport { withAuthorization, withEmailVerification } from '../../Session';\nimport { UserList, UserItem } from './index';\n\nconst AdminPage = () => (\n  <div>\n    <div className=\"jumbotron paral paralsec\">\n      <h1 className=\"display-8 text-center mb-3\">Admin</h1>\n    </div>\n    <Switch>\n      <Route exact path={ROUTES.ADMIN} component={UserList} />\n      <Route exact path={ROUTES.ADMIN_DETAILS} component={UserItem} />\n    </Switch>\n  </div>\n);\n\nconst condition = (authUser) => authUser.roles === 'ADMIN';\n\nexport default compose(\n  withEmailVerification,\n  withAuthorization(condition),\n)(AdminPage);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { HOME } from '../../routes';\nimport Logo from '../../images/minerva-transparent-vector.png';\n\nconst LandingPage = () => (\n  <div className=\"container landing-container\">\n    <Link to={{ pathname: HOME }}>\n      <img\n        className=\"landing-logo square fade-in\" alt=\"logo\"\n        src={Logo}\n      />\n      <p className=\"title\">Minerva Facilities</p>\n    </Link>\n  </div>\n);\n\nexport default LandingPage;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { HOME } from \"../../routes\";\n\nclass NotFoundPage extends Component {\n  render() {\n    return (\n      <div id=\"content-wrap\" className=\"container pt-5\" style={{ textAlign: 'center' }}>\n        <h1>Oops!</h1>\n        <h2>We can't find the page you're looking for.</h2>\n        <p>\n          <Link to={HOME}><button className=\"btn btn-secondary\">Go to Home Kid</button></Link>\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default NotFoundPage;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { AuthUserContext } from '../../Session';\nimport { withFirebase } from '../../Firebase';\nimport * as ROUTES from '../../../routes';\n\nimport { CreateCompanyForm } from '../../Utils';\n\nclass CompanyList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      companies: [],\n      limit: 5,\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ loading: true });\n\n    this.props.firebase\n      .companies()\n      .orderByChild('id')\n      .limitToLast(this.state.limit)\n      .on('value', (snapshot) => {\n        const companyObject = snapshot.val();\n\n        if (companyObject) {\n          const companyList = Object.keys(companyObject).map((key) => ({\n            ...companyObject[key],\n            uid: key,\n          }));\n\n          this.setState({\n            companies: companyList,\n            loading: false,\n          });\n        } else {\n          this.setState({ companies: null, loading: false });\n        }\n      });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.companies().off();\n  }\n\n  onNextPage = () => {\n    this.setState(\n      (state) => ({ limit: state.limit + 5 }),\n      this.onListenForCompanies,\n    );\n  };\n\n\n  render() {\n    const { companies, loading } = this.state;\n\n    return (\n      <AuthUserContext.Consumer>\n        {(authUser) => (\n          <div className=\"container add-padding-bottom\">\n            {loading && <div>Loading ...</div>}\n\n            {!companies ? (\n              <div>There are no companies ...</div>\n            ) : (\n              <div>\n                {companies.length > this.state.limit && (\n                  <button className=\"btn btn-secondary\" type=\"button\" onClick={this.onNextPage}>\n                    Show More\n                  </button>\n                )}\n\n                <ul className=\"ul-comp-list\">\n                  {companies.map(\n                    (company) =>\n                      company.uid === authUser.company_id && (\n                        <li key={company.uid} className=\"r-details-card\">\n                          <strong>Title:</strong> {company.companyTitle}\n                          <br />\n                          <strong>Location:</strong> {company.companyAddress}\n                          <br />\n                          <div className=\"row\">\n                            <div className=\"ml-3 mr-2\">\n                              <Link\n                                to={{\n                                  pathname: `${ROUTES.COMPANIES}/${company.uid}`,\n                                  state: { company },\n                                }}\n                              >\n                                Details\n                              </Link>\n                            </div>\n                          </div>\n                          <hr />\n                        </li>\n                      ),\n                  )}\n                </ul>\n              </div>\n            )}\n\n            {authUser.roles === 'ADMIN' && <CreateCompanyForm authUser={authUser} />}\n          </div>\n        )}\n      </AuthUserContext.Consumer>\n    );\n  }\n}\n\nexport default withFirebase(CompanyList);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { withFirebase } from '../../Firebase';\nimport { AuthUserContext } from '../../Session';\nimport * as ROUTES from '../../../routes';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\n\nclass CompanyDetail extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      editMode: false,\n      loading: false,\n      company: null,\n      companyTitle: '',\n      companyAddress: '',\n      ...props.location.state,\n    };\n  }\n\n  componentDidMount() {\n    if (this.state.company) {\n      return;\n    }\n\n    this.setState({ loading: true });\n\n    this.props.firebase.company(this.props.match.params.id).on('value', (snapshot) => {\n      this.setState({\n        company: snapshot.val(),\n        loading: false,\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.company(this.props.match.params.id).off();\n  }\n\n  onChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  onToggleEditMode = () => {\n    this.setState((state) => ({\n      editMode: !state.editMode,\n      companyTitle: this.state.company.companyTitle,\n      companyAddress: this.state.company.companyAddress,\n    }));\n  };\n\n  onSaveEdit = () => {\n    const { company, companyTitle, companyAddress } = this.state;\n    const { uid, ...companySnapshot } = company;\n\n    this.props.firebase.company(company.uid).set({\n      ...companySnapshot,\n      companyTitle,\n      companyAddress,\n      editedAt: this.props.firebase.serverValue.TIMESTAMP,\n    });\n\n    this.setState({ editMode: false });\n  };\n\n  onRemoveCompany = (uid, userID) => {\n    let dbUSER = this.props.firebase.user(userID)\n    dbUSER.child('companies').child(uid).remove();\n    dbUSER.child('company_id').remove();\n    this.props.firebase.company(uid).remove();\n    console.log(\"REMOVED Company: \", uid, dbUSER);\n  };\n\n  render() {\n    const { loading, company, editMode, companyTitle, companyAddress } = this.state;\n\n    const fullDateCreated = new Date(company.createdAt * 1000).toString().split(' ');\n    const dateCreated =\n      fullDateCreated[0] +\n      ', ' +\n      fullDateCreated[1] +\n      ' ' +\n      fullDateCreated[2] +\n      ', ' +\n      fullDateCreated[4] +\n      ', ' +\n      fullDateCreated[6] +\n      fullDateCreated[7] +\n      fullDateCreated[8];\n\n    const fullDateEdited = new Date(company.editedAt * 1000).toString().split(' ');\n    const dateEdited =\n      fullDateEdited[0] +\n      ', ' +\n      fullDateEdited[1] +\n      ' ' +\n      fullDateEdited[2] +\n      ', ' +\n      fullDateEdited[4] +\n      ', ' +\n      fullDateEdited[6] +\n      fullDateEdited[7] +\n      fullDateEdited[8];\n\n    return (\n      <AuthUserContext.Consumer>\n        {(authUser) => (\n          <div className=\"container\">\n            {loading && <div>Loading ...</div>}\n\n            {/* Display */}\n            {company && (\n              <div>\n                <h5>Company ({company.uid})</h5>\n                <strong>Title:</strong> {company.companyTitle}\n                <br />\n                <strong>Location:</strong> {company.companyAddress}\n                <br />\n                <strong>Company Owner:</strong> {company.ownerID}\n                <br />\n                <strong>Created At:</strong> {dateCreated}\n                <br />\n                {company.editedAt && (\n                  <p>\n                    <strong>Last Edited At:</strong> {dateEdited}\n                  </p>\n                )}\n                <br />\n                {company.buildingList && (\n                  <p>\n                    <strong>Buildings List:</strong> {company.buildingsList}\n                  </p>\n                )}\n              </div>\n            )}\n\n            {authUser.uid === company.owner.ownerID && (\n              <div className=\"\">\n                {editMode ? (\n                  <div>\n                    <div className=\"container\">\n                      <input\n                        type=\"text\"\n                        className=\"form-input form-control\"\n                        placeholder=\"Company name...\"\n                        name=\"companyTitle\"\n                        value={companyTitle}\n                        onChange={this.onChange}\n                      />\n                      <input\n                        type=\"text\"\n                        className=\"form-input form-control\"\n                        placeholder=\"Address...\"\n                        name=\"companyAddress\"\n                        value={companyAddress}\n                        onChange={this.onChange}\n                      />\n                    </div>\n\n                    <div className=\"justify-me\">\n                      <button className=\"btn btn-secondary btn-bot\" onClick={this.onSaveEdit}>\n                        Save Changes\n                      </button>\n                      <button className=\"btn btn-secondary btn-bot\" onClick={this.onToggleEditMode}>\n                        Cancel Edit\n                      </button>\n                    </div>\n                  </div>\n                ) : (\n                  <div className=\"row\">\n                    <button className=\"btn-li\" onClick={this.onToggleEditMode}>\n                      <FontAwesomeIcon icon={faEdit} />\n                    </button>\n\n                    <button className=\"btn-li\" type=\"button\" onClick={(auhtUser) => this.onRemoveCompany(company.uid, auhtUser.uid)}>\n                      <Link to={ROUTES.COMPANIES}><FontAwesomeIcon icon={faTrash} /></Link>\n                    </button>\n                  </div>\n                )}\n              </div>\n            )}\n\n            {/* Navigation */}\n            <div className=\"row\">\n              <div className=\"ml-3 mr-2\">\n                <Link to={ROUTES.COMPANIES}>\n                  <button className=\"btn btn-secondary\">Back</button>\n                </Link>\n              </div>\n              <div className=\"mr-2\">\n                <Link to={{ pathname: `${ROUTES.BUILDINGS}`, state: company }}>\n                  <button className=\"btn btn-success\">Buildings List</button>\n                </Link>\n              </div>\n            </div>\n          </div>\n        )}\n      </AuthUserContext.Consumer>\n    );\n  }\n}\n\nexport default withFirebase(CompanyDetail);\n","import CompanyList from './CompanyList';\nimport CompanyDetails from './CompanyDetails';\nimport CompaniesPage from './CompaniesPage';\n\nexport { CompanyList, CompanyDetails, CompaniesPage };\nexport default CompaniesPage;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport * as ROUTES from '../../../routes';\nimport { AuthUserContext, withAuthorization, withEmailVerification } from '../../Session';\nimport { CreateCompanyForm } from '../../Utils';\nimport { CompanyList, CompanyDetails } from './index';\n\nconst CompaniesPage = () => (\n  <AuthUserContext.Consumer>\n    {(authUser) => (\n      <div>\n        <div className=\"jumbotron paral paralsec\">\n          <h1 className=\"display-8 text-center mb-3\">Companies</h1>\n        </div>\n\n        <Switch>\n          <Route exact path={ROUTES.COMPANIES} component={CompanyList} />\n          <Route exact path={ROUTES.COMPANY_NEW}>\n            <CreateCompanyForm authUser={authUser} />\n          </Route>\n          <Route exact path={ROUTES.COMPANY_DETAILS} component={CompanyDetails} />\n        </Switch>\n      </div>\n    )}\n  </AuthUserContext.Consumer>\n);\n\nconst condition = (authUser) => !!authUser;\n\nexport default compose(\n  withEmailVerification,\n  withAuthorization(condition),\n)(CompaniesPage);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { AuthUserContext } from '../../Session';\nimport { withFirebase } from '../../Firebase';\nimport * as ROUTES from '../../../routes';\n\nimport { CreateBuildingForm } from '../../Utils';\n\nclass BuildingList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      buildings: [],\n      limit: 5,\n      companyID: this.props.companyID,\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ loading: true });\n\n    this.props.firebase\n      .buildings()\n      .orderByChild('companyID')\n      .limitToLast(this.state.limit)\n      .on('value', (snapshot) => {\n        const buildingsObject = snapshot.val();\n\n        if (buildingsObject) {\n          const buildingList = Object.keys(buildingsObject).map((key) => ({\n            ...buildingsObject[key],\n            uid: key,\n          }));\n\n          this.setState({\n            buildings: buildingList,\n            loading: false,\n          });\n        } else {\n          this.setState({ buildings: null, loading: false });\n        }\n      });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.buildings().off();\n  }\n\n  onNextPage = () => {\n    this.setState((state) => ({ limit: state.limit + 5 }), this.onListenForBuildings);\n  };\n\n  render() {\n    const { buildings, loading } = this.state;\n\n    return (\n      <AuthUserContext.Consumer>\n        {(authUser) => (\n          <div className=\"container add-padding-bottom\">\n            {loading && <div>Loading ...</div>}\n\n            {!buildings ? (\n              <div>There are no buildings ...</div>\n            ) : (\n              <div>\n                {buildings.length > this.state.limit && (\n                  <button className=\"btn btn-secondary\" type=\"button\" onClick={this.onNextPage}>\n                    Show More\n                  </button>\n                )}\n\n                <ul className=\"ul-comp-list\">\n                  {buildings.map(\n                    (building) =>\n                      building.companyID === authUser.company_id && (\n                        <li key={building.uid} className=\"r-details-card\">\n                          <strong>Title:</strong> {building.buildingTitle}\n                          <br />\n                          <strong>Location:</strong> {building.buildingAddress}\n                          <br />\n                          <div className=\"row\">\n                            <div className=\"ml-3 mr-2\">\n                              <Link\n                                to={{\n                                  pathname: `${ROUTES.BUILDINGS}/${building.uid}`,\n                                  state: { building },\n                                }}\n                              >\n                                Details\n                              </Link>\n                            </div>\n                          </div>\n                          <hr />\n                        </li>\n                      ),\n                  )}\n                </ul>\n              </div>\n            )}\n\n            {authUser.roles === 'ADMIN' && <CreateBuildingForm authUser={authUser} />}\n          </div>\n        )}\n      </AuthUserContext.Consumer>\n    );\n  }\n}\n\nexport default withFirebase(BuildingList);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { withFirebase } from '../../Firebase';\nimport { AuthUserContext } from '../../Session';\nimport * as ROUTES from '../../../routes';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\n\n\nclass BuildingDetail extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      building: null,\n      editMode: false,\n      companyID: '',\n      buildingTitle: '',\n      buildingAddress: '',\n      ...props.location.state,\n    };\n  }\n\n  componentDidMount() {\n    if (this.state.building) {\n      console.log(this.state);\n      return;\n    }\n\n    this.setState({ loading: true });\n\n    this.props.firebase.building(this.props.match.params.id).on('value', (snapshot) => {\n      this.setState({\n        building: snapshot.val(),\n        loading: false,\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.building(this.props.match.params.id).off();\n  }\n\n  onChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  onToggleEditMode = () => {\n    this.setState((state) => ({\n      editMode: !state.editMode,\n      companyID: this.state.companyID,\n      buildingTitle: this.state.building.buildingTitle,\n      buildingAddress: this.state.building.buildingAddress,\n    }));\n  };\n\n  onSaveEdit = () => {\n    const { building, buildingTitle, buildingAddress } = this.state;\n    const { uid, ...buildingSnapshot } = building;\n\n    this.props.firebase.building(building.uid).set({\n      ...buildingSnapshot,\n      buildingTitle,\n      buildingAddress,\n      editedAt: this.props.firebase.serverValue.TIMESTAMP,\n    });\n\n    this.setState({ editMode: false });\n  };\n\n  onRemoveBuilding = (uid) => {\n    this.props.firebase.building(uid).remove();\n  };\n\n  render() {\n    const { loading, building, companyID, editMode, buildingTitle, buildingAddress } = this.state;\n\n    const fullDateCreated = new Date(building.createdAt * 1000).toString().split(' ');\n    const dateCreated =\n      fullDateCreated[0] +\n      ', ' +\n      fullDateCreated[1] +\n      ' ' +\n      fullDateCreated[2] +\n      ', ' +\n      fullDateCreated[4] +\n      ', ' +\n      fullDateCreated[6] +\n      fullDateCreated[7] +\n      fullDateCreated[8];\n\n    const fullDateEdited = new Date(building.editedAt * 1000).toString().split(' ');\n    const dateEdited =\n      fullDateEdited[0] +\n      ', ' +\n      fullDateEdited[1] +\n      ' ' +\n      fullDateEdited[2] +\n      ', ' +\n      fullDateEdited[4] +\n      ', ' +\n      fullDateEdited[6] +\n      fullDateEdited[7] +\n      fullDateEdited[8];\n\n    return (\n      <AuthUserContext.Consumer>\n        {(authUser) => (\n          <div className=\"container\">\n            {loading && <div>Loading ...</div>}\n\n            {/* Display */}\n            {building && (\n              <div>\n                <h5>Building ({building.uid})</h5>\n                <strong>Title:</strong> {building.buildingTitle}\n                <br />\n                <strong>Location:</strong> {building.buildingAddress}\n                <br />\n                <strong>Company:</strong> {companyID}\n                <br />\n                <strong>Company Owner:</strong> {building.companyOwner}\n                <br />\n                <strong>Created At:</strong> {dateCreated}\n                <br />\n                {building.editedAt && (\n                  <p>\n                    <strong>Last Edited At:</strong> {dateEdited}\n                  </p>\n                )}\n              </div>\n            )}\n\n            {authUser.uid === building.owner.ownerID && (\n              <div className=\"\">\n                {editMode ? (\n                  <div>\n                    <div className=\"container\">\n                      <input\n                        type=\"text\"\n                        className=\"col-10 form-input\"\n                        placeholder=\"Name Your Building!\"\n                        name=\"buildingTitle\"\n                        value={buildingTitle}\n                        onChange={this.onChange}\n                      />\n                      <input\n                        type=\"text\"\n                        className=\"col-10 form-input\"\n                        placeholder=\"Where does it live?\"\n                        name=\"buildingAddress\"\n                        value={buildingAddress}\n                        onChange={this.onChange}\n                      />\n                    </div>\n\n                    <div className=\"justify-me\">\n                      <button className=\"btn btn-secondary btn-bot\" onClick={this.onSaveEdit}>\n                        Save Changes\n                      </button>\n                      <button className=\"btn btn-secondary btn-bot\" onClick={this.onToggleEditMode}>\n                        Cancel Edit\n                      </button>\n                    </div>\n                  </div>\n                ) : (\n                  <div className=\"row\">\n                    <button className=\"btn-li\" onClick={this.onToggleEditMode}>\n                      <FontAwesomeIcon icon={faEdit} />\n                    </button>\n\n                    <button className=\"btn-li\" tpye=\"button\" onClick={() => this.onRemoveBuilding(building.uid)}>\n                      <Link to={ROUTES.BUILDINGS}><FontAwesomeIcon icon={faTrash} /></Link>\n                    </button>\n                  </div>\n                )}\n              </div>\n            )}\n\n            {/* Navigation */}\n            <div className=\"row\">\n              <div className=\"ml-3 mr-2\">\n                <Link to={ROUTES.BUILDINGS}>\n                  <button className=\"btn btn-secondary\">Back</button>\n                </Link>\n              </div>\n              <div className=\"mr-2\">\n                <Link to={{ pathname: `${ROUTES.FLOORS}`, state: building }}>\n                  <button className=\"btn btn-success\">Floors List </button>\n                </Link>\n              </div>\n            </div>\n          </div>\n        )}\n      </AuthUserContext.Consumer>\n    );\n  }\n}\n\nexport default withFirebase(BuildingDetail);\n","import BuildingList from './BuildingList';\nimport BuildingDetails from './BuildingDetails';\nimport BuildingsPage from './BuildingsPage';\n\nexport { BuildingList, BuildingDetails, BuildingsPage };\nexport default BuildingsPage;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport { AuthUserContext, withAuthorization, withEmailVerification } from '../../Session';\nimport { CreateBuildingForm } from '../../Utils';\nimport { BuildingList, BuildingDetails } from './index';\nimport * as ROUTES from '../../../routes';\n\n\nconst BuildingsPage = () => (\n  <AuthUserContext.Consumer>\n    {(authUser) => (\n      <div>\n        <div className=\"jumbotron paral paralsec\">\n          <h1 className=\"display-8 text-center mb-3\">Buildings</h1>\n        </div>\n\n        <Switch>\n          <Route exact path={ROUTES.BUILDINGS} component={BuildingList} />\n          <Route exact path={ROUTES.BUILDING_NEW}>\n            <CreateBuildingForm authUser={authUser} />\n          </Route>\n          <Route exact path={ROUTES.BUILDING_DETAILS} component={BuildingDetails} />\n        </Switch>\n      </div>\n    )}\n  </AuthUserContext.Consumer>\n);\n\nconst condition = (authUser) => !!authUser;\n\nexport default compose(\n  withEmailVerification,\n  withAuthorization(condition),\n)(BuildingsPage);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { AuthUserContext } from '../../Session';\nimport { withFirebase } from '../../Firebase';\nimport * as ROUTES from '../../../routes';\n\nimport { CreateFloorForm } from '../../Utils';\n\nclass FloorList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      floors: [],\n      limit: 5,\n      companyID: this.props.companyID,\n      buildingID: this.props.buildingID,\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ loading: true });\n\n    this.props.firebase\n      .floors()\n      .orderByChild('companyID')\n      .limitToLast(this.state.limit)\n      .on('value', (snapshot) => {\n        const floorsObject = snapshot.val();\n\n        if (floorsObject) {\n          const floorList = Object.keys(floorsObject).map((key) => ({\n            ...floorsObject[key],\n            uid: key,\n          }));\n\n          this.setState({\n            floors: floorList,\n            loading: false,\n          });\n        } else {\n          this.setState({ floors: null, loading: false });\n        }\n      });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.floors().off();\n  }\n\n  onNextPage = () => {\n    this.setState((state) => ({ limit: state.limit + 5 }), this.onListenForFloors);\n  };\n\n  render() {\n    const { floors, loading } = this.state;\n\n    return (\n      <AuthUserContext.Consumer>\n        {(authUser) => (\n          <div className=\"container add-padding-bottom\">\n            {loading && <div>Loading ...</div>}\n\n            {!floors ? (\n              <div>There are no floors for your Company/Building...</div>\n            ) : (\n              <div>\n                {floors.length > this.state.limit && (\n                  <button className=\"btn btn-secondary btn-bot\" type=\"button\" onClick={this.onNextPage}>\n                    More\n                  </button>\n                )}\n\n                <ul className=\"ul-comp-list\">\n                  {floors.map(\n                    (floor) =>\n                      floor.companyID === authUser.company_id && (\n                        <li key={floor.uid} className=\"r-details-card\">\n                          <strong>Title:</strong> {floor.floorTitle}\n                          <br />\n                          <strong>Location:</strong> {floor.floorAddress}\n                          <br />\n                          <div className=\"row\">\n                            <div className=\"ml-3 mr-2\">\n                              <Link to={{ pathname: `${ROUTES.FLOORS}/${floor.uid}`, state: { floor } }}>Details</Link>\n                            </div>\n                          </div>\n                          <hr />\n                        </li>\n                      ),\n                  )}\n                </ul>\n              </div>\n            )}\n\n            {authUser.roles === 'ADMIN' && <CreateFloorForm authUser={authUser} />}\n          </div>\n        )}\n      </AuthUserContext.Consumer>\n    );\n  }\n}\n\nexport default withFirebase(FloorList);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { withFirebase } from '../../Firebase';\nimport { AuthUserContext } from '../../Session';\nimport * as ROUTES from '../../../routes';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\n\n\nclass FloorDetail extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      floor: null,\n      editMode: false,\n      companyID: '',\n      floorTitle: '',\n      floorAddress: '',\n      ...props.location.state,\n    };\n  }\n\n  componentDidMount() {\n    if (this.state.floor) {\n      return;\n    }\n\n    this.setState({ loading: true });\n\n    this.props.firebase.floor(this.props.match.params.id).on('value', (snapshot) => {\n      this.setState({\n        floor: snapshot.val(),\n        loading: false,\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.floor(this.props.match.params.id).off();\n  }\n\n  onChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  onToggleEditMode = () => {\n    this.setState((state) => ({\n      editMode: !state.editMode,\n      companyID: this.state.companyID,\n      buildingID: this.state.buildingID,\n      floorTitle: this.state.floor.floorTitle,\n      floorAddress: this.state.floor.floorAddress,\n    }));\n  };\n\n  onSaveEdit = () => {\n    const { floor, floorTitle, floorAddress } = this.state;\n    const { uid, ...floorSnapshot } = floor;\n\n    this.props.firebase.floor(floor.uid).set({\n      ...floorSnapshot,\n      floorTitle,\n      floorAddress,\n      editedAt: this.props.firebase.serverValue.TIMESTAMP,\n    });\n\n    this.setState({ editMode: false });\n  };\n\n  onRemoveFloor = (uid) => {\n    this.props.firebase.floor(uid).remove();\n  };\n\n  render() {\n    const { loading, floor, editMode, floorTitle, floorAddress } = this.state;\n\n    const fullDateCreated = new Date(floor.createdAt * 1000).toString().split(' ');\n    const dateCreated =\n      fullDateCreated[0] +\n      ', ' +\n      fullDateCreated[1] +\n      ' ' +\n      fullDateCreated[2] +\n      ', ' +\n      fullDateCreated[4] +\n      ', ' +\n      fullDateCreated[6] +\n      fullDateCreated[7] +\n      fullDateCreated[8];\n\n    const fullDateEdited = new Date(floor.editedAt * 1000).toString().split(' ');\n    const dateEdited =\n      fullDateEdited[0] +\n      ', ' +\n      fullDateEdited[1] +\n      ' ' +\n      fullDateEdited[2] +\n      ', ' +\n      fullDateEdited[4] +\n      ', ' +\n      fullDateEdited[6] +\n      fullDateEdited[7] +\n      fullDateEdited[8];\n\n    return (\n      <AuthUserContext.Consumer>\n        {(authUser) => (\n          <div className=\"container\">\n            {loading && <div>Loading ...</div>}\n\n            {floor && (\n              <div>\n                <h5>Floor ({floor.uid})</h5>\n                <strong>Title:</strong> {floor.floorTitle}\n                <br />\n                <strong>Location:</strong> {floor.floorAddress}\n                <br />\n                <strong>Company:</strong> {floor.companyID}\n                <br />\n                <strong>Building:</strong> {floor.buildingID}\n                <br />\n                <strong>Company Owner:</strong> {floor.owner.ownerName}\n                <br />\n                <strong>Created At:</strong> {dateCreated}\n                <br />\n                {floor.editedAt && (\n                  <p>\n                    <strong>Last Edited At:</strong> {dateEdited}\n                  </p>\n                )}\n              </div>\n            )}\n\n            {authUser.uid === floor.owner.ownerID && (\n              <div className=\"\">\n                {editMode ? (\n                  <div>\n                    <div>\n                      <input\n                        type=\"text\"\n                        className=\"col-10 form-input\"\n                        placeholder=\"Floor Name?\"\n                        name=\"floorTitle\"\n                        value={floorTitle}\n                        onChange={this.onChange}\n                      />\n                      <input\n                        placeholder=\"Floor Location/Number?\"\n                        type=\"text\"\n                        className=\"col-10 form-input\"\n                        name=\"floorAddress\"\n                        value={floorAddress}\n                        onChange={this.onChange}\n                      />\n                    </div>\n\n                    <div className=\"justify-me\">\n                      <button className=\"btn btn-secondary btn-bot\" onClick={this.onSaveEdit}>\n                        Save\n                      </button>\n                      <button className=\"btn btn-secondary btn-bot\" onClick={this.onToggleEditMode}>\n                        Reset\n                      </button>\n                    </div>\n                  </div>\n                ) : (\n                  <div className=\"row\">\n                    <button className=\"btn-li\" onClick={this.onToggleEditMode}>\n                      <FontAwesomeIcon icon={faEdit} />\n                    </button>\n\n                    <button type=\"button\" className=\"btn-li\" onClick={() => this.onRemoveFloor(floor.uid)}>\n                      <Link to={ROUTES.FLOORS}>\n                        <FontAwesomeIcon icon={faTrash} />\n                      </Link>\n                    </button>\n                  </div>\n                )}\n              </div>\n            )}\n\n            <div className=\"row\">\n              <div className=\"ml-3 mr-2\">\n                <Link to={ROUTES.FLOORS}>\n                  <button className=\"btn btn-secondary\">Back</button>\n                </Link>\n              </div>\n              <div className=\"mr-2\">\n                <Link to={{ pathname: `${ROUTES.ROOMS}`, state: floor }}>\n                  <button className=\"btn btn-success\">Rooms List </button>\n                </Link>\n              </div>\n            </div>\n          </div>\n        )}\n      </AuthUserContext.Consumer>\n    );\n  }\n}\n\nexport default withFirebase(FloorDetail);\n","import FloorList from './FloorList';\nimport FloorDetails from './FloorDetails';\nimport FloorsPage from './FloorsPage';\n\nexport { FloorList, FloorDetails, FloorsPage };\nexport default FloorsPage;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport { AuthUserContext, withAuthorization, withEmailVerification } from '../../Session';\nimport { CreateFloorForm } from '../../Utils';\nimport { FloorList, FloorDetails } from './index';\nimport * as ROUTES from '../../../routes';\n\nconst FloorsPage = () => (\n  <AuthUserContext.Consumer>\n    {(authUser) => (\n      <div>\n        <div className=\"jumbotron paral paralsec\">\n          <h1 className=\"display-8 text-center mb-3\">Floors</h1>\n        </div>\n        <Switch>\n          <Route exact path={ROUTES.FLOORS} component={FloorList} />\n          <Route exact path={ROUTES.FLOOR_NEW}>\n            <CreateFloorForm authUser={authUser} />\n          </Route>\n          <Route exact path={ROUTES.FLOOR_DETAILS} component={FloorDetails} />\n        </Switch>\n      </div>\n    )}\n  </AuthUserContext.Consumer>\n);\n\nconst condition = (authUser) => !!authUser;\n\nexport default compose(\n  withEmailVerification,\n  withAuthorization(condition),\n)(FloorsPage);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { AuthUserContext } from '../../Session';\nimport { withFirebase } from '../../Firebase';\nimport * as ROUTES from '../../../routes';\n\nimport { CreateRoomForm } from '../../Utils';\n\nclass RoomList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      rooms: [],\n      limit: 5,\n      companyID: this.props.companyID,\n      buildingID: this.props.buildingID,\n      floorID: this.props.floorID,\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ loading: true });\n\n    this.props.firebase\n      .rooms()\n      .orderByChild('companyID')\n      .limitToLast(this.state.limit)\n      .on('value', (snapshot) => {\n        const roomsObject = snapshot.val();\n\n        if (roomsObject) {\n          const roomsList = Object.keys(roomsObject).map((key) => ({\n            ...roomsObject[key],\n            uid: key,\n          }));\n\n          this.setState({\n            rooms: roomsList,\n            loading: false,\n          });\n        } else {\n          this.setState({ floors: null, loading: false });\n        }\n      });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.rooms().off();\n  }\n\n  onNextPage = () => {\n    this.setState((state) => ({ limit: state.limit + 5 }), this.onListenForFloors);\n  };\n\n  render() {\n    const { rooms, loading } = this.state;\n\n    return (\n      <AuthUserContext.Consumer>\n        {(authUser) => (\n          <div className=\"container add-padding-bottom\">\n            {loading && <div>Loading ...</div>}\n\n            {!rooms ? (\n              <div>There are no Rooms for your Building/Floor...</div>\n            ) : (\n              <div>\n                {rooms.length > this.state.limit && (\n                  <button className=\"btn btn-secondary btn-bot\" type=\"button\" onClick={this.onNextPage}>\n                    More\n                  </button>\n                )}\n\n                <ul className=\"ul-comp-list\">\n                  {rooms.map(\n                    (room) =>\n                      room.companyID === authUser.company_id && (\n                        <li key={room.uid}>\n                          <strong>Title:</strong> {room.roomTitle}\n                          <br />\n                          <strong>Location:</strong> {room.roomAddress}\n                          <br />\n                          <Link to={{ pathname: `${ROUTES.ROOMS}/${room.uid}`, state: { room } }}>Details</Link>\n                          <hr />\n                        </li>\n                      ),\n                  )}\n                </ul>\n              </div>\n            )}\n\n            {authUser.roles === 'ADMIN' && <CreateRoomForm authUser={authUser} />}\n          </div>\n        )}\n      </AuthUserContext.Consumer>\n    );\n  }\n}\n\nexport default withFirebase(RoomList);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { withFirebase } from '../../Firebase';\nimport { AuthUserContext } from '../../Session';\nimport * as ROUTES from '../../../routes';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\n\n\nclass RoomDetails extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      room: null,\n      editMode: false,\n      companyID: '',\n      roomTitle: '',\n      roomAddress: '',\n      ...props.location.state,\n    };\n  }\n\n  componentDidMount() {\n    if (this.state.room) {\n      return;\n    }\n\n    this.setState({ loading: true });\n\n    this.props.firebase.room(this.props.match.params.id).on('value', (snapshot) => {\n      this.setState({\n        room: snapshot.val(),\n        loading: false,\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.room(this.props.match.params.id).off();\n  }\n\n  onChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  onToggleEditMode = () => {\n    this.setState((state) => ({\n      editMode: !state.editMode,\n      companyID: this.state.companyID,\n      buildingID: this.state.buildingID,\n      floorID: this.state.floorID,\n      roomTitle: this.state.room.roomTitle,\n      roomAddress: this.state.room.roomAddress,\n    }));\n  };\n\n  onSaveEdit = () => {\n    const { room, roomTitle, roomAddress } = this.state;\n    const { uid, ...roomSnapshot } = room;\n\n    this.props.firebase.room(room.uid).set({\n      ...roomSnapshot,\n      roomTitle,\n      roomAddress,\n      editedAt: this.props.firebase.serverValue.TIMESTAMP,\n    });\n\n    this.setState({ editMode: false });\n  };\n\n  onRemoveRoom = (uid) => {\n    this.props.firebase.room(uid).remove();\n  };\n\n  render() {\n    const { loading, room, editMode, roomTitle, roomAddress } = this.state;\n\n    const fullDateCreated = new Date(room.createdAt * 1000).toString().split(' ');\n    const dateCreated =\n      fullDateCreated[0] +\n      ', ' +\n      fullDateCreated[1] +\n      ' ' +\n      fullDateCreated[2] +\n      ', ' +\n      fullDateCreated[4] +\n      ', ' +\n      fullDateCreated[6] +\n      fullDateCreated[7] +\n      fullDateCreated[8];\n\n    const fullDateEdited = new Date(room.editedAt * 1000).toString().split(' ');\n    const dateEdited =\n      fullDateEdited[0] +\n      ', ' +\n      fullDateEdited[1] +\n      ' ' +\n      fullDateEdited[2] +\n      ', ' +\n      fullDateEdited[4] +\n      ', ' +\n      fullDateEdited[6] +\n      fullDateEdited[7] +\n      fullDateEdited[8];\n\n    return (\n      <AuthUserContext.Consumer>\n        {(authUser) => (\n          <div className=\"container\">\n            {loading && <div>Loading ...</div>}\n\n            {room && (\n              <div>\n                <h5>Room ({room.uid})</h5>\n                <strong>Title:</strong> {room.roomTitle}\n                <br />\n                <strong>Location:</strong> {room.roomAddress}\n                <br />\n                <strong>Company ID:</strong> {room.companyID}\n                <br />\n                <strong>Building ID:</strong> {room.buildingID}\n                <br />\n                <strong>Floor ID:</strong> {room.floorID}\n                <br />\n                <strong>Created At:</strong> {dateCreated}\n                <br />\n                {room.editedAt && (\n                  <p>\n                    <strong>Last Edited At:</strong> {dateEdited}\n                  </p>\n                )}\n              </div>\n            )}\n\n            {authUser.uid === room.owner.ownerID && (\n              <div className=\"\">\n                {editMode ? (\n                  <div>\n                    <div>\n                      <input\n                        type=\"text\"\n                        className=\"col-10 form-input\"\n                        placeholder=\"Room Name?\"\n                        name=\"roomTitle\"\n                        value={roomTitle}\n                        onChange={this.onChange}\n                      />\n                      <input\n                        placeholder=\"Room Location/Number?\"\n                        type=\"text\"\n                        className=\"col-10 form-input\"\n                        name=\"roomAddress\"\n                        value={roomAddress}\n                        onChange={this.onChange}\n                      />\n                    </div>\n\n                    <div className=\"justify-me\">\n                      <button className=\"btn btn-secondary btn-bot\" onClick={this.onSaveEdit}>\n                        Save\n                      </button>\n                      <button className=\"btn btn-secondary btn-bot\" onClick={this.onToggleEditMode}>\n                        Reset\n                      </button>\n                    </div>\n                  </div>\n                ) : (\n                  <div className=\"row\">\n                    <button className=\"btn-li\" onClick={this.onToggleEditMode}>\n                      <FontAwesomeIcon icon={faEdit} />\n                    </button>\n\n                    <button type=\"button\" className=\"btn-li\" onClick={() => this.onRemoveRoom(room.uid)}>\n                      <Link to={ROUTES.ROOMS}>\n                        <FontAwesomeIcon icon={faTrash} />\n                      </Link>\n                    </button>\n                  </div>\n                )}\n              </div>\n            )}\n\n            <div className=\"row justify-me\">\n              <div className=\"ml-3 mr-2\">\n                <Link to={ROUTES.ROOMS}>\n                  <button className=\"btn btn-secondary\">Back</button>\n                </Link>\n              </div>\n              <div className=\"mr-2\">\n                <Link to={{ pathname: `${ROUTES.REPORTS}`, state: room }}>\n                  <button className=\"btn btn-success\">Create Report</button>\n                </Link>\n              </div>\n            </div>\n          </div>\n        )}\n      </AuthUserContext.Consumer>\n    );\n  }\n}\n\nexport default withFirebase(RoomDetails);\n","import RoomList from './RoomList';\nimport RoomDetails from './RoomDetails';\nimport RoomsPage from './RoomsPage';\n\nexport { RoomList, RoomDetails, RoomsPage };\nexport default RoomsPage;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport * as ROUTES from '../../../routes';\nimport { AuthUserContext, withAuthorization, withEmailVerification } from '../../Session';\nimport { CreateRoomForm } from '../../Utils';\nimport { RoomList, RoomDetails } from './index';\n\n\nconst RoomsPage = () => (\n  <AuthUserContext.Consumer>\n    {(authUser) => (\n      <div>\n        <div className=\"jumbotron paral paralsec\">\n          <h1 className=\"display-8 text-center mb-3\">Rooms</h1>\n        </div>\n\n        <Switch>\n          <Route exact path={ROUTES.ROOMS} component={RoomList} />\n          <Route exact path={ROUTES.ROOM_NEW}>\n            <CreateRoomForm authUser={authUser} />\n          </Route>\n          <Route exact path={ROUTES.ROOM_DETAILS} component={RoomDetails} />\n        </Switch>\n      </div>\n    )}\n  </AuthUserContext.Consumer>\n);\n\nconst condition = (authUser) => !!authUser;\n\nexport default compose(\n  withEmailVerification,\n  withAuthorization(condition),\n)(RoomsPage);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport * as ROUTES from '../../../routes';\nimport { withFirebase } from '../../Firebase';\nimport { AuthUserContext } from '../../Session';\nimport { CreateReportForm } from '../../Utils';\n\nclass ReportList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      reports: [],\n      limit: 5,\n      companyID: this.props.companyID,\n      buildingID: this.props.buildingID,\n      floorID: this.props.floorID,\n      roomID: this.props.roomID,\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ loading: true });\n\n    this.props.firebase\n      .reports()\n      .orderByChild('createdAt')\n      .on('value', (snapshot) => {\n        const reportsObject = snapshot.val();\n\n        if (reportsObject) {\n          const reportList = Object.keys(reportsObject).map((key) => ({\n            ...reportsObject[key],\n            uid: key,\n          }));\n\n          this.setState({\n            reports: reportList,\n            loading: false,\n          });\n        } else {\n          this.setState({ reports: null, loading: false });\n        }\n      });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.reports().off();\n  }\n\n  onNextPage = () => {\n    this.setState((state) => ({ limit: state.limit + 5 }), this.onListenForReports);\n  };\n\n  render() {\n    const { loading, reports } = this.state;\n\n    // const date = report.createdAt;\n    // const fullDate = new Date(report.createdAt * 1000).toString().split(' ');\n    // const date =\n    //   fullDate[0] + ', ' + fullDate[1] + ' ' + fullDate[2] + ', ' + fullDate[4] + ', ' + fullDate[6] + fullDate[7] + fullDate[8];\n    // // https://stackoverflow.com/a/57103780/13986242\n\n    return (\n      <AuthUserContext.Consumer>\n        {(authUser) => (\n          <div className=\"container add-padding-bottom\">\n            {loading && <div>Loading ...</div>}\n\n            {!reports ? (\n              <div>There are no Reports for your Company/Building...</div>\n            ) : (\n              <div>\n                {reports.length > this.state.limit && (\n                  <button className=\"btn btn-secondary btn-bot\" type=\"button\" onClick={this.onNextPage}>\n                    More\n                  </button>\n                )}\n\n                <ul className=\"ul-comp-list\">\n                  {reports.map(\n                    (report) =>\n                      report.location.companyID === authUser.company_id && (\n                        <li key={report.uid} className=\"r-details-card\">\n                          <Link to={{ pathname: `${ROUTES.REPORTS}/${report.uid}`, state: { report } }}>\n                            <div className=\"report-card\">\n                              <p className=\"comp-item report-title\">\n                                <strong>{report.reportTitle}</strong>\n                              </p>\n\n                              <hr />\n\n                              <p className=\"comp-item report-id\">\n                                <sup>\n                                  {/* {date} <br /> {report.uid} */}\n                                  {new Date(report.createdAt * 1000).toString().split(' ')} <br /> {report.uid}\n                                </sup>\n                              </p>\n                              <p className=\"comp-item\">\n                                <strong>Status: </strong>({report.reportStatus})\n                              </p>\n                              <p className=\"comp-item\">\n                                <strong>Request Type: </strong>({report.reportServiceType})\n                              </p>\n                              {/* <p className=\"comp-item report-desc\">\n                                <strong>Desc: </strong>\n                                {report.reportMessage}\n                              </p> */}\n                              <p className=\"comp-item report-location\">\n                                {/* <strong>Location: </strong> */}\n                                {/* Company ID: {report.location.companyID},<br /> */}\n                                {/* Building ID: {report.location.buildingID},<br /> */}\n                                {/* Floor ID: {report.location.floorID},<br /> */}\n                                <strong>Room ID:</strong>\n                                <span className=\"ticket-info\">{report.location.roomID}</span>\n                              </p>\n                              {/* <p className=\"comp-item\">\n                                <sub>{report.editedAt && <span> (Edited)</span>}</sub>\n                              </p> */}\n                            </div>\n                          </Link>\n                        </li>\n                      ),\n                  )}\n                </ul>\n              </div>\n            )}\n\n            <CreateReportForm authUser={authUser} />\n\n          </div>\n        )}\n      </AuthUserContext.Consumer>\n    );\n  }\n}\n\nexport default withFirebase(ReportList);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\n\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\n// https://www.npmjs.com/package/react-confirm-alert\n\nimport * as ROUTES from '../../../routes';\nimport { withFirebase } from '../../Firebase';\nimport { AuthUserContext } from '../../Session';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\n\n\nclass ReportDetail extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      editMode: false,\n      isBlocking: false,\n      upload: null,\n      progress: 0,\n\n      report: null,\n      // reportData: {\n      //   companyID: '',\n      //   buildingID: '',\n      //   floorID: '',\n      //   roomID: '',\n\n      reportTitle: '',\n      reportMessage: '',\n      reportStatus: 'OPEN',\n      reportServiceType: '',\n\n      //   reportImageURL: '',\n      //   reportImageName: '',\n      // },\n      ...props.location.state,\n    };\n  }\n\n  componentDidMount() {\n    if (this.state.report) {\n      return;\n    }\n\n    this.setState({ loading: true });\n\n    this.props.firebase.reports(this.props.match.params.id).on('value', (snapshot) => {\n      this.setState({\n        report: snapshot.val(),\n        loading: false,\n        isBlocking: false,\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.report(this.props.match.params.id).off();\n  }\n\n  onToggleEditMode = () => {\n    this.setState((state) => ({\n      editMode: !state.editMode,\n      reportTitle: this.state.report.reportTitle,\n      reportMessage: this.state.report.reportMessage,\n      reportStatus: this.state.report.reportStatus,\n      reportServiceType: this.state.report.reportServiceType,\n    }));\n  };\n\n  onChangeEdits = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n      isBlocking: event.target.value.length > 0,\n    });\n  };\n\n  onSaveEdit = () => {\n    const { report, reportTitle, reportMessage, reportStatus, reportServiceType } = this.state;\n\n    const { uid, ...reportSnapshot } = report;\n\n    this.props.firebase.report(report.uid).set({\n      ...reportSnapshot,\n      reportTitle,\n      reportMessage,\n      reportStatus,\n      reportServiceType,\n      // image_url,\n      // image_name,\n      editedAt: this.props.firebase.serverValue.TIMESTAMP,\n    });\n\n    this.setState({ editMode: false });\n  };\n\n  onRemoveReport = (uid) => {\n    const report = this.props.firebase.report(uid);\n\n    confirmAlert({\n      title: 'Confirm Delete',\n      message: 'Are you sure to do this.',\n      buttons: [\n        {\n          label: 'Yes',\n          onClick: () => {\n            // this.props.firebase.storage.ref().child('images').delete(), \n            report.remove();\n          },\n          // alert('Click Yes'),\n        },\n        {\n          label: 'No',\n          // onClick: () => alert('Click No'),\n        },\n      ],\n    });\n  };\n\n  render() {\n    const { loading, report, editMode, reportTitle, reportMessage, reportStatus, reportServiceType } = this.state;\n\n    const fullDateCreated = new Date(report.createdAt * 1000).toString().split(' ');\n    const dateCreated =\n      fullDateCreated[0] +\n      ', ' +\n      fullDateCreated[1] +\n      ' ' +\n      fullDateCreated[2] +\n      ', ' +\n      fullDateCreated[4] +\n      ', ' +\n      fullDateCreated[6] +\n      fullDateCreated[7] +\n      fullDateCreated[8];\n\n    const FullDateEdited = new Date(report.editedAt * 1000).toString().split(' ');\n    const dateEdited =\n      FullDateEdited[0] +\n      ', ' +\n      FullDateEdited[1] +\n      ' ' +\n      FullDateEdited[2] +\n      ', ' +\n      FullDateEdited[4] +\n      ', ' +\n      FullDateEdited[6] +\n      FullDateEdited[7] +\n      FullDateEdited[8];\n\n    return (\n      <AuthUserContext.Consumer>\n        {(authUser) => (\n          <div className=\"content-wrapper\">\n            {loading && <div>Loading ...</div>}\n\n            {report && (\n              <div className=\"container\">\n                <div className=\"r-details-card\">\n                  <strong>Company:</strong> {report.location.companyID}\n                  <br />\n                  <strong>Building:</strong> {report.location.buildingID}\n                  <br />\n                  <strong>Reporter:</strong> {report.reporter.ownerName}\n                  <br />\n                  <strong>Created At:</strong> {dateCreated}\n                  <br />\n                  {report.editedAt && (\n                    <p>\n                      <strong>Last Edited At:</strong> {dateEdited}\n                    </p>\n                  )}\n                </div>\n                <br />\n\n                <div className=\"r-details-card\">\n                  <p className=\"comp-item\">\n                    <strong>Subject: </strong>\n                    {report.reportTitle}\n                  </p>\n                  <p className=\"comp-item\">\n                    <strong>Ticket Id:</strong> <span className=\"ticket-info\">{report.uid}</span>\n                  </p>\n                  <p className=\"comp-item\">\n                    <strong>Request Status: </strong>({report.reportStatus})\n                  </p>\n                  <p className=\"comp-item\">\n                    <strong>Request Type: </strong>({report.reportServiceType})\n                  </p>\n                  <p className=\"comp-item report-desc\">\n                    <strong>Desc: </strong>\n                    {report.reportMessage}\n                  </p>\n                  {report.image && (\n                    <div>\n                      <a href={report.image}>\n                        <img src={report.image} alt=\"Uploaded Images\" height=\"150\" width=\"150\" />\n                      </a>\n                    </div>\n                  )}\n                </div>\n              </div>\n            )}\n\n            {authUser.uid === report.reporter.ownerID && (\n              <div>\n                {editMode ? (\n                  <div className=\"text-center edit-container\">\n                    <div className=\"form-row\">\n                      <input\n                        className=\"form-input col-10\"\n                        type=\"text\"\n                        placeholder=\"Report Title\"\n                        name=\"reportTitle\"\n                        value={reportTitle}\n                        onChange={this.onChangeEdits}\n                      />\n                    </div>\n                    <div className=\"form-row\">\n                      <div className=\"col-5\">\n                        <select\n                          className=\"form-control\"\n                          name=\"reportServiceType\"\n                          value={reportServiceType}\n                          onChange={this.onChangeEdits}\n                        >\n                          <option value=\"\" disabled>\n                            Select a Service\n                          </option>\n                          <option value=\"MAINTENANCE\">Maintenance / Repair</option>\n                          <option value=\"HAZARD\">Hazard Report</option>\n                          <option value=\"SERVICE\">Service Report</option>\n                        </select>\n                      </div>\n                      <div className=\"col-4\">\n                        <select className=\"form-control\" name=\"reportStatus\" value={reportStatus} onChange={this.onChangeEdits}>\n                          <option value=\"\" disabled>\n                            Select a Status\n                          </option>\n                          <option value=\"OPEN\">OPEN</option>\n                          <option value=\"CLOSED\">CLOSED</option>\n                          <option value=\"URGENT\">URGENT</option>\n                        </select>\n                      </div>\n                    </div>\n                    <textarea\n                      rows=\"1\"\n                      className=\"form-input col-10\"\n                      type=\"text\"\n                      name=\"reportMessage\"\n                      value={reportMessage}\n                      onChange={this.onChangeEdits}\n                    />\n\n                    <div className=\"form-row edit-btn-container\">\n                      <button className=\"btn btn-primary\" onClick={this.onSaveEdit}>\n                        Save\n                      </button>\n                      <button className=\"btn btn-secondary\" onClick={this.onToggleEditMode}>\n                        Reset\n                      </button>\n                    </div>\n                  </div>\n                ) : (\n                  <div className=\"row justify-me\">\n                    <button className=\"btn-li\" onClick={this.onToggleEditMode}>\n                      <FontAwesomeIcon icon={faEdit} />\n                    </button>\n\n                    <button className=\"btn-li\" type=\"button\" onClick={() => this.onRemoveReport(report.uid)}>\n                      <FontAwesomeIcon icon={faTrash} />\n                    </button>\n                  </div>\n                )}\n              </div>\n            )}\n\n            <div className=\"container text-center mt-3\">\n              <Link to={ROUTES.REPORTS}>\n                <button className=\"btn btn-secondary\">Back </button>\n              </Link>\n            </div>\n          </div>\n        )}\n      </AuthUserContext.Consumer>\n    );\n  }\n}\n\nexport default withFirebase(ReportDetail);\n","import ReportList from './ReportList';\nimport ReportDetails from './ReportDetails';\nimport ReportsPage from './ReportsPage';\n\nexport { ReportList, ReportDetails, ReportsPage };\nexport default ReportsPage;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport * as ROUTES from '../../../routes';\nimport { AuthUserContext, withAuthorization, withEmailVerification } from '../../Session';\nimport { CreateReportForm } from '../../Utils';\nimport { ReportList, ReportDetails } from './index';\n\n\nconst ReportsPage = () => (\n  <AuthUserContext.Consumer>\n    {(authUser) => (\n      <div>\n        <div className=\"jumbotron paral paralsec\">\n          <h1 className=\"display-8 text-center mb-3\">Reports</h1>\n        </div>\n        <Switch>\n          <Route exact path={ROUTES.REPORTS} component={ReportList} />\n          <Route exact path={ROUTES.REPORT_NEW}>\n            <CreateReportForm authUser={authUser} />\n          </Route>\n          <Route exact path={ROUTES.REPORT_DETAILS} component={ReportDetails} />\n        </Switch>\n      </div>\n    )}\n  </AuthUserContext.Consumer>\n);\n\nconst condition = (authUser) => !!authUser;\n\nexport default compose(\n  withEmailVerification,\n  withAuthorization(condition),\n)(ReportsPage);\n","import React, { Component } from 'react';\nimport { faPlus, faShare } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\n// https://www.netguru.com/codestories/pwa-ios\n\nclass PromptSaveBookmark extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showMessage: false,\n    };\n  }\n\n  componentDidMount() {\n    // Detects if device is on iOS\n    const isIos = () => {\n      const userAgent = window.navigator.userAgent.toLowerCase();\n      return /iphone|ipad|ipod/.test(userAgent);\n    };\n    // Detects if device is in standalone mode\n    const isInStandaloneMode = () => 'standalone' in window.navigator && window.navigator.standalone;\n\n    // Checks if should display install popup notification:\n    if (isIos() && !isInStandaloneMode()) {\n      this.setState({ ShowMessage: true });\n    };\n  }\n\n  componentWillUnmount() {\n    this.setState({ ShowMessage: false });\n  }\n\n  render() {\n    const { showInstallMessage } = this.state;\n\n    return (\n      <div>\n        {showInstallMessage && (\n          <div>\n            <p>\n              Install this webapp on your Iphone:\n              tap <FontAwesomeIcon icon={faShare} /> Share,\n              then <FontAwesomeIcon icon={faPlus} /> Add to Homescreen.\n            </p>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default PromptSaveBookmark;\n","import React from 'react';\nimport { HashRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport { AuthUserContext, withAuthentication } from './Session';\nimport * as ROUTES from '../routes';\n\nimport Logo from '../images/minerva-transparent-clean.png';\n\nimport Navigation from './Navigation';\n\nimport { SignUpPage, SignInPage, PasswordForgetPage } from './Auth';\n\nimport {\n  LandingPage,\n  NotFoundPage,\n  AccountPage,\n  AdminPage,\n  CompaniesPage,\n  BuildingsPage,\n  FloorsPage,\n  RoomsPage,\n  ReportsPage,\n} from './Displays';\n\nimport PromptSaveBookmark from './Utils/PromptSaveBookmark';\n\nconst App = () => (\n  <Router>\n    <div>\n      <div className=\"hidden text-center\">\n        <div className=\"row desktop-banner\">\n          <div className=\"col\">\n            <img className=\"littler-square\" alt=\"logo\" src={Logo} />\n            <h3>\n              <br></br>\n              Visit us on mobile to get the full experience!\n            </h3>\n          </div>\n        </div>\n      </div>\n      <div className=\"site-content\">\n        <AuthUserContext.Consumer>\n          {(authUser) =>\n            authUser ? (\n              <Switch>\n                <Route path={ROUTES.PASSWORD_FORGET} component={PasswordForgetPage} />\n\n                <Route path={ROUTES.ADMIN} component={AdminPage} />\n                <Route path={ROUTES.ACCOUNT} component={AccountPage} />\n                <Route path={ROUTES.COMPANIES} component={CompaniesPage} />\n                <Route path={ROUTES.BUILDINGS} component={BuildingsPage} />\n                <Route path={ROUTES.FLOORS} component={FloorsPage} />\n                <Route path={ROUTES.ROOMS} component={RoomsPage} />\n                <Route path={ROUTES.REPORTS} component={ReportsPage} />\n\n                <Route exact path={ROUTES.HOME}>\n                  <Redirect to={ROUTES.REPORTS} />\n                  {/* <HomePage /> */}\n                </Route>\n                <Route exact path={ROUTES.LANDING}>\n                  <Redirect to={ROUTES.HOME} />\n                </Route>\n                <Route path={ROUTES.SIGN_UP}>\n                  <Redirect to={ROUTES.HOME} />\n                </Route>\n                <Route path={ROUTES.SIGN_IN}>\n                  <Redirect to={ROUTES.HOME} />\n                </Route>\n\n                <Route path={ROUTES.NOT_FOUND} component={NotFoundPage} />\n              </Switch>\n            ) : (\n              <Switch>\n                <Route exact path={ROUTES.LANDING} component={LandingPage} />\n                <Route exact path={ROUTES.SIGN_UP} component={SignUpPage} />\n                <Route exact path={ROUTES.SIGN_IN} component={SignInPage} />\n                <Route exact path={ROUTES.PASSWORD_FORGET} component={PasswordForgetPage} />\n\n                <Route path={ROUTES.HOME}>\n                  <Redirect to={ROUTES.SIGN_IN} />\n                </Route>\n                <Route path={ROUTES.ADMIN}>\n                  <Redirect to={ROUTES.SIGN_IN} />\n                </Route>\n                <Route path={ROUTES.ACCOUNT}>\n                  <Redirect to={ROUTES.SIGN_IN} />\n                </Route>\n                <Route path={ROUTES.COMPANIES}>\n                  <Redirect to={ROUTES.SIGN_IN} />\n                </Route>\n                <Route path={ROUTES.BUILDINGS}>\n                  <Redirect to={ROUTES.SIGN_IN} />\n                </Route>\n                <Route path={ROUTES.FLOORS}>\n                  <Redirect to={ROUTES.SIGN_IN} />\n                </Route>\n                <Route path={ROUTES.ROOMS}>\n                  <Redirect to={ROUTES.SIGN_IN} />\n                </Route>\n                <Route path={ROUTES.REPORTS}>\n                  <Redirect to={ROUTES.SIGN_IN} />\n                </Route>\n\n                <Route path={ROUTES.NOT_FOUND} component={NotFoundPage} />\n              </Switch>\n            )\n          }\n        </AuthUserContext.Consumer>\n\n        <PromptSaveBookmark />\n        <Navigation />\n      </div>\n    </div>\n  </Router>\n);\n\nexport default withAuthentication(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport reportWebVitals from './reportWebVitals';\nimport Firebase, { FirebaseContext } from './components/Firebase';\n\nimport './styles.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <FirebaseContext.Provider value={new Firebase()}>\n      <App />\n    </FirebaseContext.Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}