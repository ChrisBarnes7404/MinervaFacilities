{"version":3,"sources":["web-build/register-service-worker.js","webpack:////Users/ChrisBarnes/dev/Big_Projects/Minerva_Facilities/src/styles.css?beba","src/styles.css","public/images/background_blue_gradient.jpg","public/images/trianglify-lowres.png","src/components/Session/context.js","src/components/Firebase/context.js","src/components/Firebase/firebase.js","src/components/Firebase/index.js","src/components/Session/withAuthentication.js","src/routes.js","src/components/Session/withAuthorization.js","src/components/Session/withEmailVerification.js","src/components/Navigation/index.js","src/components/Auth/PasswordChangePage.js","src/components/Auth/PasswordForgetPage.js","src/components/Auth/SignUpPage.js","src/components/Auth/SignInPage.js","src/components/Auth/SignOutPage.js","src/components/Utils/AddressForm.js","src/components/Utils/ToggleSwitch.js","src/components/Utils/JoinCompanyForm.js","src/components/Utils/CreateCompanyForm.js","src/components/Utils/CreateBuildingForm.js","src/components/Utils/CreateFloorForm.js","src/components/Utils/CreateRoomForm.js","src/components/Utils/CreateReportForm.js","src/components/Displays/AccountPage.js","src/components/Displays/Users/UserList.js","src/components/Displays/Users/UserItem.js","src/components/Displays/Users/index.js","src/components/Displays/Users/AdminPage.js","src/components/Displays/LandingPage.js","src/components/Displays/NotFoundPage.js","src/components/Displays/Companies/CompanyList.js","src/components/Displays/Companies/CompanyDetails.js","src/components/Displays/Companies/index.js","src/components/Displays/Companies/CompaniesPage.js","src/components/Displays/Buildings/BuildingList.js","src/components/Displays/Buildings/BuildingDetails.js","src/components/Displays/Buildings/index.js","src/components/Displays/Buildings/BuildingsPage.js","src/components/Displays/Floors/FloorList.js","src/components/Displays/Floors/FloorDetails.js","src/components/Displays/Floors/index.js","src/components/Displays/Floors/FloorsPage.js","src/components/Displays/Rooms/RoomList.js","src/components/Displays/Rooms/RoomDetails.js","src/components/Displays/Rooms/index.js","src/components/Displays/Rooms/RoomsPage.js","src/components/Displays/Reports/ReportList.js","src/components/Displays/Reports/ReportDetails.js","src/components/Displays/Reports/index.js","src/components/Displays/Reports/ReportsPage.js","src/components/App/index.js","src/serviceWorker.js","src/index.js"],"names":["navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","error","console","api","content","__esModule","default","module","i","options","exports","locals","___CSS_LOADER_API_IMPORT___","___CSS_LOADER_GET_URL_IMPORT___","___CSS_LOADER_URL_IMPORT_0___","___CSS_LOADER_URL_IMPORT_1___","___CSS_LOADER_URL_REPLACEMENT_0___","___CSS_LOADER_URL_REPLACEMENT_1___","push","AuthUserContext","React","createContext","FirebaseContext","withFirebase","Component","props","Consumer","firebase","config","apiKey","process","REACT_APP_API_KEY","authDomain","REACT_APP_AUTH_DOMAIN","databaseURL","REACT_APP_DATABASE_URL","projectId","REACT_APP_PROJECT_ID","storageBucket","REACT_APP_STORAGE_BUCKET","messagingSenderId","REACT_APP_MESSAGING_SENDER_ID","appId","REACT_APP_APP_ID","measurementId","REACT_APP_MEASUREMENT_ID","Firebase","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignInWithGoogle","signInWithPopup","googleProvider","doSignInWithFacebook","facebookProvider","doSignInWithTwitter","twitterProvider","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doSendEmailVerification","currentUser","sendEmailVerification","url","REACT_APP_CONFIRMATION_EMAIL_REDIRECT","doPasswordUpdate","updatePassword","onAuthUserListener","next","fallback","onAuthStateChanged","authUser","user","uid","once","snapshot","dbUser","val","roles","emailVerified","providerData","db","ref","users","setUserCompany","userID","companyID","update","company_id","company","companies","createCompany","companyData","newCompanyKey","key","updates","owner","ownerID","companyTitle","building","buildings","createBuilding","buildingData","buildingTitle","newBuildingKey","floor","floors","createFloor","floorData","buildingID","floorTitle","newFloorKey","room","rooms","createRoom","roomData","floorID","roomTitle","newRoomKey","report","reports","createReport","reportData","location","reportTitle","reporter","roomID","newReportKey","log","app","initializeApp","this","serverValue","database","ServerValue","emailAuthProvider","EmailAuthProvider","storage","analytics","GoogleAuthProvider","FacebookAuthProvider","TwitterAuthProvider","withAuthentication","WithAuthentication","state","JSON","parse","localStorage","getItem","listener","setItem","stringify","setState","removeItem","Provider","value","HOME","SIGN_IN","COMPANIES","BUILDINGS","FLOORS","ROOMS","REPORTS","withAuthorization","condition","WithAuthorization","history","ROUTES","compose","withRouter","withEmailVerification","WithEmailVerification","onSendEmailVerification","isSent","map","provider","providerId","includes","needsEmailVerification","Button","type","onClick","disabled","Navigation","className","defaultactivekey","id","role","Link","data-toggle","aria-controls","aria-selected","to","icon","faHome","pathname","ADMIN","INITIAL_STATE","passwordOne","passwordTwo","PasswordChangeForm","onSubmit","event","preventDefault","onChange","target","name","isInvalid","hidden","autoComplete","placeholder","message","PasswordForgetFormBase","PasswordForgetLink","BackButton","goBack","faChevronLeft","PasswordForgetPage","PasswordForgetForm","username","isAdmin","SignUpFormBase","set","code","onChangeCheckbox","checked","SignUpLink","SignUpForm","SignUpPage","alt","src","ERROR_MSG_ACCOUNT_EXISTS","SignInFormBase","SignInGoogleBase","socialAuthUser","displayName","faGoogle","SignInFacebookBase","additionalUserInfo","profile","faFacebookF","SignInTwitterBase","faTwitter","SignInLink","SignInForm","SignInGoogle","SignInFacebook","SignInTwitter","SignInPage","faSignOutAlt","sendBackData","address","result","parentCallBack","onLoadFailed","selectProps","styles","input","provided","color","option","singleValue","ToggleSwitch","optionLabels","small","e","tabIndex","onKeyDown","keyCode","handleKeyPress","htmlFor","data-yes","data-no","defaultProps","propTypes","PropTypes","string","isRequired","bool","func","array","CompanyFormBase","JoinCompanyPage","JoinCompanyForm","CompanyForm","onCreateCompany","ownerName","companyAddress","createdAt","TIMESTAMP","BuildingForm","onCreateBuilding","BuildingData","buildingAddress","FloorForm","onCreateFloor","FloorData","floorAddress","RoomForm","onCreateRoom","RoomData","roomAddress","ReportForm","onCreateReport","reportMessage","reportStatus","reportServiceType","image","reportImageName","reportImageURL","reportID","initialState","length","onAutoFill","isBlocking","handleChange","files","upload","put","on","progress","Math","round","bytesTransferred","totalBytes","child","getDownloadURL","image_url","image_name","rows","max","Prompt","when","SIGN_IN_METHODS","LoginManagementBase","fetchSignInMethods","fetchSignInMethodsForEmail","activeSignInMethods","onSocialLoginLink","linkWithPopup","onDefaultLoginLink","credential","linkAndRetrieveDataWithCredential","onUnlink","unlink","signInMethod","onlyOneLeft","isEnabled","onLink","SocialLoginToggle","DefaultLoginToggle","LoginManagement","useState","settings","setSettings","onSettingsChange","width","height","UserList","loading","usersObject","usersList","Object","keys","off","UserItem","onSendPasswordResetEmail","match","params","AdminPage","Switch","Route","exact","path","component","LandingPage","NotFoundPage","style","textAlign","CompanyList","onNextPage","limit","onListenForCompanies","orderByChild","limitToLast","companyObject","companyList","CreateCompanyForm","CompanyDetail","onToggleEditMode","editMode","onSaveEdit","companySnapshot","editedAt","onRemoveCompany","dbUSER","remove","fullDateCreated","Date","toString","split","dateCreated","fullDateEdited","dateEdited","buildingList","buildingsList","faEdit","auhtUser","faTrash","CompaniesPage","CompanyDetails","BuildingList","onListenForBuildings","buildingsObject","CreateBuildingForm","BuildingDetail","buildingSnapshot","onRemoveBuilding","companyOwner","tpye","BuildingsPage","BuildingDetails","FloorList","onListenForFloors","floorsObject","floorList","CreateFloorForm","FloorDetail","floorSnapshot","onRemoveFloor","FloorsPage","FloorDetails","RoomList","roomsObject","roomsList","CreateRoomForm","RoomDetails","roomSnapshot","onRemoveRoom","RoomsPage","ReportList","onListenForReports","reportsObject","reportList","CreateReportForm","ReportDetail","onChangeEdits","reportSnapshot","onRemoveReport","confirmAlert","title","buttons","label","FullDateEdited","href","ReportsPage","ReportDetails","class","AccountPage","Redirect","Boolean","hostname","ReactDOM","render","document","getElementById","ready","registration","unregister"],"mappings":"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","file":"static/js/app.30a31d42.chunk.js","sourcesContent":["/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/MinervaFacilities/expo-service-worker.js', { scope: '/MinervaFacilities/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","var api = require(\"!../../../../../../usr/local/lib/node_modules/expo-cli/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../usr/local/lib/node_modules/expo-cli/node_modules/css-loader/dist/cjs.js!./styles.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../usr/local/lib/node_modules/expo-cli/node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_GET_URL_IMPORT___ = require(\"../../../../../../usr/local/lib/node_modules/expo-cli/node_modules/css-loader/dist/runtime/getUrl.js\");\nvar ___CSS_LOADER_URL_IMPORT_0___ = require(\"../public/images/background_blue_gradient.jpg\");\nvar ___CSS_LOADER_URL_IMPORT_1___ = require(\"../public/images/trianglify-lowres.png\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\nvar ___CSS_LOADER_URL_REPLACEMENT_0___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_0___);\nvar ___CSS_LOADER_URL_REPLACEMENT_1___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_1___);\n// Module\nexports.push([module.id, \"/* // Large devices (desktops, 992px and up) */\\n@media (min-width: 780px) {\\n  .site-content {\\n    display: none;\\n  }\\n  .hidden {\\n    display: block !important;\\n    height: 100vh;\\n    width: 100vw;\\n    background-color: #087cb8;\\n    background-image: url(\" + ___CSS_LOADER_URL_REPLACEMENT_0___ + \");\\n    background-size: cover;\\n    background-attachment: fixed;\\n    background-position: center;\\n    background-repeat: no-repeat;\\n  }\\n  .desktop-banner {\\n    margin: auto;\\n    overflow: auto;\\n    padding: 15vh 5vw;\\n    position: fixed;\\n  }\\n  .little-square {\\n    margin: 0 auto;\\n    width: 40%;\\n  }\\n\\n  .directive-card {\\n    border: 5px solid black !important;\\n    border-radius: 1.5rem !important;\\n    width: 300px;\\n    height: 550px;\\n  }\\n}\\n\\n/* ------- general/sitewide -------- */\\nhtml,\\nbody {\\n  width: 100%;\\n  height: 100%;\\n  /* margin-bottom: 20vw; */\\n  /* padding: 0px; */\\n  overflow-x: hidden;\\n  background-color: #ecf3f9 !important;\\n  /* padding-bottom: 10vh;  */\\n}\\nul {\\n  list-style: none;\\n}\\n\\na {\\n  color: black !important;\\n}\\ndiv.container {\\n  min-width: 100vw !important;\\n  /* background-color: #087cb8 !important; */\\n}\\n.add-padding-bottom {\\n  /* separate so views arent overlayed */\\n  padding-bottom: 11vh;\\n}\\n.hidden {\\n  display: none;\\n}\\n/* ------- Navigation -------- */\\nnav {\\n  position: absolute;\\n  bottom: 0;\\n  left: 0;\\n  right: 0;\\n  width: 100vw;\\n  background-color: #f5f6f8;\\n}\\n.nav-item {\\n  width: calc(100% / 4);\\n  height: 10vh;\\n  text-align: center;\\n  display: flex !important;\\n  justify-content: space-evenly;\\n  align-items: center;\\n}\\n.nav-tabs > .nav-link {\\n  transition: 0.5s ease-in;\\n}\\n.nav-tabs > .nav-link:hover {\\n  background-color: #303136 !important;\\n  border: medium none;\\n  border-radius: 0;\\n  color: #fff !important;\\n  font-weight: bold;\\n  /* transition: 0.5s ease-out; */\\n}\\n\\n/* ----------- Account------------- */\\n.btn-social {\\n  min-width: 50vw !important;\\n  /* margin: auto; */\\n  padding: 0.3rem;\\n  margin: 0.3rem 0;\\n}\\n.social-links {\\n  /* border: 1px solid black; */\\n  padding: 0;\\n  text-align: center;\\n}\\n.profile-photo {\\n  border-radius: 50%;\\n}\\n\\n.usercard {\\n  background-color: #bebebe;\\n  background-image: url(\" + ___CSS_LOADER_URL_REPLACEMENT_1___ + \");\\n  background-size: 150%;\\n  background-attachment: fixed;\\n  background-position: top;\\n  background-repeat: no-repeat;\\n  margin: -1em;\\n  border-bottom: 3px ridge #303030;\\n  padding-top: 1em;\\n}\\n\\n/* -------------- Login/Signup ------------------- */\\n\\n.highlight-link {\\n  color: blue !important;\\n}\\n.cta {\\n  line-height: 0.3;\\n  margin-top: 2rem;\\n}\\n.page-bg {\\n  /* background-color: #0d4062; */\\n  /* height: 90vh; */\\n  width: 100vw;\\n  background-attachment: fixed;\\n  background-position: center;\\n  background-size: cover;\\n  overflow: none;\\n  text-align: center;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  flex-wrap: wrap;\\n}\\n\\n.no-padding {\\n  padding-bottom: 0vh !important;\\n}\\n\\n.page-inner {\\n  /* background-color: #f5f6f8; */\\n  margin: 10vw;\\n  padding: 10vw;\\n  background-attachment: fixed;\\n  background-position: center;\\n  background-size: cover;\\n  overflow: none;\\n  text-align: center;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  flex-wrap: wrap;\\n}\\n\\n.btn-signin {\\n  padding: 0.3rem;\\n  margin: 0.3rem 0;\\n  text-align: center;\\n  background-color: #087cb8;\\n  color: #f5f6f8;\\n}\\n\\n.signin-logo {\\n  width: 30vw;\\n  margin: 0vw;\\n}\\n\\n/* --------- Home ------------------ */\\n/* Header Parallax Element Style*/\\n.paral {\\n  min-height: 10vh;\\n  background-attachment: fixed;\\n  background-size: cover;\\n  background-position: 50% 50%;\\n}\\n/* Heading for Parallax Section */\\n.paral h1 {\\n  color: rgba(255, 255, 255, 0.8);\\n  text-align: center;\\n}\\n/* Image for Parallax Home Section */\\n.paralsec {\\n  background-image: url('https://img.webnots.com/2017/05/parallax.jpg');\\n}\\n.progress {\\n  width: auto !important;\\n}\\n.file-uploader {\\n  background-color: #fff !important;\\n  /* padding: 0.5em; */\\n  margin-bottom: 0.5em;\\n  border-style: none;\\n  border-radius: 5px;\\n  position: relative;\\n}\\nbutton a {\\n  color: white !important;\\n  font-weight: bold;\\n}\\n/* input#file-upload-button {\\n  background-color: #087cb8 !important;\\n  font-weight: bold !important;\\n} */\\n/* .jumbotron {\\n  border-radius: 0 !important;\\n  margin-bottom: 0 !important;\\n} */\\n\\n.section-divider {\\n  width: 100%;\\n  border-top: 1px solid black;\\n  padding-top: 1rem;\\n  margin: 1rem 0 1rem 0;\\n}\\n\\n.non-nav {\\n  position: unset;\\n  justify-content: space-evenly;\\n  border-bottom: 5px solid #303136;\\n}\\n.non-nav > a.nav-item {\\n  border-radius: 0;\\n  width: calc(100vw / 2) !important;\\n}\\n.non-nav > a:hover,\\na.active {\\n  color: #fff !important;\\n  font-weight: bold;\\n  background-color: #303136 !important;\\n}\\n\\n.company-list {\\n  padding: 1rem;\\n  width: 100vw;\\n  text-align: left;\\n}\\n\\n.form-input,\\nselect.form-control {\\n  padding: 0.5em;\\n  margin-bottom: 0.5em;\\n  border-style: none;\\n  border-radius: 5px;\\n  font-weight: bold;\\n}\\n\\n::placeholder,\\nselect option:disabled,\\nselect option[disabled] {\\n  color: rgba(0, 0, 0, 0.4) !important;\\n}\\n\\np.comp-item {\\n  margin-bottom: 0 !important;\\n  line-height: 1.3;\\n}\\np hr {\\n  margin-top: 0.2rem;\\n  margin-bottom: 0.2rem;\\n}\\n.comp-container {\\n  border: 1px solid black;\\n}\\n\\n.btn-li {\\n  border: none;\\n  background-color: rgba(0, 0, 0, 0);\\n  display: block;\\n  padding: 0.5rem;\\n  margin-top: 0.4rem;\\n}\\n\\nli.row {\\n  border-radius: 5px;\\n  margin: 0.5rem 0.1rem;\\n  text-align: left;\\n  padding: 0.3em;\\n  background-color: #fff;\\n  justify-content: space-between;\\n}\\n\\n/* li.row:nth-child(odd) {\\n  background-color: rgba(0, 0, 0, 0.3);\\n} */\\n\\n.form-row {\\n  justify-content: space-evenly;\\n}\\n.text-center.edit-container {\\n  width: 100vw;\\n  justify-content: space-evenly;\\n}\\n.form-row.edit-btn-container {\\n  width: 40vw;\\n  display: flex;\\n  justify-content: space-evenly;\\n  margin: 0 30vw;\\n}\\n.form-group.col-10 {\\n  margin: auto;\\n}\\n.justify-me {\\n  margin: 0.3em auto;\\n  justify-content: space-evenly;\\n  display: flex;\\n  /* flex-grow: inherit; */\\n  /* align-content: center; */\\n  /* text-align: center; */\\n  width: 100vw;\\n  /* border: 1px solid black; */\\n}\\n\\n.btn-bot {\\n  width: 45vw;\\n}\\nul.building-list {\\n  padding-inline-start: unset;\\n  /* padding: 1rem; */\\n  width: 100vw;\\n  text-align: left;\\n}\\n\\nul.report-list {\\n  padding-inline-start: unset;\\n  padding-left: 1em;\\n  padding-right: 1em;\\n  width: 100vw;\\n  text-align: left;\\n}\\n\\np.comp-item.report-desc {\\n  text-overflow: ellipsis;\\n  /* white-space: nowrap; */\\n  /* overflow: hidden; */\\n  /* max-width: 80vw; */\\n}\\n/* ------- Landing ---------- */\\n.landing-container {\\n  height: 90vh;\\n  width: 100vw;\\n  background-image: url('https://github.com/ChrisBarnes7404/React-WebBased-MVP/blob/master/public/images/BetterGIFs/7c17f0c64b977875a2c0625b406bb0d2.gif?raw=true');\\n  background-attachment: fixed;\\n  background-position: center;\\n  background-repeat: no-repeat;\\n  background-size: cover;\\n  overflow: none;\\n  text-align: center;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  flex-wrap: wrap;\\n}\\n\\n/* .landing-logo {\\n  height: 10vh;\\n  width: 10vw;\\n} */\\n\\n.square {\\n  width: 90%;\\n  margin-bottom: auto;\\n  margin-left: auto;\\n  margin-right: auto;\\n  margin-top: 0;\\n}\\n\\n.square:after {\\n  content: '';\\n  display: block;\\n  padding-bottom: 100%;\\n}\\n\\n.title {\\n  font-size: 2em;\\n  color: #fff;\\n  font-weight: bolder;\\n}\\n\\n.fade-in {\\n  width: 30vw;\\n  height: 30vw;\\n  margin: 0 20vw;\\n  animation-fill-mode: both;\\n  animation: fadeIn ease 05s;\\n  -webkit-animation: fadeIn ease 05s;\\n  -moz-animation: fadeIn ease 05s;\\n  -o-animation: fadeIn ease 05s;\\n  -ms-animation: fadeIn ease 05s;\\n}\\n@keyframes fadeIn {\\n  0% {\\n    opacity: 0;\\n  }\\n  100% {\\n    opacity: 1;\\n  }\\n}\\n\\n@-moz-keyframes fadeIn {\\n  0% {\\n    opacity: 0;\\n  }\\n  100% {\\n    opacity: 1;\\n  }\\n}\\n\\n@-webkit-keyframes fadeIn {\\n  0% {\\n    opacity: 0;\\n  }\\n  100% {\\n    opacity: 1;\\n  }\\n}\\n\\n/* ------- Details ---------- */\\n/* report */\\n.content-wrapper {\\n  width: 100vw;\\n}\\n.content-wrapper h2 {\\n  text-align: center;\\n}\\n\\n.r-details-card {\\n  background-color: #fff;\\n  border-radius: 5px;\\n  padding: 0.5em;\\n}\\n\\n/* company */\\n\\n.ul-comp-list {\\n  padding: 0;\\n}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","module.exports = __webpack_public_path__ + \"static/media/background_blue_gradient.ba929207.jpg\";","module.exports = __webpack_public_path__ + \"static/media/trianglify-lowres.879ffb6b.png\";","import React from 'react';\n\nconst AuthUserContext = React.createContext(null);\n\nexport default AuthUserContext;\n","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n  <FirebaseContext.Consumer>\n    {firebase => <Component {...props} firebase={firebase} />}\n  </FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;\n","import app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nimport 'firebase/storage';\nimport 'firebase/analytics';\n\nconst config = {\n  apiKey: process.env.REACT_APP_API_KEY || 'AIzaSyBnJSs5VkOG4k2VAByyYU8pxeyOthF3FFs',\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN || 'minerva-facilities.firebaseapp.com',\n  databaseURL: process.env.REACT_APP_DATABASE_URL || 'https://minerva-facilities.firebaseio.com',\n  projectId: process.env.REACT_APP_PROJECT_ID || 'minerva-facilities',\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET || 'minerva-facilities.appspot.com',\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID || '286455586521',\n  appId: process.env.REACT_APP_APP_ID || '1:286455586521:web:658ab0b3a18a1dcebfe8c8',\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID || 'G-674WMEGJDS',\n};\n\n\nclass Firebase {\n  constructor() {\n    app.initializeApp(config);\n\n    /* Helper */\n    this.serverValue = app.database.ServerValue;\n    this.emailAuthProvider = app.auth.EmailAuthProvider;\n\n    /* Firebase APIs */\n    this.auth = app.auth();\n    this.db = app.database();\n    this.storage = app.storage();\n    this.analytics = app.analytics();\n\n    /* Social Sign In Method Provider */\n    this.googleProvider = new app.auth.GoogleAuthProvider();\n    this.facebookProvider = new app.auth.FacebookAuthProvider();\n    this.twitterProvider = new app.auth.TwitterAuthProvider();\n  }\n\n  // *** Auth API ***\n  doCreateUserWithEmailAndPassword = (email, password) => this.auth.createUserWithEmailAndPassword(email, password);\n\n  doSignInWithEmailAndPassword = (email, password) => this.auth.signInWithEmailAndPassword(email, password);\n\n  doSignInWithGoogle = () => this.auth.signInWithPopup(this.googleProvider);\n\n  doSignInWithFacebook = () => this.auth.signInWithPopup(this.facebookProvider);\n\n  doSignInWithTwitter = () => this.auth.signInWithPopup(this.twitterProvider);\n\n  doSignOut = () => this.auth.signOut();\n\n  doPasswordReset = (email) => this.auth.sendPasswordResetEmail(email);\n\n  doSendEmailVerification = () =>\n    this.auth.currentUser.sendEmailVerification({\n      url: process.env.REACT_APP_CONFIRMATION_EMAIL_REDIRECT || 'http://localhost:19006/',\n    });\n\n  doPasswordUpdate = (password) => this.auth.currentUser.updatePassword(password);\n\n  // *** Merge Auth and DB User API *** //\n  onAuthUserListener = (next, fallback) =>\n    this.auth.onAuthStateChanged((authUser) => {\n      if (authUser) {\n        this.user(authUser.uid)\n          .once('value')\n          .then((snapshot) => {\n            const dbUser = snapshot.val();\n\n            // default empty roles\n            if (!dbUser.roles) {\n              dbUser.roles = 'EMPLOYEE';\n            }\n\n            // merge auth and db user\n            authUser = {\n              uid: authUser.uid,\n              email: authUser.email,\n              emailVerified: authUser.emailVerified,\n              providerData: authUser.providerData,\n              ...dbUser,\n            };\n\n            next(authUser);\n          });\n      } else {\n        fallback();\n      }\n    });\n\n  // *** User API ***\n  user = (uid) => this.db.ref(`users/${uid}`);\n  users = () => this.db.ref('users');\n  setUserCompany = (userID, companyID) => this.user(userID).update({ company_id: companyID });\n\n  // **** Company API ***\n  company = (uid) => this.db.ref(`companies/${uid}`);\n  companies = () => this.db.ref('companies');\n\n  createCompany = (companyData) => {\n    var newCompanyKey = this.db.ref('companies').push().key;\n    var updates = {};\n    updates['/companies/' + newCompanyKey] = companyData;\n    updates['/users/' + companyData.owner.ownerID + '/companies/' + companyData.companyTitle] = newCompanyKey;\n    updates['/users/' + companyData.owner.ownerID + '/company_id'] = newCompanyKey;\n\n    this.db.ref().update(updates);\n    return newCompanyKey;\n  };\n\n  // **** Building API ***\n  building = (uid) => this.db.ref(`buildings/${uid}`);\n  buildings = () => this.db.ref('buildings');\n\n  createBuilding = (buildingData) => {\n    let { companyID, buildingTitle } = buildingData;\n    var newBuildingKey = this.db.ref('buildings').push().key;\n    var updates = {};\n    updates['/companies/' + companyID + '/buildings/' + buildingTitle] = newBuildingKey;\n    updates['/buildings/' + newBuildingKey] = buildingData;\n\n    this.db.ref().update(updates);\n    return newBuildingKey;\n  };\n\n  // **** Floors API ***\n  floor = (uid) => this.db.ref(`floors/${uid}`);\n  floors = () => this.db.ref('floors');\n\n  createFloor = (floorData) => {\n    let { companyID, buildingID, floorTitle } = floorData;\n    var newFloorKey = this.db.ref('floors').push().key;\n    var updates = {};\n    updates['/companies/' + companyID + '/buildings/' + buildingID + '/floors/' + floorTitle] = newFloorKey;\n    updates['/floors/' + newFloorKey] = floorData;\n\n    this.db.ref().update(updates);\n    return newFloorKey;\n  };\n\n  // *** Rooms API ***\n  room = (uid) => this.db.ref(`rooms/${uid}`);\n  rooms = () => this.db.ref('rooms');\n\n  createRoom = (roomData) => {\n    let { companyID, buildingID, floorID, roomTitle } = roomData;\n    var newRoomKey = this.db.ref('rooms').push().key;\n    var updates = {};\n    updates['/companies/' + companyID + '/buildings/' + buildingID + '/floors/' + floorID + '/rooms/' + roomTitle] = newRoomKey;\n    updates['/rooms/' + newRoomKey] = roomData;\n\n    this.db.ref().update(updates);\n    return newRoomKey;\n  };\n\n  // *** Report API ***\n  report = (uid) => this.db.ref(`reports/${uid}`);\n  reports = () => this.db.ref('reports');\n\n  createReport = (reportData) => {\n    let { location, reportTitle, reporter } = reportData;\n    let { companyID, buildingID, floorID, roomID } = location;\n    \n    // Get a key for a new room.\n    var newReportKey = this.db.ref('reports').push().key;\n    // Write the new room's data simultaneously in the compnay list and the user's companies list.\n    var updates = {};\n    // updates['/companies/' + companyID + '/buildings/' + buildingID + '/floors/' + floorID + '/rooms/' + roomID + '/reports/' + reportTitle] = newReportKey;\n    updates['/reports/' + newReportKey] = reportData;\n    updates['/users/' + reporter.ownerID + '/reports/' + reportTitle] = newReportKey;\n\n    console.log(companyID, buildingID, floorID, roomID, reportTitle, reporter);\n    this.db.ref().update(updates);\n    return newReportKey;\n  };\n}\n\nexport default Firebase;\n","import FirebaseContext, { withFirebase } from './context';\nimport Firebase from './firebase';\n\nexport default Firebase;\n\nexport { FirebaseContext, withFirebase };\n","import React from 'react';\n\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\n\nconst withAuthentication = Component => {\n  class WithAuthentication extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        authUser: JSON.parse(localStorage.getItem('authUser')),\n      };\n    }\n\n    componentDidMount() {\n      this.listener = this.props.firebase.onAuthUserListener(\n        authUser => {\n          localStorage.setItem('authUser', JSON.stringify(authUser));\n          this.setState({ authUser });\n        },\n        () => {\n          localStorage.removeItem('authUser');\n          this.setState({ authUser: null });\n        },\n      );\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Provider value={this.state.authUser}>\n          <Component {...this.props} />\n        </AuthUserContext.Provider>\n      );\n    }\n  }\n\n  return withFirebase(WithAuthentication);\n};\n\nexport default withAuthentication;\n","export const NOT_FOUND = '*';\nexport const LANDING = '/';\nexport const HOME = '/home';\n\nexport const SIGN_UP = '/signup';\nexport const SIGN_IN = '/signin';\nexport const PASSWORD_FORGET = '/pw-forget';\nexport const PASSWORD_RESET = '/pw-reset';\n\nexport const ACCOUNT = '/account';\nexport const ADMIN = '/admin';\nexport const ADMIN_DETAILS = '/admin/:id';\n\nexport const COMPANIES = '/companies';\nexport const COMPANY_NEW = '/companies/new';\nexport const COMPANY_DETAILS = '/companies/:id';\nexport const JOIN_A_COMPANY = '/join-company';\n\nexport const BUILDINGS = '/buildings';\nexport const BUILDING_NEW = '/buildings/new';\nexport const BUILDING_DETAILS = '/buildings/:id';\n\nexport const FLOORS = '/floors';\nexport const FLOOR_NEW = '/floors/new';\nexport const FLOOR_DETAILS = '/floors/:id';\n\nexport const ROOMS = '/rooms';\nexport const ROOM_NEW = '/rooms/new';\nexport const ROOM_DETAILS = '/rooms/:id';\n\nexport const REPORTS = '/reports';\nexport const REPORT_NEW = '/reports/new';\nexport const REPORT_DETAILS = '/reports/:id';\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../routes';\n\nconst withAuthorization = condition => Component => {\n  class WithAuthorization extends React.Component {\n    componentDidMount() {\n      this.listener = this.props.firebase.onAuthUserListener(\n        authUser => {\n          if (!condition(authUser)) {\n            this.props.history.push(ROUTES.SIGN_IN);\n          }\n        },\n        () => this.props.history.push(ROUTES.SIGN_IN),\n      );\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Consumer>\n          {authUser =>\n            condition(authUser) ? <Component {...this.props} /> : null\n          }\n        </AuthUserContext.Consumer>\n      );\n    }\n  }\n\n  return compose(\n    withRouter,\n    withFirebase,\n  )(WithAuthorization);\n};\n\nexport default withAuthorization;\n","import React from 'react';\n\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\nimport Button from 'react-bootstrap/Button';\n\nconst needsEmailVerification = (authUser) =>\n  authUser &&\n  !authUser.emailVerified &&\n  authUser.providerData\n    .map((provider) => provider.providerId)\n    .includes('password');\n\nconst withEmailVerification = (Component) => {\n  class WithEmailVerification extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.state = { isSent: false };\n    }\n\n    onSendEmailVerification = () => {\n      this.props.firebase\n        .doSendEmailVerification()\n        .then(() => this.setState({ isSent: true }));\n    };\n\n    render() {\n      return (\n        <AuthUserContext.Consumer>\n          {(authUser) =>\n            needsEmailVerification(authUser) ? (\n              <div>\n                {this.state.isSent ? (\n                  <p>\n                    E-Mail confirmation sent: Check your E-Mails (Spam\n                    folder included) for a confirmation E-Mail.\n                    Refresh this page once you confirmed your E-Mail.\n                  </p>\n                ) : (\n                  <p>\n                    Verify your E-Mail: Check your E-Mails (Spam\n                    folder included) for a confirmation E-Mail or send\n                    another confirmation E-Mail.\n                  </p>\n                )}\n\n                <Button\n                  type=\"button btn-primary\"\n                  onClick={this.onSendEmailVerification}\n                  disabled={this.state.isSent}\n                >\n                  Re-Send confirmation E-Mail\n                </Button>\n              </div>\n            ) : (\n              <Component {...this.props} />\n            )\n          }\n        </AuthUserContext.Consumer>\n      );\n    }\n  }\n\n  return withFirebase(WithEmailVerification);\n};\n\nexport default withEmailVerification;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { AuthUserContext } from '../Session';\nimport * as ROUTES from '../../routes';\nimport { faHome } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\n\nconst Navigation = () => (\n  <AuthUserContext.Consumer>\n    {(authUser) => !!authUser && (\n      <div className=\"tab-wrapper\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <nav defaultactivekey=\"/home\">\n              <div className=\"nav nav-tabs\" id=\"nav-tab\" role=\"tablist\">\n                <Link\n                  className=\"nav-item nav-link\"\n                  id=\"nav-home-tab\"\n                  data-toggle=\"tab\"\n                  role=\"tab\"\n                  aria-controls=\"nav-home\"\n                  aria-selected=\"false\"\n                  to={ROUTES.HOME}\n                >\n                  <FontAwesomeIcon icon={faHome} />\n                </Link>\n                <Link\n                  className=\"nav-item nav-link\"\n                  id=\"nav-account-tab\"\n                  data-toggle=\"tab\"\n                  role=\"tab\"\n                  aria-controls=\"nav-account\"\n                  aria-selected=\"false\"\n                  to={ROUTES.ACCOUNT}\n                >\n                  Account\n                </Link>\n\n                {!!authUser.company_id && (\n                  <>\n                    <Link\n                      className=\"nav-item nav-link\"\n                      id=\"nav-buildings-tab\"\n                      data-toggle=\"tab\"\n                      role=\"tab\"\n                      aria-controls=\"nav-buildings\"\n                      aria-selected=\"false\"\n                      to={{pathname: `${ROUTES.COMPANIES}`\n                        // pathname: `${ROUTES.COMPANIES}/${authUser.company_id}`,\n                        // state: { company },\n                      }}\n                    >\n                      Company\n                    </Link>\n\n                    <Link\n                      className=\"nav-item nav-link\"\n                      id=\"nav-floors-tab\"\n                      data-toggle=\"tab\"\n                      role=\"tab\"\n                      aria-controls=\"nav-floors\"\n                      aria-selected=\"false\"\n                      to={ROUTES.FLOORS}\n                    >\n                      Floors\n                    </Link>\n                  </>\n                )}\n\n                {!!authUser.roles.ADMIN && (\n                  <Link\n                    className=\"nav-item nav-link\"\n                    id=\"nav-admin-tab\"\n                    data-toggle=\"tab\"\n                    role=\"tab\"\n                    aria-controls=\"nav-admin\"\n                    aria-selected=\"false\"\n                    to={ROUTES.ADMIN}\n                  >\n                    Admin\n                  </Link>\n                )}\n              </div>\n            </nav>\n          </div>\n        </div>\n      </div>\n    )}\n  </AuthUserContext.Consumer>\n);\n\nexport default Navigation;\n","import React, { Component } from 'react';\n\nimport { withFirebase } from '../Firebase';\n\nconst INITIAL_STATE = {\n  passwordOne: '',\n  passwordTwo: '',\n  error: null,\n};\n\nclass PasswordChangeForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { passwordOne } = this.state;\n\n    this.props.firebase\n      .doPasswordUpdate(passwordOne)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { email, passwordOne, passwordTwo, error } = this.state;\n\n    const isInvalid =\n      passwordOne !== passwordTwo || passwordOne === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          hidden={true}\n          name=\"email\"\n          autoComplete=\"email\"\n          value={email}\n          // onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <div className=\"form-row\">\n        <input\n          className=\"form-input\"\n          name=\"passwordOne\"\n          autoComplete=\"new-password\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"New Password\"\n        />\n        <input\n          className=\"form-input \"\n          name=\"passwordTwo\"\n          autoComplete=\"new-password\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Confirm New Password\"\n        />\n        </div>\n        <button className=\"btn btn-danger\" disabled={isInvalid} type=\"submit\">\n          Reset Password\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default withFirebase(PasswordChangeForm);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from 'react-router-dom'\nimport { faChevronLeft } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../routes';\n\nconst PasswordForgetPage = () => (\n  <div className=\"page-bg\">\n        <div className=\"page-inner\">\n    <h1>Reset Password</h1>\n    <PasswordForgetForm />\n    <BackButton />\n\n    </div>\n  </div>\n);\n\nconst INITIAL_STATE = {\n  email: '',\n  error: null,\n};\n\nclass PasswordForgetFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { email } = this.state;\n\n    this.props.firebase\n      .doPasswordReset(email)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { email, error } = this.state;\n\n    const isInvalid = email === '';\n\n    return (\n      \n      <form onSubmit={this.onSubmit}>\n        <input\n          className=\"form-input\"\n          name=\"email\"\n          autoComplete=\"email\"\n          value={this.state.email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <button \n        className=\"btn btn-secondary btn-social\"\n        disabled={isInvalid} type=\"submit\">\n          Reset Password\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n      \n    );\n  }\n}\n\nconst PasswordForgetLink = () => (\n  <p>\n    <Link to={ROUTES.PASSWORD_FORGET} className=\"highlight-link\">Forgot Password?</Link>\n  </p>\n);\n\nconst BackButton = withRouter(({ history }) => {\n  return (\n    <div>\n      <button className=\"btn btn-primary btn-social\" onClick={() => history.goBack()}><FontAwesomeIcon icon={faChevronLeft} /> Go Back</button>\n    </div>\n  )\n});\n\nexport default PasswordForgetPage;\n\nconst PasswordForgetForm = withFirebase(PasswordForgetFormBase);\n\nexport { PasswordForgetForm, PasswordForgetLink, BackButton };\n","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport { SignInLink } from './SignInPage';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../routes';\n\nconst SignUpPage = () => (\n  <div className='page-bg'>\n    <div className='page-inner'>\n    <img\n      className=\"signin-logo fade-in\" alt=\"logo\"\n      src=\"https://github.com/ChrisBarnes7404/React-WebBased-MVP/blob/master/public/images/minerva-transparent-vector.png?raw=true\"\n    />\n    <h1>Register</h1>\n    <SignUpForm />\n    <SignInLink />\n  </div>\n  </div>\n);\n\nconst INITIAL_STATE = {\n  username: '',\n  email: '',\n  passwordOne: '',\n  passwordTwo: '',\n  isAdmin: false,\n  error: null,\n};\n\nconst ERROR_CODE_ACCOUNT_EXISTS = 'auth/email-already-in-use';\n\nconst ERROR_MSG_ACCOUNT_EXISTS = `\n  An account with this E-Mail address already exists.\n  Try to login with this account instead. If you think the\n  account is already used from one of the social logins, try\n  to sign in with one of them. Afterward, associate your accounts\n  on your personal account page.\n`;\n\nclass SignUpFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { username, email, passwordOne, isAdmin } = this.state;\n    let roles = '';\n\n    if (isAdmin) {\n      roles = 'ADMIN';\n    } else {\n      roles = 'EMPLOYEE';\n    }\n\n    this.props.firebase\n      .doCreateUserWithEmailAndPassword(email, passwordOne)\n      .then(authUser => {\n        // Create a user in your Firebase realtime database\n        return this.props.firebase.user(authUser.user.uid).set({\n          username,\n          email,\n          roles,\n        });\n      })\n      .then(() => {\n        return this.props.firebase.doSendEmailVerification();\n      })\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\n        }\n\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  onChangeCheckbox = event => {\n    this.setState({ [event.target.name]: event.target.checked });\n  };\n\n  render() {\n    const {\n      username,\n      email,\n      passwordOne,\n      passwordTwo,\n      isAdmin,\n      error,\n    } = this.state;\n\n    const isInvalid =\n      passwordOne !== passwordTwo ||\n      passwordOne === '' ||\n      email === '' ||\n      username === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n                    className=\"form-input\"\n\n          name=\"username\"\n          autoComplete=\"username\"\n          value={username}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Full Name\"\n        />\n        <input\n                  className=\"form-input\"\n\n          name=\"email\"\n          autoComplete=\"email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <input\n                  className=\"form-input\"\n\n          name=\"passwordOne\"\n          autoComplete=\"new-password\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n        <input\n                  className=\"form-input\"\n\n          name=\"passwordTwo\"\n          autoComplete=\"new-password\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Confirm Password\"\n        />\n        {/* <label>\n          Admin:\n          <input\n            name=\"isAdmin\"\n            type=\"checkbox\"\n            checked={isAdmin}\n            onChange={this.onChangeCheckbox}\n          />\n        </label> */}\n        <button \n        className=\"btn btn-primary\"\n        disabled={isInvalid} type=\"submit\">\n          Sign Up\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nconst SignUpLink = () => (\n  <span className=\"cta\">\n  <p>Don't have an account?</p> \n    <p><Link to={ROUTES.SIGN_UP} className=\"highlight-link\">Sign Up</Link>\n  </p>\n  </span>\n);\n\nconst SignUpForm = compose(\n  withRouter,\n  withFirebase,\n)(SignUpFormBase);\n\nexport default SignUpPage;\n\nexport { SignUpForm, SignUpLink };\n","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport { SignUpLink } from './SignUpPage';\nimport { PasswordForgetLink } from './PasswordForgetPage';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../routes';\nimport { faFacebookF, faGoogle, faTwitter } from '@fortawesome/free-brands-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst SignInPage = () => (\n  <div className=\"page-bg\">\n    <div className=\"page-inner\">\n      <img\n        className=\"signin-logo fade-in\"\n        alt=\"logo\"\n        src=\"https://github.com/ChrisBarnes7404/React-WebBased-MVP/blob/master/public/images/minerva-transparent-vector.png?raw=true\"\n      />\n\n      <h1>Log In</h1>\n      <SignInForm />\n      <PasswordForgetLink />\n      <h4>Or log in with social:</h4>\n      <SignInGoogle />\n      <SignInFacebook />\n      <SignInTwitter />\n      <SignUpLink />\n    </div>\n  </div>\n);\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n  error: null,\n};\n\nconst ERROR_CODE_ACCOUNT_EXISTS =\n  'auth/account-exists-with-different-credential';\n\nconst ERROR_MSG_ACCOUNT_EXISTS = `\n  An account with an email address to\n  this social account already exists. Try to login from\n  this account instead and associate your social accounts on\n  your personal account page.\n`;\n\nclass SignInFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { email, password } = this.state;\n\n    this.props.firebase\n      .doSignInWithEmailAndPassword(email, password)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { email, password, error } = this.state;\n\n    const isInvalid = password === '' || email === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          className=\"form-input\"\n          name=\"email\"\n          value={email}\n          autoComplete=\"email\"\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />&nbsp;\n        <input\n          className=\"form-input\"\n          name=\"password\"\n          autoComplete=\"current-password\"\n          value={password}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Password\"\n        />&nbsp;\n        <button className=\"btn btn-primary\" disabled={isInvalid} type=\"submit\">\n          Log in\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nclass SignInGoogleBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { error: null };\n  }\n\n  onSubmit = event => {\n    this.props.firebase\n      .doSignInWithGoogle()\n      .then(socialAuthUser => {\n        // Create a user in your Firebase Realtime Database too\n        return this.props.firebase.user(socialAuthUser.user.uid).set({\n          username: socialAuthUser.user.displayName,\n          email: socialAuthUser.user.email,\n          roles: 'EMPLOYEE',\n        });\n      })\n      .then(() => {\n        this.setState({ error: null });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\n        }\n\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  render() {\n    const { error } = this.state;\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <button className=\"btn btn-social btn-primary\" type=\"submit\"><FontAwesomeIcon icon={faGoogle} /> Log in with Google</button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nclass SignInFacebookBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { error: null };\n  }\n\n  onSubmit = event => {\n    this.props.firebase\n      .doSignInWithFacebook()\n      .then(socialAuthUser => {\n        // Create a user in your Firebase Realtime Database too\n        return this.props.firebase.user(socialAuthUser.user.uid).set({\n          username: socialAuthUser.additionalUserInfo.profile.name,\n          email: socialAuthUser.additionalUserInfo.profile.email,\n          roles: 'EMPLOYEE',\n        });\n      })\n      .then(() => {\n        this.setState({ error: null });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\n        }\n\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  render() {\n    const { error } = this.state;\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <button className=\"btn btn-social btn-primary\" type=\"submit\"><FontAwesomeIcon icon={faFacebookF} /> Log in with Facebook</button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nclass SignInTwitterBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { error: null };\n  }\n\n  onSubmit = event => {\n    this.props.firebase\n      .doSignInWithTwitter()\n      .then(socialAuthUser => {\n        // Create a user in your Firebase Realtime Database too\n        return this.props.firebase.user(socialAuthUser.user.uid).set({\n          username: socialAuthUser.additionalUserInfo.profile.name,\n          email: socialAuthUser.additionalUserInfo.profile.email,\n          roles: 'EMPLOYEE',\n        });\n      })\n      .then(() => {\n        this.setState({ error: null });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\n        }\n\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  render() {\n    const { error } = this.state;\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <button className=\"btn btn-social btn-primary\" type=\"submit\"><FontAwesomeIcon icon={faTwitter} /> Log in with Twitter</button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nconst SignInLink = () => (\n  <span className=\"cta\">\n    <p>Already have an account?</p>\n    <p>\n      <Link to={ROUTES.SIGN_IN} className=\"highlight-link\">\n        Sign In\n      </Link>\n    </p>\n  </span>\n);\n\n\nconst SignInForm = compose(\n  withRouter,\n  withFirebase,\n)(SignInFormBase);\n\nconst SignInGoogle = compose(\n  withRouter,\n  withFirebase,\n)(SignInGoogleBase);\n\nconst SignInFacebook = compose(\n  withRouter,\n  withFirebase,\n)(SignInFacebookBase);\n\nconst SignInTwitter = compose(\n  withRouter,\n  withFirebase,\n)(SignInTwitterBase);\n\nexport default SignInPage;\n\nexport { SignInForm, SignInLink, SignInGoogle, SignInFacebook, SignInTwitter };\n","import React from 'react';\n\nimport { withFirebase } from '../Firebase';\nimport { faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst SignOutButton = ({ firebase }) => (\n  <button\n    type=\"button\"\n    className=\"btn btn-secondary \"\n    onClick={firebase.doSignOut}\n  >\n    Logout <FontAwesomeIcon icon={faSignOutAlt} />\n  </button>\n);\n\nexport default withFirebase(SignOutButton);\n","import React from 'react';\nimport GooglePlacesAutocomplete from 'react-google-places-autocomplete';\n// const geocodeByAddress = (address: string): Promise<google.maps.GeocoderResult[]>;\n\n// geocodeByAddress('Montevideo, Uruguay')\n//   .then(results => console.log(results))\n//   .catch(error => console.error(error));\n\nclass AddressForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {result: \"\"};\n    };\n\n  sendBackData = () => {\n    var address = this.state.result.value;\n    console.log(address)\n    this.props.parentCallBack(address);\n  };\n\n  render() {\n    return (\n      <div>\n        <GooglePlacesAutocomplete\n          apiKey=\"AIzaSyDJ1foA09dKFjq-_KfWg2K822qClFUDaAc\"\n          onLoadFailed={(error) =>\n            console.error('Could not inject Google script', error)\n          }\n          selectProps={{\n            value: this.state.result,\n            onChange: this.state.result,\n            // onChange: (object | object[] | null | undefined, action) => setValue,\n            placeholder: 'Enter A Location...',\n            styles: {\n              input: (provided) => ({\n                ...provided,\n                color: 'blue',\n              }),\n              option: (provided) => ({\n                ...provided,\n                color: 'blue',\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: 'blue',\n              }),\n            },\n          }}\n        />\n        <button onClick={this.sendBackData}>click me to send back</button>;\n      </div>\n    );\n  }\n}\n\nexport default AddressForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// import './ToggleSwitch.scss';\n\n/*\nToggle Switch Component By https://www.sitepoint.com/react-toggle-switch-reusable-component/\nNote: id, checked and onChange are required for ToggleSwitch component to function. The props name, small, disabled\nand optionLabels are optional.\nUsage: <ToggleSwitch id=\"id\" checked={value} onChange={checked => setValue(checked)}} />\n*/\n\nconst ToggleSwitch = ({ id, name, checked, onChange, optionLabels, small, disabled }) => {\n  function handleKeyPress(e) {\n    if (e.keyCode !== 32) return;\n\n    e.preventDefault();\n    onChange(!checked);\n  }\n\n  return (\n    <div className={'toggle-switch' + (small ? ' small-switch' : '')}>\n      <input\n        type=\"checkbox\"\n        name={name}\n        className=\"toggle-switch-checkbox\"\n        id={id}\n        checked={checked}\n        onChange={(e) => onChange(e.target.checked)}\n        disabled={disabled}\n      />\n      {id ? (\n        <label className=\"toggle-switch-label\" tabIndex={disabled ? -1 : 1} onKeyDown={(e) => handleKeyPress(e)} htmlFor={id}>\n          <span\n            className={disabled ? 'toggle-switch-inner toggle-switch-disabled' : 'toggle-switch-inner'}\n            data-yes={optionLabels[0]}\n            data-no={optionLabels[1]}\n            tabIndex={-1}\n          />\n          <span className={disabled ? 'toggle-switch-switch toggle-switch-disabled' : 'toggle-switch-switch'} tabIndex={-1} />\n        </label>\n      ) : null}\n    </div>\n  );\n};\n\n// Set optionLabels for rendering.\nToggleSwitch.defaultProps = {\n  optionLabels: ['Yes', 'No'],\n};\n\nToggleSwitch.propTypes = {\n  id: PropTypes.string.isRequired,\n  checked: PropTypes.bool.isRequired,\n  onChange: PropTypes.func.isRequired,\n  name: PropTypes.string,\n  optionLabels: PropTypes.array,\n  small: PropTypes.bool,\n  disabled: PropTypes.bool,\n};\n\nexport default ToggleSwitch;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { withFirebase } from '../Firebase';\nimport { AuthUserContext } from '../Session';\nimport * as ROUTES from '../../routes';\n\nconst JoinCompanyPage = () => (\n  <AuthUserContext.Consumer>\n    {(authUser) => (\n      <div>\n        <h3>Join A Company</h3>\n        <JoinCompanyForm authUser={authUser} />\n      </div>\n    )}\n  </AuthUserContext.Consumer>\n);\n\nconst INITIAL_STATE = {\n  companyID: '',\n  error: null,\n};\n\nclass CompanyFormBase extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { authUser } = this.props;\n    const { companyID } = this.state;\n\n    this.props.firebase\n      .setUserCompany(authUser.uid, companyID)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { companyID, error } = this.state;\n\n    const isInvalid = companyID === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          className=\"form-input\"\n          name=\"companyID\"\n          autoComplete=\"companyID\"\n          value={this.state.companyID}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Company ID\"\n        />\n        <button className=\"btn btn-primary\" disabled={isInvalid} type=\"submit\">\n          Join This Company\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nconst CompanyLink = () => (\n  <p>\n    <Link to={ROUTES.JOIN_A_COMPANY}>Join A Company!!</Link>\n  </p>\n);\n\nexport default JoinCompanyPage;\n\nconst JoinCompanyForm = withFirebase(CompanyFormBase);\n\nexport { JoinCompanyForm, CompanyLink };\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { COMPANIES } from '../../routes';\n\nimport { withFirebase } from '../Firebase';\n\n// import AddressForm from '../AddressForm';\n\nclass CompanyForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      companyTitle: '',\n      companyAddress: '',\n    };\n  }\n\n  onChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  onCreateCompany = () => {\n    let ownerName = this.props.authUser.username;\n    let ownerID = this.props.authUser.uid;\n\n    var companyData = {\n      companyTitle: this.state.companyTitle,\n      companyAddress: this.state.companyAddress,\n      owner: { ownerName, ownerID },\n      createdAt: this.props.firebase.serverValue.TIMESTAMP,\n    };\n\n    let companyID = this.props.firebase.createCompany(companyData);\n    console.log(companyID);\n    this.setState({\n      companyTitle: '',\n      companyAddress: '',\n    });\n  };\n\n  render() {\n    const { companyTitle, companyAddress } = this.state;\n\n    return (\n      <div className=\"add-padding-bottom text-center\">\n        <h1>Create A Company!</h1>\n        <form>\n          <input\n            className=\"col-10 form-input\"\n            type=\"text\"\n            placeholder=\"Name Your Company!\"\n            value={companyTitle}\n            name=\"companyTitle\"\n            onChange={this.onChange}\n          />\n          <input\n            className=\"col-10 form-input\"\n            type=\"text\"\n            placeholder=\"Where does it live?\"\n            value={companyAddress}\n            name=\"companyAddress\"\n            onChange={this.onChange}\n          />\n\n          {/* <AddressForm parentCallBack={this.onChangeCompanyAddress} /> */}\n        </form>\n\n        <button className=\"btn btn-primary\" type=\"submit\" onClick={this.onCreateCompany}>\n          <Link to={COMPANIES}>click me to send back</Link>\n        </button>\n\n      </div>\n    );\n  }\n}\n\nexport default withFirebase(CompanyForm);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { BUILDINGS } from '../../routes';\n\nimport { withFirebase } from '../Firebase';\n\n// import AddressForm from '../AddressForm';\n\nclass BuildingForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      buildingTitle: '',\n      buildingAddress: '',\n      companyID: '',\n    };\n  }\n\n  onChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  onCreateBuilding = () => {\n    let { buildingTitle, buildingAddress, companyID } = this.state;\n    let ownerName = this.props.authUser.username;\n    let ownerID = this.props.authUser.uid;\n\n    var BuildingData = {\n      buildingTitle,\n      buildingAddress,\n      companyID,\n      owner: { ownerName, ownerID },\n      createdAt: this.props.firebase.serverValue.TIMESTAMP,\n    };\n\n    let buildingID = this.props.firebase.createBuilding(BuildingData);\n    console.log(buildingID);\n    this.setState({\n      buildingTitle: '',\n      buildingAddress: '',\n      companyID: '',\n    });\n  };\n\n  render() {\n    const { buildingTitle, buildingAddress, companyID } = this.state;\n\n    return (\n      <div className=\"add-padding-bottom text-center\">\n        <h1>Create A Building!</h1>\n        <form>\n          <input\n            className=\"col-10 form-input\"\n            type=\"text\"\n            placeholder=\"Name Your Building!\"\n            value={buildingTitle}\n            name=\"buildingTitle\"\n            onChange={this.onChange}\n          />\n          <input\n            className=\"col-10 form-input\"\n            type=\"text\"\n            placeholder=\"Where does it live?\"\n            value={buildingAddress}\n            name=\"buildingAddress\"\n            onChange={this.onChange}\n          />\n          <input\n            className=\"col-10 form-input\"\n            type=\"text\"\n            placeholder=\"What Your Company ID?\"\n            value={companyID}\n            name=\"companyID\"\n            onChange={this.onChange}\n          />\n\n          {/* <AddressForm parentCallBack={this.onChangebuildingAddress} /> */}\n        </form>\n\n        <button className=\"btn btn-primary\" type=\"submit\" onClick={this.onCreateBuilding}>\n          <Link to={BUILDINGS}>click me to send back</Link>\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default withFirebase(BuildingForm);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FLOORS } from '../../routes';\n\nimport { withFirebase } from '../Firebase';\n\n// import AddressForm from '../AddressForm';\n\nclass FloorForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      floorTitle: '',\n      floorAddress: '',\n      companyID: '',\n      buildingID: '',\n    };\n  }\n\n  onChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  onCreateFloor = () => {\n    let { floorTitle, floorAddress, companyID, buildingID } = this.state;\n    let ownerName = this.props.authUser.username;\n    let ownerID = this.props.authUser.uid;\n\n    var FloorData = {\n      floorTitle,\n      floorAddress,\n      companyID,\n      buildingID,\n      owner: { ownerName, ownerID },\n      createdAt: this.props.firebase.serverValue.TIMESTAMP,\n    };\n\n    let floorID = this.props.firebase.createFloor(FloorData);\n    console.log(floorID);\n    this.setState({\n      floorTitle: '',\n      floorAddress: '',\n      companyID: '',\n      buildingID: '',\n    });\n  };\n\n  render() {\n    const { floorTitle, floorAddress, companyID, buildingID } = this.state;\n\n    return (\n      <div className=\"add-padding-bottom text-center\">\n        <h1>Create A Floor!</h1>\n        <form>\n          <input\n            className=\"col-10 form-input\"\n            type=\"text\"\n            placeholder=\"Name Your Floor!\"\n            value={floorTitle}\n            name=\"floorTitle\"\n            onChange={this.onChange}\n          />\n          <input\n            className=\"col-10 form-input\"\n            type=\"text\"\n            placeholder=\"Where does it live?\"\n            value={floorAddress}\n            name=\"floorAddress\"\n            onChange={this.onChange}\n          />\n          <input\n            className=\"col-10 form-input\"\n            type=\"text\"\n            placeholder=\"What Is Your Company ID?\"\n            value={companyID}\n            name=\"companyID\"\n            onChange={this.onChange}\n          />\n          <input\n            className=\"col-10 form-input\"\n            type=\"text\"\n            placeholder=\"What Is Your Building ID?\"\n            value={buildingID}\n            name=\"buildingID\"\n            onChange={this.onChange}\n          />\n\n          {/* <AddressForm parentCallBack={this.onChangefloorAddress} /> */}\n        </form>\n\n        <button className=\"btn btn-primary\" type=\"submit\" onClick={this.onCreateFloor}>\n          <Link to={FLOORS}>click me to send back</Link>\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default withFirebase(FloorForm);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { ROOMS } from '../../routes';\n\nimport { withFirebase } from '../Firebase';\n\n// import AddressForm from '../AddressForm';\n\nclass RoomForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      roomTitle: '',\n      roomAddress: '',\n      companyID: '',\n      buildingID: '',\n      floorID: '',\n    };\n  }\n\n  onChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  onCreateRoom = () => {\n    let { roomTitle, roomAddress, companyID, buildingID, floorID } = this.state;\n    let ownerName = this.props.authUser.username;\n    let ownerID = this.props.authUser.uid;\n\n    var RoomData = {\n      roomTitle,\n      roomAddress,\n      companyID,\n      buildingID,\n      floorID,\n      owner: { ownerName, ownerID },\n      createdAt: this.props.firebase.serverValue.TIMESTAMP,\n    };\n\n    let roomID = this.props.firebase.createRoom(RoomData);\n    console.log(roomID);\n    this.setState({\n      roomTitle: '',\n      roomAddress: '',\n      companyID: '',\n      buildingID: '',\n      floorID: '',\n    });\n  };\n\n  render() {\n    const { roomTitle, roomAddress, companyID, buildingID, floorID } = this.state;\n\n    return (\n      <div className=\"add-padding-bottom text-center\">\n        <h1>Create A Room!</h1>\n        <form>\n          <input\n            className=\"col-10 form-input\"\n            type=\"text\"\n            placeholder=\"Name Your Room!\"\n            value={roomTitle}\n            name=\"roomTitle\"\n            onChange={this.onChange}\n          />\n          <input\n            className=\"col-10 form-input\"\n            type=\"text\"\n            placeholder=\"Where does it live?\"\n            value={roomAddress}\n            name=\"roomAddress\"\n            onChange={this.onChange}\n          />\n          <input\n            className=\"col-10 form-input\"\n            type=\"text\"\n            placeholder=\"What Is Your Company ID?\"\n            value={companyID}\n            name=\"companyID\"\n            onChange={this.onChange}\n          />\n          <input\n            className=\"col-10 form-input\"\n            type=\"text\"\n            placeholder=\"What Is Your Building ID?\"\n            value={buildingID}\n            name=\"buildingID\"\n            onChange={this.onChange}\n          />\n          <input\n            className=\"col-10 form-input\"\n            type=\"text\"\n            placeholder=\"What Is Your Floor ID?\"\n            value={floorID}\n            name=\"floorID\"\n            onChange={this.onChange}\n          />\n\n          {/* <AddressForm parentCallBack={this.onChangeroomAddress} /> */}\n        </form>\n\n        <button className=\"btn btn-primary\" type=\"submit\" onClick={this.onCreateRoom}>\n          <Link to={ROOMS}>click me to send back</Link>\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default withFirebase(RoomForm);\n","import React, { Component } from 'react';\nimport { Link, Prompt } from 'react-router-dom';\n\nimport { REPORTS } from '../../routes';\nimport { withFirebase } from '../Firebase';\n\n\nclass ReportForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.initialState = {\n      isBlocking: false,\n      upload: null,\n      progress: 0,\n\n      \n      companyID: '',\n      buildingID: '',\n      floorID: '',\n      roomID: '',\n      \n      reportTitle: '',\n      reportMessage: '',\n      reportStatus: 'OPEN',\n      reportServiceType: '',\n\n      reportImageName: '',\n      reportImageURL: '',\n    };\n    this.state = this.initialState;\n  }\n\n  onCreateReport = () => {\n    let ownerName = this.props.authUser.username;\n    let ownerID = this.props.authUser.uid;\n\n    let { companyID, buildingID, floorID, roomID } = this.state;\n    let { reportTitle, reportMessage, reportStatus, reportServiceType, reportImageName, reportImageURL } = this.state;\n\n\n    var reportData = {\n      reporter: { ownerName, ownerID },\n      location: {\n        companyID,\n        buildingID,\n        floorID,\n        roomID,\n      },\n      image: { reportImageName, reportImageURL },\n      reportTitle,\n      reportMessage,\n      reportStatus,\n      reportServiceType,\n      createdAt: this.props.firebase.serverValue.TIMESTAMP,\n    }\n\n    let reportID = this.props.firebase.createReport(reportData);\n    console.log(reportID);\n    this.setState(this.initialState);\n  };\n\n  onChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n      isBlocking: event.target.value.length > 0,\n    });\n  };\n\n  onAutoFill = () => {\n    this.setState({\n      isBlocking: true,\n      \n      // companyID: '-MIl88ANUFKxLp_sKsvf',\n      // buildingID: '-MIqkLiTo2qwbo3JkrHL',\n      // floorID: '-MIqkPSUQ7HeoFxXdrW7',\n      // roomID: '-MIqCSAwq5QBti12uqKI',\n      companyID: '-MNIVFlXAdfjwAIEslMH',\n      buildingID: '-MNIWgqfPJFOqVVPFLCA',\n      floorID: '-MNIaKm56aa5l5mHaV5-',\n      roomID: '-MNIkOqcBsUhDz2IhflB',\n    });\n  };\n\n\n  handleChange = (e) => {\n    if (e.target.files[0]) {\n      const upload = e.target.files[0];\n      const uploadTask = this.props.firebase.storage.ref(`images/${upload.name}`).put(upload);\n      uploadTask.on(\n        'state_changed',\n        (snapshot) => {\n          // progress function ...\n          const progress = Math.round((snapshot.bytesTransferred / snapshot.totalBytes) * 100);\n          this.setState({ progress });\n        },\n        (error) => {\n          // Error function ...\n          console.log(error);\n        },\n        () => {\n          // complete function ...\n          this.props.firebase.storage\n            .ref(`images`)\n            .child(upload.name)\n            .getDownloadURL()\n            .then((image_url) => {\n              this.setState({ image_url, image_name: upload.name });\n            });\n        },\n      );\n    }\n  };\n\n\n  render() {\n    const { isBlocking, progress } = this.state;\n    const {\n      companyID,\n      buildingID,\n      floorID,\n      roomID,\n\n      reportTitle,\n      reportMessage,\n      reportServiceType,\n    } = this.state;\n\n    return (\n      <div className=\" text-center\">\n        <hr />\n        <h2>Create A Report!</h2>\n        <form>\n          <div className=\"form-row\">\n            <input\n              className=\"form-input col-5\"\n              type=\"text\"\n              placeholder=\"Company ID\"\n              name=\"companyID\"\n              value={companyID}\n              onChange={this.onChange}\n            />\n            <input\n              className=\"form-input col-5\"\n              type=\"text\"\n              placeholder=\"Building ID\"\n              name=\"buildingID\"\n              value={buildingID}\n              onChange={this.onChange}\n            />\n          </div>\n          <div className=\"form-row\">\n            <input\n              className=\"form-input col-5\"\n              type=\"text\"\n              placeholder=\"Floor ID\"\n              name=\"floorID\"\n              value={floorID}\n              onChange={this.onChange}\n            />\n            <input\n              className=\"form-input col-5\"\n              type=\"text\"\n              placeholder=\"Room ID\"\n              name=\"roomID\"\n              value={roomID}\n              onChange={this.onChange}\n            />\n          </div>\n\n          <div className=\"btn btn-primary form-input\" onClick={this.onAutoFill}>\n            Auto Fill Location\n          </div>\n\n          <div className=\"form-row\">\n            <input\n              className=\"form-input col-10\"\n              type=\"text\"\n              placeholder=\"Report Title\"\n              name=\"reportTitle\"\n              value={reportTitle}\n              onChange={this.onChange}\n            />\n          </div>\n\n          <textarea\n            rows=\"3\"\n            className=\"form-input col-12\"\n            type=\"text\"\n            placeholder=\"Reason For Report\"\n            name=\"reportMessage\"\n            value={reportMessage}\n            onChange={this.onChange}\n          />\n\n          <select className=\"form-control\" name=\"reportServiceType\" value={reportServiceType} onChange={this.onChange}>\n            <option value=\"\" disabled>\n              Select a Service\n            </option>\n            <option value=\"MAINTENANCE\">Maintenance / Repair</option>\n            <option value=\"HAZARD\">Hazard Report</option>\n            <option value=\"SERVICE\">Service Report</option>\n          </select>\n\n          \n          <input className=\"file-uploader\" type=\"file\" onChange={this.handleChange} />\n\n          <p className='text-center'>\n            Photo Upload Progress:\n            <progress value={progress} max=\"100\" className=\"progress\" />\n          </p>\n        </form>\n\n        <Prompt when={isBlocking} message={(location) => `Are you sure you want to go to ${location.pathname}`} />\n        {/* <p>Blocking? {isBlocking ? 'Yes, click a link or the back button' : 'Nope'}</p> */}\n\n        <button className=\"btn btn-primary\" type=\"submit\" onClick={this.onCreateReport}>\n          <Link to={REPORTS}>Submit Report</Link>\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default withFirebase(ReportForm);\n","import React, { Component, useState } from 'react';\nimport { compose } from 'recompose';\n\nimport { withFirebase } from '../Firebase';\n\nimport {\n  AuthUserContext,\n  withAuthorization,\n  withEmailVerification,\n} from '../Session';\n\nimport { PasswordForgetForm, PasswordChangeForm, SignOutButton} from '../Auth';\nimport { JoinCompanyForm, ToggleSwitch } from '../Utils';\n\nimport { faFacebookF } from '@fortawesome/free-brands-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\n\nconst AccountPage = () => {\n  let [settings, setSettings] = useState(false);\n  // let [daily, setDaily] = useState(false);\n  // let [weekly, setWeekly] = useState(false);\n  // let [monthly, setMonthly] = useState(false);\n\n  const onSettingsChange = (checked) => {\n    setSettings(checked);\n    // if (!checked) {\n    //   setDaily(false);\n    //   setWeekly(false);\n    //   setMonthly(false);\n    // }\n  };\n\n  return (\n    <AuthUserContext.Consumer>\n      {(authUser) => (\n        <div className=\"container text-center add-padding-bottom\">\n          <div className=\"usercard\">\n            <div className=\"mt-3\">\n              <img className=\"profile-photo\" src={'https://picsum.photos/200'} width=\"100\" height=\"100\" alt=\"Profile\" />\n            </div>\n            <h3>{authUser.username}'s Account</h3>\n            <p>\n              <strong>Email: </strong>\n              {authUser.email}\n              <br />\n              <strong>Company: </strong>\n              {authUser.company_id || 'No Company assigned.'}\n            </p>\n            <p>\n              <strong>Roles:</strong>\n              {authUser.roles}\n            </p>\n          </div>\n          <hr />\n\n          {!authUser.company_id && <JoinCompanyForm />}\n\n          <SignOutButton />\n\n          <br />\n\n          <div>\n            <ToggleSwitch id=\"settings\" checked={settings} onChange={onSettingsChange} />\n            <label htmlFor=\"settings\">Edit Account Settings</label>\n          </div>\n\n          {settings && (\n            <div>\n              {/* Forgot Your Password? <PasswordForgetForm /> */}\n              Reset Your Password. <PasswordChangeForm />\n              <LoginManagement authUser={authUser} />\n            </div>\n          )}\n\n        </div>\n      )}\n    </AuthUserContext.Consumer>\n  );\n};\n\n\nconst SIGN_IN_METHODS = [\n  { id: 'password', provider: null },\n  { id: 'google.com', provider: 'googleProvider' },\n  { id: 'facebook.com', provider: 'facebookProvider' },\n  { id: 'twitter.com', provider: 'twitterProvider' },\n];\n\n\nclass LoginManagementBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeSignInMethods: [],\n      error: null,\n    };\n  }\n\n  componentDidMount() {\n    this.fetchSignInMethods();\n  }\n\n  fetchSignInMethods = () => {\n    this.props.firebase.auth\n      .fetchSignInMethodsForEmail(this.props.authUser.email)\n      .then((activeSignInMethods) =>\n        this.setState({ activeSignInMethods, error: null }),\n      )\n      .catch((error) => this.setState({ error }));\n  };\n\n  onSocialLoginLink = (provider) => {\n    this.props.firebase.auth.currentUser\n      .linkWithPopup(this.props.firebase[provider])\n      .then(this.fetchSignInMethods)\n      .catch((error) => this.setState({ error }));\n  };\n\n  onDefaultLoginLink = (password) => {\n    const credential = this.props.firebase.emailAuthProvider.credential(\n      this.props.authUser.email,\n      password,\n    );\n\n    this.props.firebase.auth.currentUser\n      .linkAndRetrieveDataWithCredential(credential)\n      .then(this.fetchSignInMethods)\n      .catch((error) => this.setState({ error }));\n  };\n\n  onUnlink = (providerId) => {\n    this.props.firebase.auth.currentUser\n      .unlink(providerId)\n      .then(this.fetchSignInMethods)\n      .catch((error) => this.setState({ error }));\n  };\n\n  render() {\n    const { activeSignInMethods, error } = this.state;\n\n    return (\n      <div>\n        Sign In Methods:\n        <ul className=\"social-links\">\n          {SIGN_IN_METHODS.map((signInMethod) => {\n            const onlyOneLeft = activeSignInMethods.length === 1;\n            const isEnabled = activeSignInMethods.includes(\n              signInMethod.id,\n            );\n\n            return (\n              <li key={signInMethod.id}>\n                {signInMethod.id === 'password' ? (\n                  <DefaultLoginToggle\n                    onlyOneLeft={onlyOneLeft}\n                    isEnabled={isEnabled}\n                    signInMethod={signInMethod}\n                    onLink={this.onDefaultLoginLink}\n                    onUnlink={this.onUnlink}\n                  />\n                ) : (\n                  <SocialLoginToggle\n                    onlyOneLeft={onlyOneLeft}\n                    isEnabled={isEnabled}\n                    signInMethod={signInMethod}\n                    onLink={this.onSocialLoginLink}\n                    onUnlink={this.onUnlink}\n                  />\n                )}\n              </li>\n            );\n          })}\n        </ul>\n        {error && error.message}\n      </div>\n    );\n  }\n}\n\n\nconst SocialLoginToggle = ({\n  onlyOneLeft,\n  isEnabled,\n  signInMethod,\n  onLink,\n  onUnlink,\n}) =>\n  isEnabled ? (\n    <button\n      type=\"button\"\n      className=\"btn btn-primary btn-social\"\n      onClick={() => onUnlink(signInMethod.id)}\n      disabled={onlyOneLeft}\n    >\n      Deactivate {signInMethod.id}\n    </button>\n  ) : (\n    <button\n      type=\"button\"\n      className=\"btn btn-primary btn-social\"\n      onClick={() => onLink(signInMethod.provider)}\n    >\n      Link {signInMethod.id}\n    </button>\n  );\n\nclass DefaultLoginToggle extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { passwordOne: '', passwordTwo: '' };\n  }\n\n  onSubmit = (event) => {\n    event.preventDefault();\n\n    this.props.onLink(this.state.passwordOne);\n    this.setState({ passwordOne: '', passwordTwo: '' });\n  };\n\n  onChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const {\n      onlyOneLeft,\n      isEnabled,\n      signInMethod,\n      onUnlink,\n    } = this.props;\n\n    const { email, passwordOne, passwordTwo } = this.state;\n\n    const isInvalid =\n      passwordOne !== passwordTwo || passwordOne === '';\n\n    return isEnabled ? (\n      <button\n        type=\"button\"\n        className=\"btn btn-danger btn-social  disabled\"\n        onClick={() => onUnlink(signInMethod.id)}\n        disabled={onlyOneLeft}\n      >\n        Deactivate {signInMethod.id}\n      </button>\n    ) : (\n      <form onSubmit={this.onSubmit}>\n        <input\n          hidden={true}\n          name=\"email\"\n          autoComplete=\"email\"\n          value={email}\n          // onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <input\n          className=\"form-input\"\n          name=\"passwordOne\"\n          autoComplete=\"new-password\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"New Password\"\n        />\n        <input\n          className=\"form-input\"\n          name=\"passwordTwo\"\n          autoComplete=\"new-password\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Confirm New Password\"\n        />\n\n        <button\n          className=\"btn btn-primary\"\n          disabled={isInvalid}\n          type=\"submit\"\n        >\n          Link {signInMethod.id}\n        </button>\n      </form>\n    );\n  }\n}\n\nconst LoginManagement = withFirebase(LoginManagementBase);\n\nconst condition = (authUser) => !!authUser;\n\nexport default compose(\n  withEmailVerification,\n  withAuthorization(condition),\n)(AccountPage);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { withFirebase } from '../../Firebase';\nimport * as ROUTES from '../../../routes';\n\nclass UserList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      users: [],\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ loading: true });\n\n    this.props.firebase.users().on('value', snapshot => {\n      const usersObject = snapshot.val();\n\n      const usersList = Object.keys(usersObject).map(key => ({\n        ...usersObject[key],\n        uid: key,\n      }));\n\n      this.setState({\n        users: usersList,\n        loading: false,\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.users().off();\n  }\n\n  render() {\n    const { users, loading } = this.state;\n\n    return (\n      <div className=\"add-padding-bottom\">\n        <h2>Users</h2>\n        {loading && <div>Loading ...</div>}\n        <ul>\n          {users.map((user) => (\n            <li key={user.uid}>\n              <span>\n                <strong>ID:</strong> {user.uid}\n              </span>\n              <br />\n              <span>\n                <strong>E-Mail:</strong> {user.email}\n              </span>\n              <br />\n              <span>\n                <strong>Username:</strong> {user.username}\n              </span>\n              <br />\n              <span>\n                <Link\n                  to={{\n                    pathname: `${ROUTES.ADMIN}/${user.uid}`,\n                    state: { user },\n                  }}\n                >\n                  Details\n                </Link>\n              </span>\n              <hr />\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default withFirebase(UserList);\n","import React, { Component } from 'react';\n\nimport { withFirebase } from '../../Firebase';\n\nclass UserItem extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      user: null,\n      ...props.location.state,\n    };\n  }\n\n  componentDidMount() {\n    if (this.state.user) {\n      return;\n    }\n\n    this.setState({ loading: true });\n\n    this.props.firebase\n      .user(this.props.match.params.id)\n      .on('value', snapshot => {\n        this.setState({\n          user: snapshot.val(),\n          loading: false,\n        });\n      });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.user(this.props.match.params.id).off();\n  }\n\n  onSendPasswordResetEmail = () => {\n    this.props.firebase.doPasswordReset(this.state.user.email);\n  };\n\n  render() {\n    const { user, loading } = this.state;\n\n    return (\n      <div>\n        <h5>User ({this.props.match.params.id})</h5>\n        {loading && <div>Loading ...</div>}\n\n        {user && (\n          <div>\n            <span>\n              <strong>ID:</strong> {user.uid}\n            </span>\n            <br />\n            <span>\n              <strong>E-Mail:</strong> {user.email}\n            </span>\n            <br />\n            <span>\n              <strong>Username:</strong> {user.username}\n            </span>\n            <br />\n            <span>\n              <button\n                type=\"button\"\n                onClick={this.onSendPasswordResetEmail}\n              >\n                Send Password Reset\n              </button>\n            </span>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withFirebase(UserItem);\n","import UserList from './UserList';\nimport UserItem from './UserItem';\nimport AdminPage from './AdminPage';\n\nexport { UserList, UserItem, AdminPage };\nexport default AdminPage;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport * as ROUTES from '../../../routes';\nimport { withAuthorization, withEmailVerification } from '../../Session';\nimport { UserList, UserItem } from './index';\n\nconst AdminPage = () => (\n  <div>\n    <div className=\"jumbotron paral paralsec\">\n      <h1 className=\"display-8 text-center mb-3\">Admin</h1>\n    </div>\n    <Switch>\n      <Route exact path={ROUTES.ADMIN} component={UserList} />\n      <Route exact path={ROUTES.ADMIN_DETAILS} component={UserItem} />\n    </Switch>\n  </div>\n);\n\nconst condition = (authUser) => authUser.roles === 'ADMIN';\n\nexport default compose(\n  withEmailVerification,\n  withAuthorization(condition),\n)(AdminPage);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { HOME } from '../../routes';\n\nconst LandingPage = () => (\n  <div className=\"container landing-container\">\n    <Link to={{ pathname: HOME }}>\n      <img\n        className=\"landing-logo square fade-in\" alt=\"logo\"\n        src=\"https://github.com/ChrisBarnes7404/React-WebBased-MVP/blob/master/public/images/minerva-transparent-vector.png?raw=true\"\n      />\n      <p className=\"title\">Minerva Facilities</p>\n    </Link>\n  </div>\n);\n\nexport default LandingPage;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { HOME } from \"../../routes\";\n\nclass NotFoundPage extends Component {\n  render() {\n    return (\n      <div id=\"content-wrap\" className=\"container pt-5\" style={{ textAlign: 'center' }}>\n        <h1>Oops!</h1>\n        <h2>We can't find the page you're looking for.</h2>\n        <p>\n          <Link to={HOME}><button className=\"btn btn-secondary\">Go to Home Kid</button></Link>\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default NotFoundPage;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { AuthUserContext } from '../../Session';\nimport { withFirebase } from '../../Firebase';\nimport * as ROUTES from '../../../routes';\n\nimport { CreateCompanyForm } from '../../Utils';\n\nclass CompanyList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      companies: [],\n      limit: 5,\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ loading: true });\n\n    this.props.firebase\n      .companies()\n      .orderByChild('id')\n      .limitToLast(this.state.limit)\n      .on('value', (snapshot) => {\n        const companyObject = snapshot.val();\n\n        if (companyObject) {\n          const companyList = Object.keys(companyObject).map((key) => ({\n            ...companyObject[key],\n            uid: key,\n          }));\n\n          this.setState({\n            companies: companyList,\n            loading: false,\n          });\n        } else {\n          this.setState({ companies: null, loading: false });\n        }\n      });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.companies().off();\n  }\n\n  onNextPage = () => {\n    this.setState(\n      (state) => ({ limit: state.limit + 5 }),\n      this.onListenForCompanies,\n    );\n  };\n\n\n  render() {\n    const { companies, loading } = this.state;\n\n    return (\n      <AuthUserContext.Consumer>\n        {(authUser) => (\n          <div className=\"container add-padding-bottom\">\n            {loading && <div>Loading ...</div>}\n\n            {!companies ? (\n              <div>There are no companies ...</div>\n            ) : (\n              <div>\n                {companies.length > this.state.limit && (\n                  <button className=\"btn btn-secondary\" type=\"button\" onClick={this.onNextPage}>\n                    Show More\n                  </button>\n                )}\n\n                <ul className=\"ul-comp-list\">\n                  {companies.map(\n                    (company) =>\n                      company.uid === authUser.company_id && (\n                        <li key={company.uid} className=\"r-details-card\">\n                          <strong>Title:</strong> {company.companyTitle}\n                          <br />\n                          <strong>Location:</strong> {company.companyAddress}\n                          <br />\n                          <div className=\"row\">\n                            <div className=\"ml-3 mr-2\">\n                              <Link\n                                to={{\n                                  pathname: `${ROUTES.COMPANIES}/${company.uid}`,\n                                  state: { company },\n                                }}\n                              >\n                                Details\n                              </Link>\n                            </div>\n                          </div>\n                          <hr />\n                        </li>\n                      ),\n                  )}\n                </ul>\n              </div>\n            )}\n\n            {authUser.roles === 'ADMIN' && <CreateCompanyForm authUser={authUser} />}\n          </div>\n        )}\n      </AuthUserContext.Consumer>\n    );\n  }\n}\n\nexport default withFirebase(CompanyList);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { withFirebase } from '../../Firebase';\nimport { AuthUserContext } from '../../Session';\nimport * as ROUTES from '../../../routes';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\n\nclass CompanyDetail extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      editMode: false,\n      loading: false,\n      company: null,\n      companyTitle: '',\n      companyAddress: '',\n      ...props.location.state,\n    };\n  }\n\n  componentDidMount() {\n    if (this.state.company) {\n      return;\n    }\n\n    this.setState({ loading: true });\n\n    this.props.firebase.company(this.props.match.params.id).on('value', (snapshot) => {\n      this.setState({\n        company: snapshot.val(),\n        loading: false,\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.company(this.props.match.params.id).off();\n  }\n\n  onChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  onToggleEditMode = () => {\n    this.setState((state) => ({\n      editMode: !state.editMode,\n      companyTitle: this.state.company.companyTitle,\n      companyAddress: this.state.company.companyAddress,\n    }));\n  };\n\n  onSaveEdit = () => {\n    const { company, companyTitle, companyAddress } = this.state;\n    const { uid, ...companySnapshot } = company;\n\n    this.props.firebase.company(company.uid).set({\n      ...companySnapshot,\n      companyTitle,\n      companyAddress,\n      editedAt: this.props.firebase.serverValue.TIMESTAMP,\n    });\n\n    this.setState({ editMode: false });\n  };\n\n  onRemoveCompany = (uid, userID) => {\n    let dbUSER = this.props.firebase.user(userID)\n    dbUSER.child('companies').child(uid).remove();\n    dbUSER.child('company_id').remove();\n    this.props.firebase.company(uid).remove();\n    console.log(\"REMOVED Company: \", uid, dbUSER);\n  };\n\n  render() {\n    const { loading, company, editMode, companyTitle, companyAddress } = this.state;\n\n    const fullDateCreated = new Date(company.createdAt * 1000).toString().split(' ');\n    const dateCreated =\n      fullDateCreated[0] +\n      ', ' +\n      fullDateCreated[1] +\n      ' ' +\n      fullDateCreated[2] +\n      ', ' +\n      fullDateCreated[4] +\n      ', ' +\n      fullDateCreated[6] +\n      fullDateCreated[7] +\n      fullDateCreated[8];\n\n    const fullDateEdited = new Date(company.editedAt * 1000).toString().split(' ');\n    const dateEdited =\n      fullDateEdited[0] +\n      ', ' +\n      fullDateEdited[1] +\n      ' ' +\n      fullDateEdited[2] +\n      ', ' +\n      fullDateEdited[4] +\n      ', ' +\n      fullDateEdited[6] +\n      fullDateEdited[7] +\n      fullDateEdited[8];\n\n    return (\n      <AuthUserContext.Consumer>\n        {(authUser) => (\n          <div className=\"container\">\n            {loading && <div>Loading ...</div>}\n\n            {/* Display */}\n            {company && (\n              <div>\n                <h5>Company ({company.uid})</h5>\n                <strong>Title:</strong> {company.companyTitle}\n                <br />\n                <strong>Location:</strong> {company.companyAddress}\n                <br />\n                <strong>Company Owner:</strong> {company.ownerID}\n                <br />\n                <strong>Created At:</strong> {dateCreated}\n                <br />\n                {company.editedAt && (\n                  <p>\n                    <strong>Last Edited At:</strong> {dateEdited}\n                  </p>\n                )}\n                <br />\n                {company.buildingList && (\n                  <p>\n                    <strong>Buildings List:</strong> {company.buildingsList}\n                  </p>\n                )}\n              </div>\n            )}\n\n            {authUser.uid === company.owner.ownerID && (\n              <div className=\"\">\n                {editMode ? (\n                  <div>\n                    <div className=\"container\">\n                      <input\n                        type=\"text\"\n                        className=\"form-input form-control\"\n                        placeholder=\"Company name...\"\n                        name=\"companyTitle\"\n                        value={companyTitle}\n                        onChange={this.onChange}\n                      />\n                      <input\n                        type=\"text\"\n                        className=\"form-input form-control\"\n                        placeholder=\"Address...\"\n                        name=\"companyAddress\"\n                        value={companyAddress}\n                        onChange={this.onChange}\n                      />\n                    </div>\n\n                    <div className=\"justify-me\">\n                      <button className=\"btn btn-secondary btn-bot\" onClick={this.onSaveEdit}>\n                        Save Changes\n                      </button>\n                      <button className=\"btn btn-secondary btn-bot\" onClick={this.onToggleEditMode}>\n                        Cancel Edit\n                      </button>\n                    </div>\n                  </div>\n                ) : (\n                  <div className=\"row\">\n                    <button className=\"btn-li\" onClick={this.onToggleEditMode}>\n                      <FontAwesomeIcon icon={faEdit} />\n                    </button>\n\n                    <button className=\"btn-li\" type=\"button\" onClick={(auhtUser) => this.onRemoveCompany(company.uid, auhtUser.uid)}>\n                      <Link to={ROUTES.COMPANIES}><FontAwesomeIcon icon={faTrash} /></Link>\n                    </button>\n                  </div>\n                )}\n              </div>\n            )}\n\n            {/* Navigation */}\n            <div className=\"row\">\n              <div className=\"ml-3 mr-2\">\n                <Link to={ROUTES.COMPANIES}>\n                  <button className=\"btn btn-secondary\">Back</button>\n                </Link>\n              </div>\n              <div className=\"mr-2\">\n                <Link to={{ pathname: `${ROUTES.BUILDINGS}`, state: company }}>\n                  <button className=\"btn btn-success\">Buildings List</button>\n                </Link>\n              </div>\n            </div>\n          </div>\n        )}\n      </AuthUserContext.Consumer>\n    );\n  }\n}\n\nexport default withFirebase(CompanyDetail);\n","import CompanyList from './CompanyList';\nimport CompanyDetails from './CompanyDetails';\nimport CompaniesPage from './CompaniesPage';\n\nexport { CompanyList, CompanyDetails, CompaniesPage };\nexport default CompaniesPage;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport * as ROUTES from '../../../routes';\nimport { AuthUserContext, withAuthorization, withEmailVerification } from '../../Session';\nimport { CreateCompanyForm } from '../../Utils';\nimport { CompanyList, CompanyDetails } from './index';\n\nconst CompaniesPage = () => (\n  <AuthUserContext.Consumer>\n    {(authUser) => (\n      <div>\n        <div className=\"jumbotron paral paralsec\">\n          <h1 className=\"display-8 text-center mb-3\">Companies</h1>\n        </div>\n\n        <Switch>\n          <Route exact path={ROUTES.COMPANIES} component={CompanyList} />\n          <Route exact path={ROUTES.COMPANY_NEW}>\n            <CreateCompanyForm authUser={authUser} />\n          </Route>\n          <Route exact path={ROUTES.COMPANY_DETAILS} component={CompanyDetails} />\n        </Switch>\n      </div>\n    )}\n  </AuthUserContext.Consumer>\n);\n\nconst condition = (authUser) => !!authUser;\n\nexport default compose(\n  withEmailVerification,\n  withAuthorization(condition),\n)(CompaniesPage);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { AuthUserContext } from '../../Session';\nimport { withFirebase } from '../../Firebase';\nimport * as ROUTES from '../../../routes';\n\nimport { CreateBuildingForm } from '../../Utils';\n\nclass BuildingList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      buildings: [],\n      limit: 5,\n      companyID: this.props.companyID,\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ loading: true });\n\n    this.props.firebase\n      .buildings()\n      .orderByChild('companyID')\n      .limitToLast(this.state.limit)\n      .on('value', (snapshot) => {\n        const buildingsObject = snapshot.val();\n\n        if (buildingsObject) {\n          const buildingList = Object.keys(buildingsObject).map((key) => ({\n            ...buildingsObject[key],\n            uid: key,\n          }));\n\n          this.setState({\n            buildings: buildingList,\n            loading: false,\n          });\n        } else {\n          this.setState({ buildings: null, loading: false });\n        }\n      });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.buildings().off();\n  }\n\n  onNextPage = () => {\n    this.setState((state) => ({ limit: state.limit + 5 }), this.onListenForBuildings);\n  };\n\n  render() {\n    const { buildings, loading } = this.state;\n\n    return (\n      <AuthUserContext.Consumer>\n        {(authUser) => (\n          <div className=\"container add-padding-bottom\">\n            {loading && <div>Loading ...</div>}\n\n            {!buildings ? (\n              <div>There are no buildings ...</div>\n            ) : (\n              <div>\n                {buildings.length > this.state.limit && (\n                  <button className=\"btn btn-secondary\" type=\"button\" onClick={this.onNextPage}>\n                    Show More\n                  </button>\n                )}\n\n                <ul className=\"ul-comp-list\">\n                  {buildings.map(\n                    (building) =>\n                      building.companyID === authUser.company_id && (\n                        <li key={building.uid} className=\"r-details-card\">\n                          <strong>Title:</strong> {building.buildingTitle}\n                          <br />\n                          <strong>Location:</strong> {building.buildingAddress}\n                          <br />\n                          <div className=\"row\">\n                            <div className=\"ml-3 mr-2\">\n                              <Link\n                                to={{\n                                  pathname: `${ROUTES.BUILDINGS}/${building.uid}`,\n                                  state: { building },\n                                }}\n                              >\n                                Details\n                              </Link>\n                            </div>\n                          </div>\n                          <hr />\n                        </li>\n                      ),\n                  )}\n                </ul>\n              </div>\n            )}\n\n            {authUser.roles === 'ADMIN' && <CreateBuildingForm authUser={authUser} />}\n          </div>\n        )}\n      </AuthUserContext.Consumer>\n    );\n  }\n}\n\nexport default withFirebase(BuildingList);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { withFirebase } from '../../Firebase';\nimport { AuthUserContext } from '../../Session';\nimport * as ROUTES from '../../../routes';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\n\n\nclass BuildingDetail extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      building: null,\n      editMode: false,\n      companyID: '',\n      buildingTitle: '',\n      buildingAddress: '',\n      ...props.location.state,\n    };\n  }\n\n  componentDidMount() {\n    if (this.state.building) {\n      console.log(this.state);\n      return;\n    }\n\n    this.setState({ loading: true });\n\n    this.props.firebase.building(this.props.match.params.id).on('value', (snapshot) => {\n      this.setState({\n        building: snapshot.val(),\n        loading: false,\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.building(this.props.match.params.id).off();\n  }\n\n  onChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  onToggleEditMode = () => {\n    this.setState((state) => ({\n      editMode: !state.editMode,\n      companyID: this.state.companyID,\n      buildingTitle: this.state.building.buildingTitle,\n      buildingAddress: this.state.building.buildingAddress,\n    }));\n  };\n\n  onSaveEdit = () => {\n    const { building, buildingTitle, buildingAddress } = this.state;\n    const { uid, ...buildingSnapshot } = building;\n\n    this.props.firebase.building(building.uid).set({\n      ...buildingSnapshot,\n      buildingTitle,\n      buildingAddress,\n      editedAt: this.props.firebase.serverValue.TIMESTAMP,\n    });\n\n    this.setState({ editMode: false });\n  };\n\n  onRemoveBuilding = (uid) => {\n    this.props.firebase.building(uid).remove();\n  };\n\n  render() {\n    const { loading, building, companyID, editMode, buildingTitle, buildingAddress } = this.state;\n\n    const fullDateCreated = new Date(building.createdAt * 1000).toString().split(' ');\n    const dateCreated =\n      fullDateCreated[0] +\n      ', ' +\n      fullDateCreated[1] +\n      ' ' +\n      fullDateCreated[2] +\n      ', ' +\n      fullDateCreated[4] +\n      ', ' +\n      fullDateCreated[6] +\n      fullDateCreated[7] +\n      fullDateCreated[8];\n\n    const fullDateEdited = new Date(building.editedAt * 1000).toString().split(' ');\n    const dateEdited =\n      fullDateEdited[0] +\n      ', ' +\n      fullDateEdited[1] +\n      ' ' +\n      fullDateEdited[2] +\n      ', ' +\n      fullDateEdited[4] +\n      ', ' +\n      fullDateEdited[6] +\n      fullDateEdited[7] +\n      fullDateEdited[8];\n\n    return (\n      <AuthUserContext.Consumer>\n        {(authUser) => (\n          <div className=\"container\">\n            {loading && <div>Loading ...</div>}\n\n            {/* Display */}\n            {building && (\n              <div>\n                <h5>Building ({building.uid})</h5>\n                <strong>Title:</strong> {building.buildingTitle}\n                <br />\n                <strong>Location:</strong> {building.buildingAddress}\n                <br />\n                <strong>Company:</strong> {companyID}\n                <br />\n                <strong>Company Owner:</strong> {building.companyOwner}\n                <br />\n                <strong>Created At:</strong> {dateCreated}\n                <br />\n                {building.editedAt && (\n                  <p>\n                    <strong>Last Edited At:</strong> {dateEdited}\n                  </p>\n                )}\n              </div>\n            )}\n\n            {authUser.uid === building.owner.ownerID && (\n              <div className=\"\">\n                {editMode ? (\n                  <div>\n                    <div className=\"container\">\n                      <input\n                        type=\"text\"\n                        className=\"col-10 form-input\"\n                        placeholder=\"Name Your Building!\"\n                        name=\"buildingTitle\"\n                        value={buildingTitle}\n                        onChange={this.onChange}\n                      />\n                      <input\n                        type=\"text\"\n                        className=\"col-10 form-input\"\n                        placeholder=\"Where does it live?\"\n                        name=\"buildingAddress\"\n                        value={buildingAddress}\n                        onChange={this.onChange}\n                      />\n                    </div>\n\n                    <div className=\"justify-me\">\n                      <button className=\"btn btn-secondary btn-bot\" onClick={this.onSaveEdit}>\n                        Save Changes\n                      </button>\n                      <button className=\"btn btn-secondary btn-bot\" onClick={this.onToggleEditMode}>\n                        Cancel Edit\n                      </button>\n                    </div>\n                  </div>\n                ) : (\n                  <div className=\"row\">\n                    <button className=\"btn-li\" onClick={this.onToggleEditMode}>\n                      <FontAwesomeIcon icon={faEdit} />\n                    </button>\n\n                    <button className=\"btn-li\" tpye=\"button\" onClick={() => this.onRemoveBuilding(building.uid)}>\n                      <Link to={ROUTES.BUILDINGS}><FontAwesomeIcon icon={faTrash} /></Link>\n                    </button>\n                  </div>\n                )}\n              </div>\n            )}\n\n            {/* Navigation */}\n            <div className=\"row\">\n              <div className=\"ml-3 mr-2\">\n                <Link to={ROUTES.BUILDINGS}>\n                  <button className=\"btn btn-secondary\">Back</button>\n                </Link>\n              </div>\n              <div className=\"mr-2\">\n                <Link to={{ pathname: `${ROUTES.FLOORS}`, state: building }}>\n                  <button className=\"btn btn-success\">Floors List </button>\n                </Link>\n              </div>\n            </div>\n          </div>\n        )}\n      </AuthUserContext.Consumer>\n    );\n  }\n}\n\nexport default withFirebase(BuildingDetail);\n","import BuildingList from './BuildingList';\nimport BuildingDetails from './BuildingDetails';\nimport BuildingsPage from './BuildingsPage';\n\nexport { BuildingList, BuildingDetails, BuildingsPage };\nexport default BuildingsPage;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport { AuthUserContext, withAuthorization, withEmailVerification } from '../../Session';\nimport { CreateBuildingForm } from '../../Utils';\nimport { BuildingList, BuildingDetails } from './index';\nimport * as ROUTES from '../../../routes';\n\n\nconst BuildingsPage = () => (\n  <AuthUserContext.Consumer>\n    {(authUser) => (\n      <div>\n        <div className=\"jumbotron paral paralsec\">\n          <h1 className=\"display-8 text-center mb-3\">Buildings</h1>\n        </div>\n\n        <Switch>\n          <Route exact path={ROUTES.BUILDINGS} component={BuildingList} />\n          <Route exact path={ROUTES.BUILDING_NEW}>\n            <CreateBuildingForm authUser={authUser} />\n          </Route>\n          <Route exact path={ROUTES.BUILDING_DETAILS} component={BuildingDetails} />\n        </Switch>\n      </div>\n    )}\n  </AuthUserContext.Consumer>\n);\n\nconst condition = (authUser) => !!authUser;\n\nexport default compose(\n  withEmailVerification,\n  withAuthorization(condition),\n)(BuildingsPage);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { AuthUserContext } from '../../Session';\nimport { withFirebase } from '../../Firebase';\nimport * as ROUTES from '../../../routes';\n\nimport { CreateFloorForm } from '../../Utils';\n\nclass FloorList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      floors: [],\n      limit: 5,\n      companyID: this.props.companyID,\n      buildingID: this.props.buildingID,\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ loading: true });\n\n    this.props.firebase\n      .floors()\n      .orderByChild('companyID')\n      .limitToLast(this.state.limit)\n      .on('value', (snapshot) => {\n        const floorsObject = snapshot.val();\n\n        if (floorsObject) {\n          const floorList = Object.keys(floorsObject).map((key) => ({\n            ...floorsObject[key],\n            uid: key,\n          }));\n\n          this.setState({\n            floors: floorList,\n            loading: false,\n          });\n        } else {\n          this.setState({ floors: null, loading: false });\n        }\n      });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.floors().off();\n  }\n\n  onNextPage = () => {\n    this.setState((state) => ({ limit: state.limit + 5 }), this.onListenForFloors);\n  };\n\n  render() {\n    const { floors, loading } = this.state;\n\n    return (\n      <AuthUserContext.Consumer>\n        {(authUser) => (\n          <div className=\"container add-padding-bottom\">\n            {loading && <div>Loading ...</div>}\n\n            {!floors ? (\n              <div>There are no floors for your Company/Building...</div>\n            ) : (\n              <div>\n                {floors.length > this.state.limit && (\n                  <button className=\"btn btn-secondary btn-bot\" type=\"button\" onClick={this.onNextPage}>\n                    More\n                  </button>\n                )}\n\n                <ul className=\"ul-comp-list\">\n                  {floors.map(\n                    (floor) =>\n                      floor.companyID === authUser.company_id && (\n                        <li key={floor.uid} className=\"r-details-card\">\n                          <strong>Title:</strong> {floor.floorTitle}\n                          <br />\n                          <strong>Location:</strong> {floor.floorAddress}\n                          <br />\n                          <div className=\"row\">\n                            <div className=\"ml-3 mr-2\">\n                              <Link to={{ pathname: `${ROUTES.FLOORS}/${floor.uid}`, state: { floor } }}>Details</Link>\n                            </div>\n                          </div>\n                          <hr />\n                        </li>\n                      ),\n                  )}\n                </ul>\n              </div>\n            )}\n\n            {authUser.roles === 'ADMIN' && <CreateFloorForm authUser={authUser} />}\n          </div>\n        )}\n      </AuthUserContext.Consumer>\n    );\n  }\n}\n\nexport default withFirebase(FloorList);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { withFirebase } from '../../Firebase';\nimport { AuthUserContext } from '../../Session';\nimport * as ROUTES from '../../../routes';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\n\n\nclass FloorDetail extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      floor: null,\n      editMode: false,\n      companyID: '',\n      floorTitle: '',\n      floorAddress: '',\n      ...props.location.state,\n    };\n  }\n\n  componentDidMount() {\n    if (this.state.floor) {\n      return;\n    }\n\n    this.setState({ loading: true });\n\n    this.props.firebase.floor(this.props.match.params.id).on('value', (snapshot) => {\n      this.setState({\n        floor: snapshot.val(),\n        loading: false,\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.floor(this.props.match.params.id).off();\n  }\n\n  onChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  onToggleEditMode = () => {\n    this.setState((state) => ({\n      editMode: !state.editMode,\n      companyID: this.state.companyID,\n      buildingID: this.state.buildingID,\n      floorTitle: this.state.floor.floorTitle,\n      floorAddress: this.state.floor.floorAddress,\n    }));\n  };\n\n  onSaveEdit = () => {\n    const { floor, floorTitle, floorAddress } = this.state;\n    const { uid, ...floorSnapshot } = floor;\n\n    this.props.firebase.floor(floor.uid).set({\n      ...floorSnapshot,\n      floorTitle,\n      floorAddress,\n      editedAt: this.props.firebase.serverValue.TIMESTAMP,\n    });\n\n    this.setState({ editMode: false });\n  };\n\n  onRemoveFloor = (uid) => {\n    this.props.firebase.floor(uid).remove();\n  };\n\n  render() {\n    const { loading, floor, editMode, floorTitle, floorAddress } = this.state;\n\n    const fullDateCreated = new Date(floor.createdAt * 1000).toString().split(' ');\n    const dateCreated =\n      fullDateCreated[0] +\n      ', ' +\n      fullDateCreated[1] +\n      ' ' +\n      fullDateCreated[2] +\n      ', ' +\n      fullDateCreated[4] +\n      ', ' +\n      fullDateCreated[6] +\n      fullDateCreated[7] +\n      fullDateCreated[8];\n\n    const fullDateEdited = new Date(floor.editedAt * 1000).toString().split(' ');\n    const dateEdited =\n      fullDateEdited[0] +\n      ', ' +\n      fullDateEdited[1] +\n      ' ' +\n      fullDateEdited[2] +\n      ', ' +\n      fullDateEdited[4] +\n      ', ' +\n      fullDateEdited[6] +\n      fullDateEdited[7] +\n      fullDateEdited[8];\n\n    return (\n      <AuthUserContext.Consumer>\n        {(authUser) => (\n          <div className=\"container\">\n            {loading && <div>Loading ...</div>}\n\n            {floor && (\n              <div>\n                <h5>Floor ({floor.uid})</h5>\n                <strong>Title:</strong> {floor.floorTitle}\n                <br />\n                <strong>Location:</strong> {floor.floorAddress}\n                <br />\n                <strong>Company:</strong> {floor.companyID}\n                <br />\n                <strong>Building:</strong> {floor.buildingID}\n                <br />\n                <strong>Company Owner:</strong> {floor.owner.ownerName}\n                <br />\n                <strong>Created At:</strong> {dateCreated}\n                <br />\n                {floor.editedAt && (\n                  <p>\n                    <strong>Last Edited At:</strong> {dateEdited}\n                  </p>\n                )}\n              </div>\n            )}\n\n            {authUser.uid === floor.owner.ownerID && (\n              <div className=\"\">\n                {editMode ? (\n                  <div>\n                    <div>\n                      <input\n                        type=\"text\"\n                        className=\"col-10 form-input\"\n                        placeholder=\"Floor Name?\"\n                        name=\"floorTitle\"\n                        value={floorTitle}\n                        onChange={this.onChange}\n                      />\n                      <input\n                        placeholder=\"Floor Location/Number?\"\n                        type=\"text\"\n                        className=\"col-10 form-input\"\n                        name=\"floorAddress\"\n                        value={floorAddress}\n                        onChange={this.onChange}\n                      />\n                    </div>\n\n                    <div className=\"justify-me\">\n                      <button className=\"btn btn-secondary btn-bot\" onClick={this.onSaveEdit}>\n                        Save\n                      </button>\n                      <button className=\"btn btn-secondary btn-bot\" onClick={this.onToggleEditMode}>\n                        Reset\n                      </button>\n                    </div>\n                  </div>\n                ) : (\n                  <div className=\"row\">\n                    <button className=\"btn-li\" onClick={this.onToggleEditMode}>\n                      <FontAwesomeIcon icon={faEdit} />\n                    </button>\n\n                    <button type=\"button\" className=\"btn-li\" onClick={() => this.onRemoveFloor(floor.uid)}>\n                      <Link to={ROUTES.FLOORS}>\n                        <FontAwesomeIcon icon={faTrash} />\n                      </Link>\n                    </button>\n                  </div>\n                )}\n              </div>\n            )}\n\n            <div className=\"row\">\n              <div className=\"ml-3 mr-2\">\n                <Link to={ROUTES.FLOORS}>\n                  <button className=\"btn btn-secondary\">Back</button>\n                </Link>\n              </div>\n              <div className=\"mr-2\">\n                <Link to={{ pathname: `${ROUTES.ROOMS}`, state: floor }}>\n                  <button className=\"btn btn-success\">Rooms List </button>\n                </Link>\n              </div>\n            </div>\n          </div>\n        )}\n      </AuthUserContext.Consumer>\n    );\n  }\n}\n\nexport default withFirebase(FloorDetail);\n","import FloorList from './FloorList';\nimport FloorDetails from './FloorDetails';\nimport FloorsPage from './FloorsPage';\n\nexport { FloorList, FloorDetails, FloorsPage };\nexport default FloorsPage;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport { AuthUserContext, withAuthorization, withEmailVerification } from '../../Session';\nimport { CreateFloorForm } from '../../Utils';\nimport { FloorList, FloorDetails } from './index';\nimport * as ROUTES from '../../../routes';\n\nconst FloorsPage = () => (\n  <AuthUserContext.Consumer>\n    {(authUser) => (\n      <div>\n        <div className=\"jumbotron paral paralsec\">\n          <h1 className=\"display-8 text-center mb-3\">Floors</h1>\n        </div>\n        <Switch>\n          <Route exact path={ROUTES.FLOORS} component={FloorList} />\n          <Route exact path={ROUTES.FLOOR_NEW}>\n            <CreateFloorForm authUser={authUser} />\n          </Route>\n          <Route exact path={ROUTES.FLOOR_DETAILS} component={FloorDetails} />\n        </Switch>\n      </div>\n    )}\n  </AuthUserContext.Consumer>\n);\n\nconst condition = (authUser) => !!authUser;\n\nexport default compose(\n  withEmailVerification,\n  withAuthorization(condition),\n)(FloorsPage);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { AuthUserContext } from '../../Session';\nimport { withFirebase } from '../../Firebase';\nimport * as ROUTES from '../../../routes';\n\nimport { CreateRoomForm } from '../../Utils';\n\nclass RoomList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      rooms: [],\n      limit: 5,\n      companyID: this.props.companyID,\n      buildingID: this.props.buildingID,\n      floorID: this.props.floorID,\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ loading: true });\n\n    this.props.firebase\n      .rooms()\n      .orderByChild('companyID')\n      .limitToLast(this.state.limit)\n      .on('value', (snapshot) => {\n        const roomsObject = snapshot.val();\n\n        if (roomsObject) {\n          const roomsList = Object.keys(roomsObject).map((key) => ({\n            ...roomsObject[key],\n            uid: key,\n          }));\n\n          this.setState({\n            rooms: roomsList,\n            loading: false,\n          });\n        } else {\n          this.setState({ floors: null, loading: false });\n        }\n      });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.rooms().off();\n  }\n\n  onNextPage = () => {\n    this.setState((state) => ({ limit: state.limit + 5 }), this.onListenForFloors);\n  };\n\n  render() {\n    const { rooms, loading } = this.state;\n\n    return (\n      <AuthUserContext.Consumer>\n        {(authUser) => (\n          <div className=\"container add-padding-bottom\">\n            {loading && <div>Loading ...</div>}\n\n            {!rooms ? (\n              <div>There are no Rooms for your Building/Floor...</div>\n            ) : (\n              <div>\n                {rooms.length > this.state.limit && (\n                  <button className=\"btn btn-secondary btn-bot\" type=\"button\" onClick={this.onNextPage}>\n                    More\n                  </button>\n                )}\n\n                <ul className=\"ul-comp-list\">\n                  {rooms.map(\n                    (room) =>\n                      room.companyID === authUser.company_id && (\n                        <li key={room.uid}>\n                          <strong>Title:</strong> {room.roomTitle}\n                          <br />\n                          <strong>Location:</strong> {room.roomAddress}\n                          <br />\n                          <Link to={{ pathname: `${ROUTES.ROOMS}/${room.uid}`, state: { room } }}>Details</Link>\n                          <hr />\n                        </li>\n                      ),\n                  )}\n                </ul>\n              </div>\n            )}\n\n            {authUser.roles === 'ADMIN' && <CreateRoomForm authUser={authUser} />}\n          </div>\n        )}\n      </AuthUserContext.Consumer>\n    );\n  }\n}\n\nexport default withFirebase(RoomList);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { withFirebase } from '../../Firebase';\nimport { AuthUserContext } from '../../Session';\nimport * as ROUTES from '../../../routes';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\n\n\nclass RoomDetails extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      room: null,\n      editMode: false,\n      companyID: '',\n      roomTitle: '',\n      roomAddress: '',\n      ...props.location.state,\n    };\n  }\n\n  componentDidMount() {\n    if (this.state.room) {\n      return;\n    }\n\n    this.setState({ loading: true });\n\n    this.props.firebase.room(this.props.match.params.id).on('value', (snapshot) => {\n      this.setState({\n        room: snapshot.val(),\n        loading: false,\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.room(this.props.match.params.id).off();\n  }\n\n  onChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  onToggleEditMode = () => {\n    this.setState((state) => ({\n      editMode: !state.editMode,\n      companyID: this.state.companyID,\n      buildingID: this.state.buildingID,\n      floorID: this.state.floorID,\n      roomTitle: this.state.room.roomTitle,\n      roomAddress: this.state.room.roomAddress,\n    }));\n  };\n\n  onSaveEdit = () => {\n    const { room, roomTitle, roomAddress } = this.state;\n    const { uid, ...roomSnapshot } = room;\n\n    this.props.firebase.room(room.uid).set({\n      ...roomSnapshot,\n      roomTitle,\n      roomAddress,\n      editedAt: this.props.firebase.serverValue.TIMESTAMP,\n    });\n\n    this.setState({ editMode: false });\n  };\n\n  onRemoveRoom = (uid) => {\n    this.props.firebase.room(uid).remove();\n  };\n\n  render() {\n    const { loading, room, editMode, roomTitle, roomAddress } = this.state;\n\n    const fullDateCreated = new Date(room.createdAt * 1000).toString().split(' ');\n    const dateCreated =\n      fullDateCreated[0] +\n      ', ' +\n      fullDateCreated[1] +\n      ' ' +\n      fullDateCreated[2] +\n      ', ' +\n      fullDateCreated[4] +\n      ', ' +\n      fullDateCreated[6] +\n      fullDateCreated[7] +\n      fullDateCreated[8];\n\n    const fullDateEdited = new Date(room.editedAt * 1000).toString().split(' ');\n    const dateEdited =\n      fullDateEdited[0] +\n      ', ' +\n      fullDateEdited[1] +\n      ' ' +\n      fullDateEdited[2] +\n      ', ' +\n      fullDateEdited[4] +\n      ', ' +\n      fullDateEdited[6] +\n      fullDateEdited[7] +\n      fullDateEdited[8];\n\n    return (\n      <AuthUserContext.Consumer>\n        {(authUser) => (\n          <div className=\"container\">\n            {loading && <div>Loading ...</div>}\n\n            {room && (\n              <div>\n                <h5>Room ({room.uid})</h5>\n                <strong>Title:</strong> {room.roomTitle}\n                <br />\n                <strong>Location:</strong> {room.roomAddress}\n                <br />\n                <strong>Company ID:</strong> {room.companyID}\n                <br />\n                <strong>Building ID:</strong> {room.buildingID}\n                <br />\n                <strong>Floor ID:</strong> {room.floorID}\n                <br />\n                <strong>Created At:</strong> {dateCreated}\n                <br />\n                {room.editedAt && (\n                  <p>\n                    <strong>Last Edited At:</strong> {dateEdited}\n                  </p>\n                )}\n              </div>\n            )}\n\n            {authUser.uid === room.owner.ownerID && (\n              <div className=\"\">\n                {editMode ? (\n                  <div>\n                    <div>\n                      <input\n                        type=\"text\"\n                        className=\"col-10 form-input\"\n                        placeholder=\"Room Name?\"\n                        name=\"roomTitle\"\n                        value={roomTitle}\n                        onChange={this.onChange}\n                      />\n                      <input\n                        placeholder=\"Room Location/Number?\"\n                        type=\"text\"\n                        className=\"col-10 form-input\"\n                        name=\"roomAddress\"\n                        value={roomAddress}\n                        onChange={this.onChange}\n                      />\n                    </div>\n\n                    <div className=\"justify-me\">\n                      <button className=\"btn btn-secondary btn-bot\" onClick={this.onSaveEdit}>\n                        Save\n                      </button>\n                      <button className=\"btn btn-secondary btn-bot\" onClick={this.onToggleEditMode}>\n                        Reset\n                      </button>\n                    </div>\n                  </div>\n                ) : (\n                  <div className=\"row\">\n                    <button className=\"btn-li\" onClick={this.onToggleEditMode}>\n                      <FontAwesomeIcon icon={faEdit} />\n                    </button>\n\n                    <button type=\"button\" className=\"btn-li\" onClick={() => this.onRemoveRoom(room.uid)}>\n                      <Link to={ROUTES.ROOMS}>\n                        <FontAwesomeIcon icon={faTrash} />\n                      </Link>\n                    </button>\n                  </div>\n                )}\n              </div>\n            )}\n\n            <div className=\"row justify-me\">\n              <div className=\"ml-3 mr-2\">\n                <Link to={ROUTES.ROOMS}>\n                  <button className=\"btn btn-secondary\">Back</button>\n                </Link>\n              </div>\n              <div className=\"mr-2\">\n                <Link to={{ pathname: `${ROUTES.REPORTS}`, state: room }}>\n                  <button className=\"btn btn-success\">Create Report</button>\n                </Link>\n              </div>\n            </div>\n          </div>\n        )}\n      </AuthUserContext.Consumer>\n    );\n  }\n}\n\nexport default withFirebase(RoomDetails);\n","import RoomList from './RoomList';\nimport RoomDetails from './RoomDetails';\nimport RoomsPage from './RoomsPage';\n\nexport { RoomList, RoomDetails, RoomsPage };\nexport default RoomsPage;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport * as ROUTES from '../../../routes';\nimport { AuthUserContext, withAuthorization, withEmailVerification } from '../../Session';\nimport { CreateRoomForm } from '../../Utils';\nimport { RoomList, RoomDetails } from './index';\n\n\nconst RoomsPage = () => (\n  <AuthUserContext.Consumer>\n    {(authUser) => (\n      <div>\n        <div className=\"jumbotron paral paralsec\">\n          <h1 className=\"display-8 text-center mb-3\">Rooms</h1>\n        </div>\n\n        <Switch>\n          <Route exact path={ROUTES.ROOMS} component={RoomList} />\n          <Route exact path={ROUTES.ROOM_NEW}>\n            <CreateRoomForm authUser={authUser} />\n          </Route>\n          <Route exact path={ROUTES.ROOM_DETAILS} component={RoomDetails} />\n        </Switch>\n      </div>\n    )}\n  </AuthUserContext.Consumer>\n);\n\nconst condition = (authUser) => !!authUser;\n\nexport default compose(\n  withEmailVerification,\n  withAuthorization(condition),\n)(RoomsPage);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport * as ROUTES from '../../../routes';\nimport { withFirebase } from '../../Firebase';\nimport { AuthUserContext } from '../../Session';\nimport { CreateReportForm } from '../../Utils';\n\nclass ReportList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      reports: [],\n      limit: 5,\n      companyID: this.props.companyID,\n      buildingID: this.props.buildingID,\n      floorID: this.props.floorID,\n      roomID: this.props.roomID,\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ loading: true });\n\n    this.props.firebase\n      .reports()\n      .orderByChild('createdAt')\n      .on('value', (snapshot) => {\n        const reportsObject = snapshot.val();\n\n        if (reportsObject) {\n          const reportList = Object.keys(reportsObject).map((key) => ({\n            ...reportsObject[key],\n            uid: key,\n          }));\n\n          this.setState({\n            reports: reportList,\n            loading: false,\n          });\n        } else {\n          this.setState({ reports: null, loading: false });\n        }\n      });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.reports().off();\n  }\n\n  onNextPage = () => {\n    this.setState((state) => ({ limit: state.limit + 5 }), this.onListenForReports);\n  };\n\n  render() {\n    const { loading, reports } = this.state;\n\n    // const date = report.createdAt;\n    // const fullDate = new Date(report.createdAt * 1000).toString().split(' ');\n    // const date =\n    //   fullDate[0] + ', ' + fullDate[1] + ' ' + fullDate[2] + ', ' + fullDate[4] + ', ' + fullDate[6] + fullDate[7] + fullDate[8];\n    // // https://stackoverflow.com/a/57103780/13986242\n\n    return (\n      <AuthUserContext.Consumer>\n        {(authUser) => (\n          <div className=\"container add-padding-bottom\">\n            {loading && <div>Loading ...</div>}\n\n            {!reports ? (\n              <div>There are no Reports for your Company/Building...</div>\n            ) : (\n              <div>\n                {reports.length > this.state.limit && (\n                  <button className=\"btn btn-secondary btn-bot\" type=\"button\" onClick={this.onNextPage}>\n                    More\n                  </button>\n                )}\n\n                <ul className=\"ul-comp-list\">\n                  {reports.map(\n                    (report) =>\n                      report.location.companyID === authUser.company_id && (\n                        <li key={report.uid} className=\"r-details-card\">\n                          <Link to={{ pathname: `${ROUTES.REPORTS}/${report.uid}`, state: { report } }}>\n                            <div className=\"report-card\">\n                              <p className=\"comp-item report-title\">\n                                <strong>{report.reportTitle}</strong>\n                              </p>\n\n                              <hr />\n\n                              <p className=\"comp-item report-id\">\n                                <sup>\n                                  {/* {date} <br /> {report.uid} */}\n                                  {new Date(report.createdAt * 1000).toString().split(' ')} <br /> {report.uid}\n                                </sup>\n                              </p>\n                              <p className=\"comp-item\">\n                                <strong>Status: </strong>({report.reportStatus})\n                              </p>\n                              <p className=\"comp-item\">\n                                <strong>Request Type: </strong>({report.reportServiceType})\n                              </p>\n                              {/* <p className=\"comp-item report-desc\">\n                                <strong>Desc: </strong>\n                                {report.reportMessage}\n                              </p> */}\n                              <p className=\"comp-item report-location\">\n                                {/* <strong>Location: </strong> */}\n                                {/* Company ID: {report.location.companyID},<br /> */}\n                                {/* Building ID: {report.location.buildingID},<br /> */}\n                                {/* Floor ID: {report.location.floorID},<br /> */}\n                                <strong>Room ID:</strong>\n                                <span className=\"ticket-info\">{report.location.roomID}</span>\n                              </p>\n                              {/* <p className=\"comp-item\">\n                                <sub>{report.editedAt && <span> (Edited)</span>}</sub>\n                              </p> */}\n                            </div>\n                          </Link>\n                        </li>\n                      ),\n                  )}\n                </ul>\n              </div>\n            )}\n\n            <CreateReportForm authUser={authUser} />\n\n          </div>\n        )}\n      </AuthUserContext.Consumer>\n    );\n  }\n}\n\nexport default withFirebase(ReportList);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\n\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\n// https://www.npmjs.com/package/react-confirm-alert\n\nimport * as ROUTES from '../../../routes';\nimport { withFirebase } from '../../Firebase';\nimport { AuthUserContext } from '../../Session';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\n\n\nclass ReportDetail extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      editMode: false,\n      isBlocking: false,\n      upload: null,\n      progress: 0,\n\n      report: null,\n      // reportData: {\n      //   companyID: '',\n      //   buildingID: '',\n      //   floorID: '',\n      //   roomID: '',\n\n      reportTitle: '',\n      reportMessage: '',\n      reportStatus: 'OPEN',\n      reportServiceType: '',\n\n      //   reportImageURL: '',\n      //   reportImageName: '',\n      // },\n      ...props.location.state,\n    };\n  }\n\n  componentDidMount() {\n    if (this.state.report) {\n      return;\n    }\n\n    this.setState({ loading: true });\n\n    this.props.firebase.reports(this.props.match.params.id).on('value', (snapshot) => {\n      this.setState({\n        report: snapshot.val(),\n        loading: false,\n        isBlocking: false,\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.report(this.props.match.params.id).off();\n  }\n\n  onToggleEditMode = () => {\n    this.setState((state) => ({\n      editMode: !state.editMode,\n      reportTitle: this.state.report.reportTitle,\n      reportMessage: this.state.report.reportMessage,\n      reportStatus: this.state.report.reportStatus,\n      reportServiceType: this.state.report.reportServiceType,\n    }));\n  };\n\n  onChangeEdits = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n      isBlocking: event.target.value.length > 0,\n    });\n  };\n\n  onSaveEdit = () => {\n    const { report, reportTitle, reportMessage, reportStatus, reportServiceType } = this.state;\n\n    const { uid, ...reportSnapshot } = report;\n\n    this.props.firebase.report(report.uid).set({\n      ...reportSnapshot,\n      reportTitle,\n      reportMessage,\n      reportStatus,\n      reportServiceType,\n      // image_url,\n      // image_name,\n      editedAt: this.props.firebase.serverValue.TIMESTAMP,\n    });\n\n    this.setState({ editMode: false });\n  };\n\n  onRemoveReport = (uid) => {\n    const report = this.props.firebase.report(uid);\n\n    confirmAlert({\n      title: 'Confirm Delete',\n      message: 'Are you sure to do this.',\n      buttons: [\n        {\n          label: 'Yes',\n          onClick: () => {\n            // this.props.firebase.storage.ref().child('images').delete(), \n            report.remove();\n          },\n          // alert('Click Yes'),\n        },\n        {\n          label: 'No',\n          // onClick: () => alert('Click No'),\n        },\n      ],\n    });\n  };\n\n  render() {\n    const { loading, report, editMode, reportTitle, reportMessage, reportStatus, reportServiceType } = this.state;\n\n    const fullDateCreated = new Date(report.createdAt * 1000).toString().split(' ');\n    const dateCreated =\n      fullDateCreated[0] +\n      ', ' +\n      fullDateCreated[1] +\n      ' ' +\n      fullDateCreated[2] +\n      ', ' +\n      fullDateCreated[4] +\n      ', ' +\n      fullDateCreated[6] +\n      fullDateCreated[7] +\n      fullDateCreated[8];\n\n    const FullDateEdited = new Date(report.editedAt * 1000).toString().split(' ');\n    const dateEdited =\n      FullDateEdited[0] +\n      ', ' +\n      FullDateEdited[1] +\n      ' ' +\n      FullDateEdited[2] +\n      ', ' +\n      FullDateEdited[4] +\n      ', ' +\n      FullDateEdited[6] +\n      FullDateEdited[7] +\n      FullDateEdited[8];\n\n    return (\n      <AuthUserContext.Consumer>\n        {(authUser) => (\n          <div className=\"content-wrapper\">\n            {loading && <div>Loading ...</div>}\n\n            {report && (\n              <div className=\"container\">\n                <div className=\"r-details-card\">\n                  <strong>Company:</strong> {report.location.companyID}\n                  <br />\n                  <strong>Building:</strong> {report.location.buildingID}\n                  <br />\n                  <strong>Reporter:</strong> {report.reporter.ownerName}\n                  <br />\n                  <strong>Created At:</strong> {dateCreated}\n                  <br />\n                  {report.editedAt && (\n                    <p>\n                      <strong>Last Edited At:</strong> {dateEdited}\n                    </p>\n                  )}\n                </div>\n                <br />\n\n                <div className=\"r-details-card\">\n                  <p className=\"comp-item\">\n                    <strong>Subject: </strong>\n                    {report.reportTitle}\n                  </p>\n                  <p className=\"comp-item\">\n                    <strong>Ticket Id:</strong> <span className=\"ticket-info\">{report.uid}</span>\n                  </p>\n                  <p className=\"comp-item\">\n                    <strong>Request Status: </strong>({report.reportStatus})\n                  </p>\n                  <p className=\"comp-item\">\n                    <strong>Request Type: </strong>({report.reportServiceType})\n                  </p>\n                  <p className=\"comp-item report-desc\">\n                    <strong>Desc: </strong>\n                    {report.reportMessage}\n                  </p>\n                  {report.image && (\n                    <div>\n                      <a href={report.image}>\n                        <img src={report.image} alt=\"Uploaded Images\" height=\"150\" width=\"150\" />\n                      </a>\n                    </div>\n                  )}\n                </div>\n              </div>\n            )}\n\n            {authUser.uid === report.reporter.ownerID && (\n              <div>\n                {editMode ? (\n                  <div className=\"text-center edit-container\">\n                    <div className=\"form-row\">\n                      <input\n                        className=\"form-input col-10\"\n                        type=\"text\"\n                        placeholder=\"Report Title\"\n                        name=\"reportTitle\"\n                        value={reportTitle}\n                        onChange={this.onChangeEdits}\n                      />\n                    </div>\n                    <div className=\"form-row\">\n                      <div className=\"col-5\">\n                        <select\n                          className=\"form-control\"\n                          name=\"reportServiceType\"\n                          value={reportServiceType}\n                          onChange={this.onChangeEdits}\n                        >\n                          <option value=\"\" disabled>\n                            Select a Service\n                          </option>\n                          <option value=\"MAINTENANCE\">Maintenance / Repair</option>\n                          <option value=\"HAZARD\">Hazard Report</option>\n                          <option value=\"SERVICE\">Service Report</option>\n                        </select>\n                      </div>\n                      <div className=\"col-4\">\n                        <select className=\"form-control\" name=\"reportStatus\" value={reportStatus} onChange={this.onChangeEdits}>\n                          <option value=\"\" disabled>\n                            Select a Status\n                          </option>\n                          <option value=\"OPEN\">OPEN</option>\n                          <option value=\"CLOSED\">CLOSED</option>\n                          <option value=\"URGENT\">URGENT</option>\n                        </select>\n                      </div>\n                    </div>\n                    <textarea\n                      rows=\"1\"\n                      className=\"form-input col-10\"\n                      type=\"text\"\n                      name=\"reportMessage\"\n                      value={reportMessage}\n                      onChange={this.onChangeEdits}\n                    />\n\n                    <div className=\"form-row edit-btn-container\">\n                      <button className=\"btn btn-primary\" onClick={this.onSaveEdit}>\n                        Save\n                      </button>\n                      <button className=\"btn btn-secondary\" onClick={this.onToggleEditMode}>\n                        Reset\n                      </button>\n                    </div>\n                  </div>\n                ) : (\n                  <div className=\"row justify-me\">\n                    <button className=\"btn-li\" onClick={this.onToggleEditMode}>\n                      <FontAwesomeIcon icon={faEdit} />\n                    </button>\n\n                    <button className=\"btn-li\" type=\"button\" onClick={() => this.onRemoveReport(report.uid)}>\n                      <FontAwesomeIcon icon={faTrash} />\n                    </button>\n                  </div>\n                )}\n              </div>\n            )}\n\n            <div className=\"container text-center mt-3\">\n              <Link to={ROUTES.REPORTS}>\n                <button className=\"btn btn-secondary\">Back </button>\n              </Link>\n            </div>\n          </div>\n        )}\n      </AuthUserContext.Consumer>\n    );\n  }\n}\n\nexport default withFirebase(ReportDetail);\n","import ReportList from './ReportList';\nimport ReportDetails from './ReportDetails';\nimport ReportsPage from './ReportsPage';\n\nexport { ReportList, ReportDetails, ReportsPage };\nexport default ReportsPage;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport * as ROUTES from '../../../routes';\nimport { AuthUserContext, withAuthorization, withEmailVerification } from '../../Session';\nimport { CreateReportForm } from '../../Utils';\nimport { ReportList, ReportDetails } from './index';\n\n\nconst ReportsPage = () => (\n  <AuthUserContext.Consumer>\n    {(authUser) => (\n      <div>\n        <div className=\"jumbotron paral paralsec\">\n          <h1 className=\"display-8 text-center mb-3\">Reports</h1>\n        </div>\n        <Switch>\n          <Route exact path={ROUTES.REPORTS} component={ReportList} />\n          <Route exact path={ROUTES.REPORT_NEW}>\n            <CreateReportForm authUser={authUser} />\n          </Route>\n          <Route exact path={ROUTES.REPORT_DETAILS} component={ReportDetails} />\n        </Switch>\n      </div>\n    )}\n  </AuthUserContext.Consumer>\n);\n\nconst condition = (authUser) => !!authUser;\n\nexport default compose(\n  withEmailVerification,\n  withAuthorization(condition),\n)(ReportsPage);\n","import React from 'react';\nimport { HashRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport { AuthUserContext, withAuthentication } from '../Session';\nimport * as ROUTES from '../../routes';\n\nimport Navigation from '../Navigation';\n\nimport { SignUpPage, SignInPage, PasswordForgetPage } from '../Auth';\n\nimport {\n  LandingPage,\n  NotFoundPage,\n  AccountPage,\n  AdminPage,\n  CompaniesPage,\n  BuildingsPage,\n  FloorsPage,\n  RoomsPage,\n  ReportsPage,\n} from '../Displays';\n\nconst App = () => (\n  <Router>\n    <div>\n    <div className=\"hidden text-center\"> \n      <div className=\"row desktop-banner\">\n        <div className=\"col\">\n        <img\n        className=\"square\" alt=\"logo\"\n        src=\"https://github.com/ChrisBarnes7404/React-WebBased-MVP/blob/master/public/images/minerva-transparent-vector.png?raw=true\"\n      />\n        </div>\n        <div className=\"col\">\n          <div className='card directive-card'>\n          <img\n        className=\"little-square\" alt=\"logo\"\n        src=\"https://github.com/ChrisBarnes7404/React-WebBased-MVP/blob/master/public/images/minerva-transparent-vector.png?raw=true\"\n      />     \n          <div class=\"card-body\">\n            <p class=\"card-text\">Visit us on mobile to get the full experience!</p>\n          </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div className=\"site-content\">\n      <AuthUserContext.Consumer>\n        {(authUser) =>\n          authUser ? (\n            <Switch>\n              <Route path={ROUTES.PASSWORD_FORGET} component={PasswordForgetPage} />\n\n              <Route path={ROUTES.ADMIN} component={AdminPage} />\n              <Route path={ROUTES.ACCOUNT} component={AccountPage} />\n              <Route path={ROUTES.COMPANIES} component={CompaniesPage} />\n              <Route path={ROUTES.BUILDINGS} component={BuildingsPage} />\n              <Route path={ROUTES.FLOORS} component={FloorsPage} />\n              <Route path={ROUTES.ROOMS} component={RoomsPage} />\n              <Route path={ROUTES.REPORTS} component={ReportsPage} />\n\n              <Route exact path={ROUTES.HOME}>\n                <Redirect to={ROUTES.REPORTS} />\n                {/* <HomePage /> */}\n              </Route>\n              <Route exact path={ROUTES.LANDING}>\n                <Redirect to={ROUTES.HOME} />\n              </Route>\n              <Route path={ROUTES.SIGN_UP}>\n                <Redirect to={ROUTES.HOME} />\n              </Route>\n              <Route path={ROUTES.SIGN_IN}>\n                <Redirect to={ROUTES.HOME} />\n              </Route>\n\n              <Route path={ROUTES.NOT_FOUND} component={NotFoundPage} />\n            </Switch>\n          ) : (\n            <Switch>\n              <Route exact path={ROUTES.LANDING} component={LandingPage} />\n              <Route exact path={ROUTES.SIGN_UP} component={SignUpPage} />\n              <Route exact path={ROUTES.SIGN_IN} component={SignInPage} />\n              <Route exact path={ROUTES.PASSWORD_FORGET} component={PasswordForgetPage} />\n\n              <Route path={ROUTES.HOME}>\n                <Redirect to={ROUTES.SIGN_IN} />\n              </Route>\n              <Route path={ROUTES.ADMIN}>\n                <Redirect to={ROUTES.SIGN_IN} />\n              </Route>\n              <Route path={ROUTES.ACCOUNT}>\n                <Redirect to={ROUTES.SIGN_IN} />\n              </Route>\n              <Route path={ROUTES.COMPANIES}>\n                <Redirect to={ROUTES.SIGN_IN} />\n              </Route>\n              <Route path={ROUTES.BUILDINGS}>\n                <Redirect to={ROUTES.SIGN_IN} />\n              </Route>\n              <Route path={ROUTES.FLOORS}>\n                <Redirect to={ROUTES.SIGN_IN} />\n              </Route>\n              <Route path={ROUTES.ROOMS}>\n                <Redirect to={ROUTES.SIGN_IN} />\n              </Route>\n              <Route path={ROUTES.REPORTS}>\n                <Redirect to={ROUTES.SIGN_IN} />\n              </Route>\n\n              <Route path={ROUTES.NOT_FOUND} component={NotFoundPage} />\n            </Switch>\n          )\n        }\n      </AuthUserContext.Consumer>\n\n      <Navigation />\n      </div>\n    </div>\n  </Router>\n);\n\nexport default withAuthentication(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport Firebase, { FirebaseContext } from './components/Firebase';\n\nimport './styles.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <FirebaseContext.Provider value={new Firebase()}>\n    <App />\n  </FirebaseContext.Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}